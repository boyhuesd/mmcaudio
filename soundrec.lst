;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 08/07/2013 9:48:11 CH
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF005EF59  	GOTO        2738
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_SPI1_Read:
;__Lib_SPI_c345.c,67 :: 		
;__Lib_SPI_c345.c,68 :: 		
0x001C	0xFFC9C2FF  	MOVFF       FARG_SPI1_Read_buffer, SSPBUF
;__Lib_SPI_c345.c,69 :: 		
L_SPI1_Read6:
0x0020	0xB0C7      	BTFSC       SSPSTAT, 0 
0x0022	0xD002      	BRA         L_SPI1_Read7
;__Lib_SPI_c345.c,70 :: 		
0x0024	0x0000      	NOP
0x0026	0xD7FC      	BRA         L_SPI1_Read6
L_SPI1_Read7:
;__Lib_SPI_c345.c,71 :: 		
0x0028	0xF000CFC9  	MOVFF       SSPBUF, R0
;__Lib_SPI_c345.c,72 :: 		
L_end_SPI1_Read:
0x002C	0x0012      	RETURN      0
; end of _SPI1_Read
_____DoIFC:
;__Lib_System.c,93 :: 		
;__Lib_System.c,94 :: 		
0x002E	0x50F2      	MOVF        INTCON, 0, 0
;__Lib_System.c,95 :: 		
0x0030	0x6E02      	MOVWF       R2, 0
;__Lib_System.c,96 :: 		
0x0032	0x9EF2      	BCF         INTCON, 7 
;__Lib_System.c,97 :: 		
0x0034	0x0005      	PUSH
;__Lib_System.c,98 :: 		
0x0036	0x6AFF      	CLRF        TOSU, 0
;__Lib_System.c,99 :: 		
0x0038	0x5001      	MOVF        R1, 0, 0
;__Lib_System.c,100 :: 		
0x003A	0x6EFE      	MOVWF       TOSH, 0
;__Lib_System.c,101 :: 		
0x003C	0x5000      	MOVF        R0, 0, 0
;__Lib_System.c,102 :: 		
0x003E	0x6EFD      	MOVWF       TOSL, 0
;__Lib_System.c,103 :: 		
0x0040	0xBE02      	BTFSC       R2, 7, 0
;__Lib_System.c,104 :: 		
0x0042	0x8EF2      	BSF         INTCON, 7, 0
;__Lib_System.c,105 :: 		
;__Lib_System.c,107 :: 		
L_end_____DoIFC:
0x0044	0x0012      	RETURN      0
; end of _____DoIFC
_SPI1_Write:
;__Lib_SPI_c345.c,76 :: 		
;__Lib_SPI_c345.c,79 :: 		
0x0046	0xFFC9C2FE  	MOVFF       FARG_SPI1_Write_data_, SSPBUF
;__Lib_SPI_c345.c,80 :: 		
L_SPI1_Write8:
0x004A	0xB0C7      	BTFSC       SSPSTAT, 0 
0x004C	0xD002      	BRA         L_SPI1_Write9
;__Lib_SPI_c345.c,81 :: 		
0x004E	0x0000      	NOP
0x0050	0xD7FC      	BRA         L_SPI1_Write8
L_SPI1_Write9:
;__Lib_SPI_c345.c,82 :: 		
0x0052	0xF000CFC9  	MOVFF       SSPBUF, R0
;__Lib_SPI_c345.c,84 :: 		
L_end_SPI1_Write:
0x0056	0x0012      	RETURN      0
; end of _SPI1_Write
_UART1_Write:
;__Lib_UART_c67.c,58 :: 		
;__Lib_UART_c67.c,59 :: 		
L_UART1_Write3:
0x0058	0xB2AC      	BTFSC       TXSTA, 1 
0x005A	0xD002      	BRA         L_UART1_Write4
;__Lib_UART_c67.c,60 :: 		
0x005C	0x0000      	NOP
0x005E	0xD7FC      	BRA         L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_c67.c,61 :: 		
0x0060	0xFFADC2FE  	MOVFF       FARG_UART1_Write_data_, TXREG
;__Lib_UART_c67.c,62 :: 		
L_end_UART1_Write:
0x0064	0x0012      	RETURN      0
; end of _UART1_Write
__Lib_Mmc_Mmc_DeSelect:
;__Lib_Mmc.c,67 :: 		
;__Lib_Mmc.c,69 :: 		
0x0066	0x848B      	BSF         Mmc_Chip_Select, BitPos(Mmc_Chip_Select+0) 
;__Lib_Mmc.c,73 :: 		
0x0068	0xFFE1C0C2  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x006C	0xFFE2C0C3  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x0070	0x0EFF      	MOVLW       255
0x0072	0x6EE6      	MOVWF       POSTINC1 
0x0074	0xF000C0C0  	MOVFF       _SPI_Rd_Ptr, R0
0x0078	0xF001C0C1  	MOVFF       _SPI_Rd_Ptr+1, R1
0x007C	0xDFD8      	RCALL       _____DoIFC
;__Lib_Mmc.c,74 :: 		
L_end_Mmc_DeSelect:
0x007E	0x0012      	RETURN      0
; end of __Lib_Mmc_Mmc_DeSelect
__Lib_Mmc_Mmc_Select:
;__Lib_Mmc.c,53 :: 		
;__Lib_Mmc.c,55 :: 		
0x0080	0x948B      	BCF         Mmc_Chip_Select, BitPos(Mmc_Chip_Select+0) 
;__Lib_Mmc.c,65 :: 		
L_end_Mmc_Select:
0x0082	0x0012      	RETURN      0
; end of __Lib_Mmc_Mmc_Select
__Lib_Mmc_Mmc_Send_Command:
;__Lib_Mmc.c,77 :: 		
;__Lib_Mmc.c,81 :: 		
0x0084	0x0E40      	MOVLW       64
0x0086	0x0103      	MOVLB       3
0x0088	0x2501      	ADDWF       FARG___Lib_Mmc_Mmc_Send_Command_partial_cmm, 0, 1
0x008A	0x6E00      	MOVWF       R0 
0x008C	0xFFE1C0C2  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x0090	0xFFE2C0C3  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x0094	0xFFE6C000  	MOVFF       R0, POSTINC1
0x0098	0xF000C0C0  	MOVFF       _SPI_Rd_Ptr, R0
0x009C	0xF001C0C1  	MOVFF       _SPI_Rd_Ptr+1, R1
0x00A0	0xDFC6      	RCALL       _____DoIFC
;__Lib_Mmc.c,82 :: 		
0x00A2	0xFFE1C0C2  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x00A6	0xFFE2C0C3  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x00AA	0xFFE6C305  	MOVFF       FARG___Lib_Mmc_Mmc_Send_Command_content+3, POSTINC1
0x00AE	0xF000C0C0  	MOVFF       _SPI_Rd_Ptr, R0
0x00B2	0xF001C0C1  	MOVFF       _SPI_Rd_Ptr+1, R1
0x00B6	0xDFBB      	RCALL       _____DoIFC
;__Lib_Mmc.c,83 :: 		
0x00B8	0xFFE1C0C2  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x00BC	0xFFE2C0C3  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x00C0	0xFFE6C304  	MOVFF       FARG___Lib_Mmc_Mmc_Send_Command_content+2, POSTINC1
0x00C4	0xF000C0C0  	MOVFF       _SPI_Rd_Ptr, R0
0x00C8	0xF001C0C1  	MOVFF       _SPI_Rd_Ptr+1, R1
0x00CC	0xDFB0      	RCALL       _____DoIFC
;__Lib_Mmc.c,84 :: 		
0x00CE	0xFFE1C0C2  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x00D2	0xFFE2C0C3  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x00D6	0xFFE6C303  	MOVFF       FARG___Lib_Mmc_Mmc_Send_Command_content+1, POSTINC1
0x00DA	0xF000C0C0  	MOVFF       _SPI_Rd_Ptr, R0
0x00DE	0xF001C0C1  	MOVFF       _SPI_Rd_Ptr+1, R1
0x00E2	0xDFA5      	RCALL       _____DoIFC
;__Lib_Mmc.c,85 :: 		
0x00E4	0xFFE1C0C2  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x00E8	0xFFE2C0C3  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x00EC	0xFFE6C302  	MOVFF       FARG___Lib_Mmc_Mmc_Send_Command_content, POSTINC1
0x00F0	0xF000C0C0  	MOVFF       _SPI_Rd_Ptr, R0
0x00F4	0xF001C0C1  	MOVFF       _SPI_Rd_Ptr+1, R1
0x00F8	0xDF9A      	RCALL       _____DoIFC
;__Lib_Mmc.c,86 :: 		
0x00FA	0xFFE1C0C2  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x00FE	0xFFE2C0C3  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x0102	0xFFE6C306  	MOVFF       FARG___Lib_Mmc_Mmc_Send_Command_crc, POSTINC1
0x0106	0xF000C0C0  	MOVFF       _SPI_Rd_Ptr, R0
0x010A	0xF001C0C1  	MOVFF       _SPI_Rd_Ptr+1, R1
0x010E	0xDF8F      	RCALL       _____DoIFC
;__Lib_Mmc.c,89 :: 		
0x0110	0x0102      	MOVLB       2
0x0112	0x6BFC      	CLRF        __Lib_Mmc_Mmc_Send_Command_timeout_L0, 1
0x0114	0x6BFD      	CLRF        __Lib_Mmc_Mmc_Send_Command_timeout_L0+1, 1
;__Lib_Mmc.c,90 :: 		
L___Lib_Mmc_Mmc_Send_Command0:
;__Lib_Mmc.c,91 :: 		
0x0116	0xFFE1C0C2  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x011A	0xFFE2C0C3  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x011E	0x0EFF      	MOVLW       255
0x0120	0x6EE6      	MOVWF       POSTINC1 
0x0122	0xF000C0C0  	MOVFF       _SPI_Rd_Ptr, R0
0x0126	0xF001C0C1  	MOVFF       _SPI_Rd_Ptr+1, R1
0x012A	0xDF81      	RCALL       _____DoIFC
0x012C	0xF2FBC000  	MOVFF       R0, __Lib_Mmc_Mmc_Send_Command_response_L0
;__Lib_Mmc.c,92 :: 		
0x0130	0x0102      	MOVLB       2
0x0132	0x4BFC      	INFSNZ      __Lib_Mmc_Mmc_Send_Command_timeout_L0, 1, 1
0x0134	0x2BFD      	INCF        __Lib_Mmc_Mmc_Send_Command_timeout_L0+1, 1, 1
;__Lib_Mmc.c,93 :: 		
0x0136	0x0E80      	MOVLW       128
0x0138	0x1400      	ANDWF       R0, 0 
0x013A	0x6E01      	MOVWF       R1 
0x013C	0x5001      	MOVF        R1, 0 
0x013E	0x0A00      	XORLW       0
0x0140	0xE007      	BZ          L___Lib_Mmc_Mmc_Send_Command75
0x0142	0x0E00      	MOVLW       0
0x0144	0x5DFD      	SUBWF       __Lib_Mmc_Mmc_Send_Command_timeout_L0+1, 0, 1
0x0146	0xE102      	BNZ         L___Lib_Mmc_Mmc_Send_Command80
0x0148	0x0E64      	MOVLW       100
0x014A	0x5DFC      	SUBWF       __Lib_Mmc_Mmc_Send_Command_timeout_L0, 0, 1
L___Lib_Mmc_Mmc_Send_Command80:
0x014C	0xE201      	BC          L___Lib_Mmc_Mmc_Send_Command75
0x014E	0xD7E3      	BRA         L___Lib_Mmc_Mmc_Send_Command0
L___Lib_Mmc_Mmc_Send_Command75:
;__Lib_Mmc.c,95 :: 		
0x0150	0xF000C2FB  	MOVFF       __Lib_Mmc_Mmc_Send_Command_response_L0, R0
;__Lib_Mmc.c,96 :: 		
L_end_Mmc_Send_Command:
0x0154	0x0012      	RETURN      0
; end of __Lib_Mmc_Mmc_Send_Command
_Div_16x16_U:
;__Lib_Math.c,102 :: 		
;__Lib_Math.c,109 :: 		
0x0156	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,110 :: 		
0x0158	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,111 :: 		
0x015A	0x0E10      	MOVLW       16
;__Lib_Math.c,112 :: 		
0x015C	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,113 :: 		
0x015E	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,114 :: 		
0x0160	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,115 :: 		
0x0162	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,116 :: 		
0x0164	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,117 :: 		
0x0166	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,118 :: 		
0x0168	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,119 :: 		
0x016A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,120 :: 		
0x016C	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,121 :: 		
0x016E	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,122 :: 		
0x0170	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,123 :: 		
0x0172	0xD007      	BRA         $+16
;__Lib_Math.c,124 :: 		
0x0174	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,125 :: 		
0x0176	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,126 :: 		
0x0178	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,127 :: 		
0x017A	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,128 :: 		
0x017C	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,129 :: 		
0x017E	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,130 :: 		
0x0180	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,131 :: 		
0x0182	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,132 :: 		
0x0184	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,133 :: 		
0x0186	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,134 :: 		
0x0188	0xD7EA      	BRA         $-42
;__Lib_Math.c,136 :: 		
L_end_Div_16x16_U:
0x018A	0x0012      	RETURN      0
; end of _Div_16x16_U
_UART_Write:
;__Lib_UART_c67.c,119 :: 		
;__Lib_UART_c67.c,120 :: 		
0x018C	0xFFE1C0DC  	MOVFF       _UART_Wr_Ptr+2, FSR1L
0x0190	0xFFE2C0DD  	MOVFF       _UART_Wr_Ptr+3, FSR1H
0x0194	0xFFE6C2F6  	MOVFF       FARG_UART_Write__data, POSTINC1
0x0198	0xF000C0DA  	MOVFF       _UART_Wr_Ptr, R0
0x019C	0xF001C0DB  	MOVFF       _UART_Wr_Ptr+1, R1
0x01A0	0xDF46      	RCALL       _____DoIFC
;__Lib_UART_c67.c,121 :: 		
L_end_UART_Write:
0x01A2	0x0012      	RETURN      0
; end of _UART_Write
__Lib_Mmc_Mmc_UnIdle:
;__Lib_Mmc.c,98 :: 		
;__Lib_Mmc.c,102 :: 		
0x01A4	0x0102      	MOVLB       2
0x01A6	0x6BF7      	CLRF        __Lib_Mmc_Mmc_UnIdle_cnt_L0, 1
0x01A8	0x6BF8      	CLRF        __Lib_Mmc_Mmc_UnIdle_cnt_L0+1, 1
L___Lib_Mmc_Mmc_UnIdle5:
0x01AA	0x0E27      	MOVLW       39
0x01AC	0x5DF8      	SUBWF       __Lib_Mmc_Mmc_UnIdle_cnt_L0+1, 0, 1
0x01AE	0xE102      	BNZ         L___Lib_Mmc_Mmc_UnIdle82
0x01B0	0x0E10      	MOVLW       16
0x01B2	0x5DF7      	SUBWF       __Lib_Mmc_Mmc_UnIdle_cnt_L0, 0, 1
L___Lib_Mmc_Mmc_UnIdle82:
0x01B4	0xB0D8      	BTFSC       STATUS, 0 
0x01B6	0xD0A3      	BRA         L___Lib_Mmc_Mmc_UnIdle6
;__Lib_Mmc.c,103 :: 		
0x01B8	0x0E00      	MOVLW       0
0x01BA	0x0A00      	XORLW       0
0x01BC	0xE102      	BNZ         L___Lib_Mmc_Mmc_UnIdle83
0x01BE	0x0E00      	MOVLW       0
0x01C0	0x19F6      	XORWF       FARG___Lib_Mmc_Mmc_UnIdle_ctype, 0, 1
L___Lib_Mmc_Mmc_UnIdle83:
0x01C2	0xE117      	BNZ         L___Lib_Mmc_Mmc_UnIdle8
;__Lib_Mmc.c,104 :: 		
0x01C4	0xDF5D      	RCALL       __Lib_Mmc_Mmc_Select
;__Lib_Mmc.c,106 :: 		
0x01C6	0x0E01      	MOVLW       1
0x01C8	0x0103      	MOVLB       3
0x01CA	0x6F01      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_partial_cmm, 1
0x01CC	0x6B02      	CLRF        FARG___Lib_Mmc_Mmc_Send_Command_content, 1
0x01CE	0x6B03      	CLRF        FARG___Lib_Mmc_Mmc_Send_Command_content+1, 1
0x01D0	0x6B04      	CLRF        FARG___Lib_Mmc_Mmc_Send_Command_content+2, 1
0x01D2	0x6B05      	CLRF        FARG___Lib_Mmc_Mmc_Send_Command_content+3, 1
0x01D4	0x0EFF      	MOVLW       255
0x01D6	0x6F06      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_crc, 1
0x01D8	0xDF55      	RCALL       __Lib_Mmc_Mmc_Send_Command
0x01DA	0xF2F9C000  	MOVFF       R0, __Lib_Mmc_Mmc_UnIdle_response_L0
;__Lib_Mmc.c,107 :: 		
0x01DE	0xDF43      	RCALL       __Lib_Mmc_Mmc_DeSelect
;__Lib_Mmc.c,108 :: 		
0x01E0	0x0102      	MOVLB       2
0x01E2	0x51F9      	MOVF        __Lib_Mmc_Mmc_UnIdle_response_L0, 0, 1
0x01E4	0x0A00      	XORLW       0
0x01E6	0xE104      	BNZ         L___Lib_Mmc_Mmc_UnIdle9
;__Lib_Mmc.c,110 :: 		
0x01E8	0x0100      	MOVLB       0
0x01EA	0x6BBD      	CLRF        __Lib_Mmc_cardType, 1
;__Lib_Mmc.c,111 :: 		
0x01EC	0x6A00      	CLRF        R0 
0x01EE	0xD089      	BRA         L_end_Mmc_UnIdle
;__Lib_Mmc.c,112 :: 		
L___Lib_Mmc_Mmc_UnIdle9:
;__Lib_Mmc.c,113 :: 		
0x01F0	0xD082      	BRA         L___Lib_Mmc_Mmc_UnIdle10
L___Lib_Mmc_Mmc_UnIdle8:
;__Lib_Mmc.c,115 :: 		
0x01F2	0xDF46      	RCALL       __Lib_Mmc_Mmc_Select
;__Lib_Mmc.c,118 :: 		
0x01F4	0x0E37      	MOVLW       55
0x01F6	0x0103      	MOVLB       3
0x01F8	0x6F01      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_partial_cmm, 1
0x01FA	0x6B02      	CLRF        FARG___Lib_Mmc_Mmc_Send_Command_content, 1
0x01FC	0x6B03      	CLRF        FARG___Lib_Mmc_Mmc_Send_Command_content+1, 1
0x01FE	0x6B04      	CLRF        FARG___Lib_Mmc_Mmc_Send_Command_content+2, 1
0x0200	0x6B05      	CLRF        FARG___Lib_Mmc_Mmc_Send_Command_content+3, 1
0x0202	0x0EFF      	MOVLW       255
0x0204	0x6F06      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_crc, 1
0x0206	0xDF3E      	RCALL       __Lib_Mmc_Mmc_Send_Command
0x0208	0xF2F9C000  	MOVFF       R0, __Lib_Mmc_Mmc_UnIdle_response_L0
;__Lib_Mmc.c,119 :: 		
0x020C	0xDF2C      	RCALL       __Lib_Mmc_Mmc_DeSelect
;__Lib_Mmc.c,120 :: 		
0x020E	0x0102      	MOVLB       2
0x0210	0x51F9      	MOVF        __Lib_Mmc_Mmc_UnIdle_response_L0, 0, 1
0x0212	0x0A01      	XORLW       1
0x0214	0xA4D8      	BTFSS       STATUS, 2 
0x0216	0xD06E      	BRA         L___Lib_Mmc_Mmc_UnIdle11
;__Lib_Mmc.c,122 :: 		
0x0218	0xDF33      	RCALL       __Lib_Mmc_Mmc_Select
;__Lib_Mmc.c,124 :: 		
0x021A	0x0E29      	MOVLW       41
0x021C	0x0103      	MOVLB       3
0x021E	0x6F01      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_partial_cmm, 1
0x0220	0x0E00      	MOVLW       0
0x0222	0x6F02      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_content, 1
0x0224	0x0E00      	MOVLW       0
0x0226	0x6F03      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_content+1, 1
0x0228	0x0E00      	MOVLW       0
0x022A	0x6F04      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_content+2, 1
0x022C	0x0E40      	MOVLW       64
0x022E	0x6F05      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_content+3, 1
0x0230	0x0EFF      	MOVLW       255
0x0232	0x6F06      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_crc, 1
0x0234	0xDF27      	RCALL       __Lib_Mmc_Mmc_Send_Command
0x0236	0xF2F9C000  	MOVFF       R0, __Lib_Mmc_Mmc_UnIdle_response_L0
;__Lib_Mmc.c,125 :: 		
0x023A	0xDF15      	RCALL       __Lib_Mmc_Mmc_DeSelect
;__Lib_Mmc.c,126 :: 		
0x023C	0x0102      	MOVLB       2
0x023E	0x51F9      	MOVF        __Lib_Mmc_Mmc_UnIdle_response_L0, 0, 1
0x0240	0x0A00      	XORLW       0
0x0242	0xE157      	BNZ         L___Lib_Mmc_Mmc_UnIdle12
;__Lib_Mmc.c,127 :: 		
0x0244	0x0E00      	MOVLW       0
0x0246	0x0A00      	XORLW       0
0x0248	0xE102      	BNZ         L___Lib_Mmc_Mmc_UnIdle84
0x024A	0x0E02      	MOVLW       2
0x024C	0x19F6      	XORWF       FARG___Lib_Mmc_Mmc_UnIdle_ctype, 0, 1
L___Lib_Mmc_Mmc_UnIdle84:
0x024E	0xE14C      	BNZ         L___Lib_Mmc_Mmc_UnIdle13
;__Lib_Mmc.c,128 :: 		
0x0250	0xDF17      	RCALL       __Lib_Mmc_Mmc_Select
;__Lib_Mmc.c,129 :: 		
0x0252	0x0E3A      	MOVLW       58
0x0254	0x0103      	MOVLB       3
0x0256	0x6F01      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_partial_cmm, 1
0x0258	0x6B02      	CLRF        FARG___Lib_Mmc_Mmc_Send_Command_content, 1
0x025A	0x6B03      	CLRF        FARG___Lib_Mmc_Mmc_Send_Command_content+1, 1
0x025C	0x6B04      	CLRF        FARG___Lib_Mmc_Mmc_Send_Command_content+2, 1
0x025E	0x6B05      	CLRF        FARG___Lib_Mmc_Mmc_Send_Command_content+3, 1
0x0260	0x0EFF      	MOVLW       255
0x0262	0x6F06      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_crc, 1
0x0264	0xDF0F      	RCALL       __Lib_Mmc_Mmc_Send_Command
0x0266	0xF2F9C000  	MOVFF       R0, __Lib_Mmc_Mmc_UnIdle_response_L0
;__Lib_Mmc.c,130 :: 		
0x026A	0xFFE1C0C2  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x026E	0xFFE2C0C3  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x0272	0x0EFF      	MOVLW       255
0x0274	0x6EE6      	MOVWF       POSTINC1 
0x0276	0xF000C0C0  	MOVFF       _SPI_Rd_Ptr, R0
0x027A	0xF001C0C1  	MOVFF       _SPI_Rd_Ptr+1, R1
0x027E	0xDED7      	RCALL       _____DoIFC
0x0280	0xF2FAC000  	MOVFF       R0, __Lib_Mmc_Mmc_UnIdle_response2_L0
;__Lib_Mmc.c,131 :: 		
0x0284	0xFFE1C0C2  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x0288	0xFFE2C0C3  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x028C	0x0EFF      	MOVLW       255
0x028E	0x6EE6      	MOVWF       POSTINC1 
0x0290	0xF000C0C0  	MOVFF       _SPI_Rd_Ptr, R0
0x0294	0xF001C0C1  	MOVFF       _SPI_Rd_Ptr+1, R1
0x0298	0xDECA      	RCALL       _____DoIFC
;__Lib_Mmc.c,132 :: 		
0x029A	0xFFE1C0C2  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x029E	0xFFE2C0C3  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x02A2	0x0EFF      	MOVLW       255
0x02A4	0x6EE6      	MOVWF       POSTINC1 
0x02A6	0xF000C0C0  	MOVFF       _SPI_Rd_Ptr, R0
0x02AA	0xF001C0C1  	MOVFF       _SPI_Rd_Ptr+1, R1
0x02AE	0xDEBF      	RCALL       _____DoIFC
;__Lib_Mmc.c,133 :: 		
0x02B0	0xFFE1C0C2  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x02B4	0xFFE2C0C3  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x02B8	0x0EFF      	MOVLW       255
0x02BA	0x6EE6      	MOVWF       POSTINC1 
0x02BC	0xF000C0C0  	MOVFF       _SPI_Rd_Ptr, R0
0x02C0	0xF001C0C1  	MOVFF       _SPI_Rd_Ptr+1, R1
0x02C4	0xDEB4      	RCALL       _____DoIFC
;__Lib_Mmc.c,134 :: 		
0x02C6	0xDECF      	RCALL       __Lib_Mmc_Mmc_DeSelect
;__Lib_Mmc.c,135 :: 		
0x02C8	0x0102      	MOVLB       2
0x02CA	0x51F9      	MOVF        __Lib_Mmc_Mmc_UnIdle_response_L0, 0, 1
0x02CC	0x0A00      	XORLW       0
0x02CE	0xE10B      	BNZ         L___Lib_Mmc_Mmc_UnIdle14
;__Lib_Mmc.c,136 :: 		
0x02D0	0xADFA      	BTFSS       __Lib_Mmc_Mmc_UnIdle_response2_L0, 6, 1
0x02D2	0xD004      	BRA         L___Lib_Mmc_Mmc_UnIdle15
;__Lib_Mmc.c,138 :: 		
0x02D4	0x0E04      	MOVLW       4
0x02D6	0x0100      	MOVLB       0
0x02D8	0x6FBD      	MOVWF       __Lib_Mmc_cardType, 1
0x02DA	0xD003      	BRA         L___Lib_Mmc_Mmc_UnIdle16
L___Lib_Mmc_Mmc_UnIdle15:
0x02DC	0x0100      	MOVLB       0
;__Lib_Mmc.c,141 :: 		
0x02DE	0x0E03      	MOVLW       3
0x02E0	0x6FBD      	MOVWF       __Lib_Mmc_cardType, 1
L___Lib_Mmc_Mmc_UnIdle16:
;__Lib_Mmc.c,142 :: 		
0x02E2	0x6A00      	CLRF        R0 
0x02E4	0xD00E      	BRA         L_end_Mmc_UnIdle
;__Lib_Mmc.c,143 :: 		
L___Lib_Mmc_Mmc_UnIdle14:
;__Lib_Mmc.c,144 :: 		
0x02E6	0xD005      	BRA         L___Lib_Mmc_Mmc_UnIdle17
L___Lib_Mmc_Mmc_UnIdle13:
0x02E8	0x0100      	MOVLB       0
;__Lib_Mmc.c,146 :: 		
0x02EA	0x0E01      	MOVLW       1
0x02EC	0x6FBD      	MOVWF       __Lib_Mmc_cardType, 1
;__Lib_Mmc.c,147 :: 		
0x02EE	0x6A00      	CLRF        R0 
0x02F0	0xD008      	BRA         L_end_Mmc_UnIdle
;__Lib_Mmc.c,148 :: 		
L___Lib_Mmc_Mmc_UnIdle17:
;__Lib_Mmc.c,149 :: 		
L___Lib_Mmc_Mmc_UnIdle12:
;__Lib_Mmc.c,150 :: 		
0x02F2	0xD001      	BRA         L___Lib_Mmc_Mmc_UnIdle18
L___Lib_Mmc_Mmc_UnIdle11:
;__Lib_Mmc.c,153 :: 		
0x02F4	0xD004      	BRA         L___Lib_Mmc_Mmc_UnIdle6
;__Lib_Mmc.c,154 :: 		
L___Lib_Mmc_Mmc_UnIdle18:
;__Lib_Mmc.c,155 :: 		
L___Lib_Mmc_Mmc_UnIdle10:
;__Lib_Mmc.c,102 :: 		
0x02F6	0x0102      	MOVLB       2
0x02F8	0x4BF7      	INFSNZ      __Lib_Mmc_Mmc_UnIdle_cnt_L0, 1, 1
0x02FA	0x2BF8      	INCF        __Lib_Mmc_Mmc_UnIdle_cnt_L0+1, 1, 1
;__Lib_Mmc.c,156 :: 		
0x02FC	0xD756      	BRA         L___Lib_Mmc_Mmc_UnIdle5
L___Lib_Mmc_Mmc_UnIdle6:
;__Lib_Mmc.c,157 :: 		
0x02FE	0x0E01      	MOVLW       1
0x0300	0x6E00      	MOVWF       R0 
;__Lib_Mmc.c,158 :: 		
L_end_Mmc_UnIdle:
0x0302	0x0012      	RETURN      0
; end of __Lib_Mmc_Mmc_UnIdle
_command:
;soundrec.c,125 :: 		command(char command, uint32_t fourbyte_arg, char CRCbits)
;soundrec.c,127 :: 		spiWrite(0xff);
0x0304	0x0EFF      	MOVLW       255
0x0306	0x0102      	MOVLB       2
0x0308	0x6FFE      	MOVWF       FARG_SPI1_Write_data_, 1
0x030A	0xDE9D      	RCALL       _SPI1_Write
;soundrec.c,128 :: 		spiWrite(0b01000000 | command);
0x030C	0x0E40      	MOVLW       64
0x030E	0x0102      	MOVLB       2
0x0310	0x11E8      	IORWF       FARG_command_command, 0, 1
0x0312	0x6FFE      	MOVWF       FARG_SPI1_Write_data_, 1
0x0314	0xDE98      	RCALL       _SPI1_Write
;soundrec.c,129 :: 		spiWrite((uint8_t) (fourbyte_arg >> 24));
0x0316	0xF000C2EC  	MOVFF       FARG_command_fourbyte_arg+3, R0
0x031A	0x6A01      	CLRF        R1 
0x031C	0x6A02      	CLRF        R2 
0x031E	0x6A03      	CLRF        R3 
0x0320	0xF2FEC000  	MOVFF       R0, FARG_SPI1_Write_data_
0x0324	0xDE90      	RCALL       _SPI1_Write
;soundrec.c,130 :: 		spiWrite((uint8_t) (fourbyte_arg >> 16));
0x0326	0xF000C2EB  	MOVFF       FARG_command_fourbyte_arg+2, R0
0x032A	0xF001C2EC  	MOVFF       FARG_command_fourbyte_arg+3, R1
0x032E	0x6A02      	CLRF        R2 
0x0330	0x6A03      	CLRF        R3 
0x0332	0xF2FEC000  	MOVFF       R0, FARG_SPI1_Write_data_
0x0336	0xDE87      	RCALL       _SPI1_Write
;soundrec.c,131 :: 		spiWrite((uint8_t) (fourbyte_arg >> 8));
0x0338	0xF000C2EA  	MOVFF       FARG_command_fourbyte_arg+1, R0
0x033C	0xF001C2EB  	MOVFF       FARG_command_fourbyte_arg+2, R1
0x0340	0xF002C2EC  	MOVFF       FARG_command_fourbyte_arg+3, R2
0x0344	0x6A03      	CLRF        R3 
0x0346	0xF2FEC000  	MOVFF       R0, FARG_SPI1_Write_data_
0x034A	0xDE7D      	RCALL       _SPI1_Write
;soundrec.c,132 :: 		spiWrite((uint8_t) (fourbyte_arg));
0x034C	0xF2FEC2E9  	MOVFF       FARG_command_fourbyte_arg, FARG_SPI1_Write_data_
0x0350	0xDE7A      	RCALL       _SPI1_Write
;soundrec.c,133 :: 		spiWrite(CRCbits);
0x0352	0xF2FEC2ED  	MOVFF       FARG_command_CRCbits, FARG_SPI1_Write_data_
0x0356	0xDE77      	RCALL       _SPI1_Write
;soundrec.c,134 :: 		spiReadData = spiRead();
0x0358	0x0EFF      	MOVLW       255
0x035A	0x0102      	MOVLB       2
0x035C	0x6FFF      	MOVWF       FARG_SPI1_Read_buffer, 1
0x035E	0xDE5E      	RCALL       _SPI1_Read
0x0360	0xF0C9C000  	MOVFF       R0, _spiReadData
;soundrec.c,135 :: 		}
L_end_command:
0x0364	0x0012      	RETURN      0
; end of _command
_SPI1_Init_Advanced:
;__Lib_SPI_c345.c,40 :: 		
;__Lib_SPI_c345.c,41 :: 		
0x0366	0x0E1C      	MOVLW       _SPI1_Read
0x0368	0x0100      	MOVLB       0
0x036A	0x6FC0      	MOVWF       _SPI_Rd_Ptr, 1
0x036C	0x0E00      	MOVLW       hi_addr(_SPI1_Read)
0x036E	0x6FC1      	MOVWF       _SPI_Rd_Ptr+1, 1
0x0370	0x0EFF      	MOVLW       FARG_SPI1_Read_buffer
0x0372	0x6FC2      	MOVWF       _SPI_Rd_Ptr+2, 1
0x0374	0x0E02      	MOVLW       hi_addr(FARG_SPI1_Read_buffer)
0x0376	0x6FC3      	MOVWF       _SPI_Rd_Ptr+3, 1
;__Lib_SPI_c345.c,42 :: 		
0x0378	0x0E46      	MOVLW       _SPI1_Write
0x037A	0x6FCE      	MOVWF       _SPI_Wr_Ptr, 1
0x037C	0x0E00      	MOVLW       hi_addr(_SPI1_Write)
0x037E	0x6FCF      	MOVWF       _SPI_Wr_Ptr+1, 1
0x0380	0x0EFE      	MOVLW       FARG_SPI1_Write_data_
0x0382	0x6FD0      	MOVWF       _SPI_Wr_Ptr+2, 1
0x0384	0x0E02      	MOVLW       hi_addr(FARG_SPI1_Write_data_)
0x0386	0x6FD1      	MOVWF       _SPI_Wr_Ptr+3, 1
;__Lib_SPI_c345.c,44 :: 		
0x0388	0x9A94      	BCF         TRISC5_bit, BitPos(TRISC5_bit+0) 
;__Lib_SPI_c345.c,45 :: 		
0x038A	0x0102      	MOVLB       2
0x038C	0x51E8      	MOVF        FARG_SPI1_Init_Advanced_master, 0, 1
0x038E	0x0A04      	XORLW       4
0x0390	0xE102      	BNZ         L_SPI1_Init_Advanced0
0x0392	0x8694      	BSF         TRISC3_bit, BitPos(TRISC3_bit+0) 
0x0394	0xD001      	BRA         L_SPI1_Init_Advanced1
L_SPI1_Init_Advanced0:
;__Lib_SPI_c345.c,46 :: 		
0x0396	0x9694      	BCF         TRISC3_bit, BitPos(TRISC3_bit+0) 
L_SPI1_Init_Advanced1:
;__Lib_SPI_c345.c,47 :: 		
0x0398	0x8894      	BSF         TRISC4_bit, BitPos(TRISC4_bit+0) 
;__Lib_SPI_c345.c,49 :: 		
0x039A	0x6AC6      	CLRF        SSPCON1 
;__Lib_SPI_c345.c,50 :: 		
0x039C	0x51E8      	MOVF        FARG_SPI1_Init_Advanced_master, 0, 1
0x039E	0x12C6      	IORWF       SSPCON1, 1 
;__Lib_SPI_c345.c,51 :: 		
0x03A0	0x51EA      	MOVF        FARG_SPI1_Init_Advanced_clock_idle, 0, 1
0x03A2	0x12C6      	IORWF       SSPCON1, 1 
;__Lib_SPI_c345.c,52 :: 		
0x03A4	0x51E9      	MOVF        FARG_SPI1_Init_Advanced_data_sample, 0, 1
0x03A6	0x12C7      	IORWF       SSPSTAT, 1 
;__Lib_SPI_c345.c,54 :: 		
0x03A8	0x53EA      	MOVF        FARG_SPI1_Init_Advanced_clock_idle, 1, 1
0x03AA	0xE005      	BZ          L_SPI1_Init_Advanced2
;__Lib_SPI_c345.c,55 :: 		
0x03AC	0x51EB      	MOVF        FARG_SPI1_Init_Advanced_transmit_edge, 0, 1
0x03AE	0x0A00      	XORLW       0
0x03B0	0xB4D8      	BTFSC       STATUS, 2 
;__Lib_SPI_c345.c,56 :: 		
0x03B2	0x8CC7      	BSF         SSPSTAT, 6 
L_SPI1_Init_Advanced3:
;__Lib_SPI_c345.c,57 :: 		
0x03B4	0xD003      	BRA         L_SPI1_Init_Advanced4
L_SPI1_Init_Advanced2:
;__Lib_SPI_c345.c,59 :: 		
0x03B6	0x53EB      	MOVF        FARG_SPI1_Init_Advanced_transmit_edge, 1, 1
0x03B8	0xA4D8      	BTFSS       STATUS, 2 
;__Lib_SPI_c345.c,60 :: 		
0x03BA	0x8CC7      	BSF         SSPSTAT, 6 
L_SPI1_Init_Advanced5:
;__Lib_SPI_c345.c,61 :: 		
L_SPI1_Init_Advanced4:
;__Lib_SPI_c345.c,62 :: 		
0x03BC	0x8AC6      	BSF         SSPCON1, 5 
;__Lib_SPI_c345.c,63 :: 		
L_end_SPI1_Init_Advanced:
0x03BE	0x0012      	RETURN      0
; end of _SPI1_Init_Advanced
_UART_Write_Text:
;__Lib_UART_c67.c,123 :: 		
;__Lib_UART_c67.c,124 :: 		
0x03C0	0x0102      	MOVLB       2
0x03C2	0x6BEB      	CLRF        UART_Write_Text_counter_L0, 1
;__Lib_UART_c67.c,126 :: 		
0x03C4	0xFFE9C2E8  	MOVFF       FARG_UART_Write_Text_uart_text, FSR0L
0x03C8	0xFFEAC2E9  	MOVFF       FARG_UART_Write_Text_uart_text+1, FSR0H
0x03CC	0xF2EACFEE  	MOVFF       POSTINC0, UART_Write_Text_data__L0
;__Lib_UART_c67.c,127 :: 		
L_UART_Write_Text16:
0x03D0	0x51EA      	MOVF        UART_Write_Text_data__L0, 0, 1
0x03D2	0x0A00      	XORLW       0
0x03D4	0xE00E      	BZ          L_UART_Write_Text17
;__Lib_UART_c67.c,128 :: 		
0x03D6	0xF2F6C2EA  	MOVFF       UART_Write_Text_data__L0, FARG_UART_Write__data
0x03DA	0xDED8      	RCALL       _UART_Write
;__Lib_UART_c67.c,129 :: 		
0x03DC	0x0102      	MOVLB       2
0x03DE	0x2BEB      	INCF        UART_Write_Text_counter_L0, 1, 1
;__Lib_UART_c67.c,130 :: 		
0x03E0	0x51EB      	MOVF        UART_Write_Text_counter_L0, 0, 1
0x03E2	0x25E8      	ADDWF       FARG_UART_Write_Text_uart_text, 0, 1
0x03E4	0x6EE9      	MOVWF       FSR0L 
0x03E6	0x0E00      	MOVLW       0
0x03E8	0x21E9      	ADDWFC      FARG_UART_Write_Text_uart_text+1, 0, 1
0x03EA	0x6EEA      	MOVWF       FSR0H 
0x03EC	0xF2EACFEE  	MOVFF       POSTINC0, UART_Write_Text_data__L0
;__Lib_UART_c67.c,131 :: 		
0x03F0	0xD7EF      	BRA         L_UART_Write_Text16
L_UART_Write_Text17:
;__Lib_UART_c67.c,132 :: 		
L_end_UART_Write_Text:
0x03F2	0x0012      	RETURN      0
; end of _UART_Write_Text
_Mmc_Read_Sector:
;__Lib_Mmc.c,231 :: 		
;__Lib_Mmc.c,236 :: 		
0x03F4	0xDE45      	RCALL       __Lib_Mmc_Mmc_Select
;__Lib_Mmc.c,238 :: 		
0x03F6	0x0E00      	MOVLW       0
0x03F8	0x0A00      	XORLW       0
0x03FA	0xE103      	BNZ         L__Mmc_Read_Sector90
0x03FC	0x0E04      	MOVLW       4
0x03FE	0x0100      	MOVLB       0
0x0400	0x19BD      	XORWF       __Lib_Mmc_cardType, 0, 1
L__Mmc_Read_Sector90:
0x0402	0xE109      	BNZ         L_Mmc_Read_Sector29
;__Lib_Mmc.c,239 :: 		
0x0404	0xF2F0C2E8  	MOVFF       FARG_Mmc_Read_Sector_sector, Mmc_Read_Sector_byte_start_L0
0x0408	0xF2F1C2E9  	MOVFF       FARG_Mmc_Read_Sector_sector+1, Mmc_Read_Sector_byte_start_L0+1
0x040C	0xF2F2C2EA  	MOVFF       FARG_Mmc_Read_Sector_sector+2, Mmc_Read_Sector_byte_start_L0+2
0x0410	0xF2F3C2EB  	MOVFF       FARG_Mmc_Read_Sector_sector+3, Mmc_Read_Sector_byte_start_L0+3
0x0414	0xD014      	BRA         L_Mmc_Read_Sector30
L_Mmc_Read_Sector29:
;__Lib_Mmc.c,241 :: 		
0x0416	0x0E09      	MOVLW       9
0x0418	0x6E00      	MOVWF       R0 
0x041A	0xF2F0C2E8  	MOVFF       FARG_Mmc_Read_Sector_sector, Mmc_Read_Sector_byte_start_L0
0x041E	0xF2F1C2E9  	MOVFF       FARG_Mmc_Read_Sector_sector+1, Mmc_Read_Sector_byte_start_L0+1
0x0422	0xF2F2C2EA  	MOVFF       FARG_Mmc_Read_Sector_sector+2, Mmc_Read_Sector_byte_start_L0+2
0x0426	0xF2F3C2EB  	MOVFF       FARG_Mmc_Read_Sector_sector+3, Mmc_Read_Sector_byte_start_L0+3
0x042A	0x5000      	MOVF        R0, 0 
L__Mmc_Read_Sector91:
0x042C	0xE008      	BZ          L__Mmc_Read_Sector92
0x042E	0x0102      	MOVLB       2
0x0430	0x37F0      	RLCF        Mmc_Read_Sector_byte_start_L0, 1, 1
0x0432	0x91F0      	BCF         Mmc_Read_Sector_byte_start_L0, 0, 1
0x0434	0x37F1      	RLCF        Mmc_Read_Sector_byte_start_L0+1, 1, 1
0x0436	0x37F2      	RLCF        Mmc_Read_Sector_byte_start_L0+2, 1, 1
0x0438	0x37F3      	RLCF        Mmc_Read_Sector_byte_start_L0+3, 1, 1
0x043A	0x0FFF      	ADDLW       255
0x043C	0xD7F7      	BRA         L__Mmc_Read_Sector91
L__Mmc_Read_Sector92:
L_Mmc_Read_Sector30:
;__Lib_Mmc.c,244 :: 		
0x043E	0x0E11      	MOVLW       17
0x0440	0x0103      	MOVLB       3
0x0442	0x6F01      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_partial_cmm, 1
0x0444	0xF302C2F0  	MOVFF       Mmc_Read_Sector_byte_start_L0, FARG___Lib_Mmc_Mmc_Send_Command_content
0x0448	0xF303C2F1  	MOVFF       Mmc_Read_Sector_byte_start_L0+1, FARG___Lib_Mmc_Mmc_Send_Command_content+1
0x044C	0xF304C2F2  	MOVFF       Mmc_Read_Sector_byte_start_L0+2, FARG___Lib_Mmc_Mmc_Send_Command_content+2
0x0450	0xF305C2F3  	MOVFF       Mmc_Read_Sector_byte_start_L0+3, FARG___Lib_Mmc_Mmc_Send_Command_content+3
0x0454	0x0EFF      	MOVLW       255
0x0456	0x6F06      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_crc, 1
0x0458	0xDE15      	RCALL       __Lib_Mmc_Mmc_Send_Command
;__Lib_Mmc.c,245 :: 		
0x045A	0x5200      	MOVF        R0, 1 
0x045C	0xE004      	BZ          L_Mmc_Read_Sector31
;__Lib_Mmc.c,247 :: 		
0x045E	0xDE03      	RCALL       __Lib_Mmc_Mmc_DeSelect
;__Lib_Mmc.c,248 :: 		
0x0460	0x0E01      	MOVLW       1
0x0462	0x6E00      	MOVWF       R0 
0x0464	0xD04B      	BRA         L_end_Mmc_Read_Sector
;__Lib_Mmc.c,249 :: 		
L_Mmc_Read_Sector31:
;__Lib_Mmc.c,251 :: 		
L_Mmc_Read_Sector32:
0x0466	0xFFE1C0C2  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x046A	0xFFE2C0C3  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x046E	0x0EFF      	MOVLW       255
0x0470	0x6EE6      	MOVWF       POSTINC1 
0x0472	0xF000C0C0  	MOVFF       _SPI_Rd_Ptr, R0
0x0476	0xF001C0C1  	MOVFF       _SPI_Rd_Ptr+1, R1
0x047A	0xDDD9      	RCALL       _____DoIFC
0x047C	0x5000      	MOVF        R0, 0 
0x047E	0x0AFE      	XORLW       254
0x0480	0xE001      	BZ          L_Mmc_Read_Sector33
;__Lib_Mmc.c,252 :: 		
0x0482	0xD7F1      	BRA         L_Mmc_Read_Sector32
L_Mmc_Read_Sector33:
;__Lib_Mmc.c,255 :: 		
0x0484	0x0102      	MOVLB       2
0x0486	0x6BEE      	CLRF        Mmc_Read_Sector_i_L0, 1
0x0488	0x6BEF      	CLRF        Mmc_Read_Sector_i_L0+1, 1
L_Mmc_Read_Sector34:
0x048A	0x0E02      	MOVLW       2
0x048C	0x5DEF      	SUBWF       Mmc_Read_Sector_i_L0+1, 0, 1
0x048E	0xE102      	BNZ         L__Mmc_Read_Sector93
0x0490	0x0E00      	MOVLW       0
0x0492	0x5DEE      	SUBWF       Mmc_Read_Sector_i_L0, 0, 1
L__Mmc_Read_Sector93:
0x0494	0xE21B      	BC          L_Mmc_Read_Sector35
;__Lib_Mmc.c,257 :: 		
0x0496	0x51EE      	MOVF        Mmc_Read_Sector_i_L0, 0, 1
0x0498	0x25EC      	ADDWF       FARG_Mmc_Read_Sector_dbuff, 0, 1
0x049A	0x6FF4      	MOVWF       FLOC__Mmc_Read_Sector, 1
0x049C	0x51EF      	MOVF        Mmc_Read_Sector_i_L0+1, 0, 1
0x049E	0x21ED      	ADDWFC      FARG_Mmc_Read_Sector_dbuff+1, 0, 1
0x04A0	0x6FF5      	MOVWF       FLOC__Mmc_Read_Sector+1, 1
0x04A2	0xFFE1C0C2  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x04A6	0xFFE2C0C3  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x04AA	0x0EFF      	MOVLW       255
0x04AC	0x6EE6      	MOVWF       POSTINC1 
0x04AE	0xF000C0C0  	MOVFF       _SPI_Rd_Ptr, R0
0x04B2	0xF001C0C1  	MOVFF       _SPI_Rd_Ptr+1, R1
0x04B6	0xDDBB      	RCALL       _____DoIFC
0x04B8	0xFFE1C2F4  	MOVFF       FLOC__Mmc_Read_Sector, FSR1L
0x04BC	0xFFE2C2F5  	MOVFF       FLOC__Mmc_Read_Sector+1, FSR1H
0x04C0	0xFFE6C000  	MOVFF       R0, POSTINC1
;__Lib_Mmc.c,255 :: 		
0x04C4	0x0102      	MOVLB       2
0x04C6	0x4BEE      	INFSNZ      Mmc_Read_Sector_i_L0, 1, 1
0x04C8	0x2BEF      	INCF        Mmc_Read_Sector_i_L0+1, 1, 1
;__Lib_Mmc.c,258 :: 		
0x04CA	0xD7DF      	BRA         L_Mmc_Read_Sector34
L_Mmc_Read_Sector35:
;__Lib_Mmc.c,261 :: 		
0x04CC	0xFFE1C0C2  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x04D0	0xFFE2C0C3  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x04D4	0x0EFF      	MOVLW       255
0x04D6	0x6EE6      	MOVWF       POSTINC1 
0x04D8	0xF000C0C0  	MOVFF       _SPI_Rd_Ptr, R0
0x04DC	0xF001C0C1  	MOVFF       _SPI_Rd_Ptr+1, R1
0x04E0	0xDDA6      	RCALL       _____DoIFC
;__Lib_Mmc.c,262 :: 		
0x04E2	0xFFE1C0C2  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x04E6	0xFFE2C0C3  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x04EA	0x0EFF      	MOVLW       255
0x04EC	0x6EE6      	MOVWF       POSTINC1 
0x04EE	0xF000C0C0  	MOVFF       _SPI_Rd_Ptr, R0
0x04F2	0xF001C0C1  	MOVFF       _SPI_Rd_Ptr+1, R1
0x04F6	0xDD9B      	RCALL       _____DoIFC
;__Lib_Mmc.c,264 :: 		
0x04F8	0xDDB6      	RCALL       __Lib_Mmc_Mmc_DeSelect
;__Lib_Mmc.c,267 :: 		
0x04FA	0x6A00      	CLRF        R0 
;__Lib_Mmc.c,268 :: 		
L_end_Mmc_Read_Sector:
0x04FC	0x0012      	RETURN      0
; end of _Mmc_Read_Sector
_WordToStr:
;__Lib_Conversions.c,84 :: 		
;__Lib_Conversions.c,89 :: 		
0x04FE	0x0102      	MOVLB       2
0x0500	0x6BEC      	CLRF        WordToStr_len_L0, 1
L_WordToStr6:
0x0502	0x0E05      	MOVLW       5
0x0504	0x5DEC      	SUBWF       WordToStr_len_L0, 0, 1
0x0506	0xE20A      	BC          L_WordToStr7
;__Lib_Conversions.c,90 :: 		
0x0508	0x51EC      	MOVF        WordToStr_len_L0, 0, 1
0x050A	0x25EA      	ADDWF       FARG_WordToStr_output, 0, 1
0x050C	0x6EE1      	MOVWF       FSR1L 
0x050E	0x0E00      	MOVLW       0
0x0510	0x21EB      	ADDWFC      FARG_WordToStr_output+1, 0, 1
0x0512	0x6EE2      	MOVWF       FSR1H 
0x0514	0x0E20      	MOVLW       32
0x0516	0x6EE6      	MOVWF       POSTINC1 
;__Lib_Conversions.c,89 :: 		
0x0518	0x2BEC      	INCF        WordToStr_len_L0, 1, 1
;__Lib_Conversions.c,90 :: 		
0x051A	0xD7F3      	BRA         L_WordToStr6
L_WordToStr7:
;__Lib_Conversions.c,91 :: 		
0x051C	0x51EC      	MOVF        WordToStr_len_L0, 0, 1
0x051E	0x25EA      	ADDWF       FARG_WordToStr_output, 0, 1
0x0520	0x6EE1      	MOVWF       FSR1L 
0x0522	0x0E00      	MOVLW       0
0x0524	0x21EB      	ADDWFC      FARG_WordToStr_output+1, 0, 1
0x0526	0x6EE2      	MOVWF       FSR1H 
0x0528	0x6AE6      	CLRF        POSTINC1 
0x052A	0x07EC      	DECF        WordToStr_len_L0, 1, 1
;__Lib_Conversions.c,93 :: 		
L_WordToStr9:
;__Lib_Conversions.c,94 :: 		
0x052C	0x51EC      	MOVF        WordToStr_len_L0, 0, 1
0x052E	0x25EA      	ADDWF       FARG_WordToStr_output, 0, 1
0x0530	0x6FED      	MOVWF       FLOC__WordToStr, 1
0x0532	0x0E00      	MOVLW       0
0x0534	0x21EB      	ADDWFC      FARG_WordToStr_output+1, 0, 1
0x0536	0x6FEE      	MOVWF       FLOC__WordToStr+1, 1
0x0538	0x0E0A      	MOVLW       10
0x053A	0x6E04      	MOVWF       R4 
0x053C	0x0E00      	MOVLW       0
0x053E	0x6E05      	MOVWF       R5 
0x0540	0xF000C2E8  	MOVFF       FARG_WordToStr_input, R0
0x0544	0xF001C2E9  	MOVFF       FARG_WordToStr_input+1, R1
0x0548	0xDE06      	RCALL       _Div_16x16_U
0x054A	0xF000C008  	MOVFF       R8, R0
0x054E	0xF001C009  	MOVFF       R9, R1
0x0552	0x0E30      	MOVLW       48
0x0554	0x2600      	ADDWF       R0, 1 
0x0556	0xFFE1C2ED  	MOVFF       FLOC__WordToStr, FSR1L
0x055A	0xFFE2C2EE  	MOVFF       FLOC__WordToStr+1, FSR1H
0x055E	0xFFE6C000  	MOVFF       R0, POSTINC1
;__Lib_Conversions.c,95 :: 		
0x0562	0x0E0A      	MOVLW       10
0x0564	0x6E04      	MOVWF       R4 
0x0566	0x0E00      	MOVLW       0
0x0568	0x6E05      	MOVWF       R5 
0x056A	0xF000C2E8  	MOVFF       FARG_WordToStr_input, R0
0x056E	0xF001C2E9  	MOVFF       FARG_WordToStr_input+1, R1
0x0572	0xDDF1      	RCALL       _Div_16x16_U
0x0574	0xF2E8C000  	MOVFF       R0, FARG_WordToStr_input
0x0578	0xF2E9C001  	MOVFF       R1, FARG_WordToStr_input+1
;__Lib_Conversions.c,96 :: 		
0x057C	0x0E00      	MOVLW       0
0x057E	0x1801      	XORWF       R1, 0 
0x0580	0xE102      	BNZ         L__WordToStr109
0x0582	0x0E00      	MOVLW       0
0x0584	0x1800      	XORWF       R0, 0 
L__WordToStr109:
0x0586	0xE101      	BNZ         L_WordToStr11
;__Lib_Conversions.c,97 :: 		
0x0588	0xD002      	BRA         L_WordToStr10
L_WordToStr11:
;__Lib_Conversions.c,98 :: 		
0x058A	0x07EC      	DECF        WordToStr_len_L0, 1, 1
;__Lib_Conversions.c,99 :: 		
0x058C	0xD7CF      	BRA         L_WordToStr9
L_WordToStr10:
;__Lib_Conversions.c,100 :: 		
L_end_WordToStr:
0x058E	0x0012      	RETURN      0
; end of _WordToStr
_Mmc_Init:
;__Lib_Mmc.c,164 :: 		
;__Lib_Mmc.c,168 :: 		
0x0590	0x0E05      	MOVLW       5
0x0592	0x0100      	MOVLB       0
0x0594	0x6FBD      	MOVWF       __Lib_Mmc_cardType, 1
;__Lib_Mmc.c,170 :: 		
0x0596	0x9494      	BCF         Mmc_Chip_Select_Direction, BitPos(Mmc_Chip_Select_Direction+0) 
;__Lib_Mmc.c,172 :: 		
0x0598	0xDD66      	RCALL       __Lib_Mmc_Mmc_DeSelect
;__Lib_Mmc.c,175 :: 		
0x059A	0x0102      	MOVLB       2
0x059C	0x6BE8      	CLRF        Mmc_Init_cnt_L0, 1
0x059E	0x6BE9      	CLRF        Mmc_Init_cnt_L0+1, 1
L_Mmc_Init19:
0x05A0	0x0E00      	MOVLW       0
0x05A2	0x5DE9      	SUBWF       Mmc_Init_cnt_L0+1, 0, 1
0x05A4	0xE102      	BNZ         L__Mmc_Init86
0x05A6	0x0E0A      	MOVLW       10
0x05A8	0x5DE8      	SUBWF       Mmc_Init_cnt_L0, 0, 1
L__Mmc_Init86:
0x05AA	0xE20F      	BC          L_Mmc_Init20
;__Lib_Mmc.c,176 :: 		
0x05AC	0xFFE1C0C2  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x05B0	0xFFE2C0C3  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x05B4	0x0EFF      	MOVLW       255
0x05B6	0x6EE6      	MOVWF       POSTINC1 
0x05B8	0xF000C0C0  	MOVFF       _SPI_Rd_Ptr, R0
0x05BC	0xF001C0C1  	MOVFF       _SPI_Rd_Ptr+1, R1
0x05C0	0xDD36      	RCALL       _____DoIFC
;__Lib_Mmc.c,175 :: 		
0x05C2	0x0102      	MOVLB       2
0x05C4	0x4BE8      	INFSNZ      Mmc_Init_cnt_L0, 1, 1
0x05C6	0x2BE9      	INCF        Mmc_Init_cnt_L0+1, 1, 1
;__Lib_Mmc.c,176 :: 		
0x05C8	0xD7EB      	BRA         L_Mmc_Init19
L_Mmc_Init20:
;__Lib_Mmc.c,180 :: 		
0x05CA	0xDD5A      	RCALL       __Lib_Mmc_Mmc_Select
;__Lib_Mmc.c,182 :: 		
0x05CC	0x0103      	MOVLB       3
0x05CE	0x6B01      	CLRF        FARG___Lib_Mmc_Mmc_Send_Command_partial_cmm, 1
0x05D0	0x6B02      	CLRF        FARG___Lib_Mmc_Mmc_Send_Command_content, 1
0x05D2	0x6B03      	CLRF        FARG___Lib_Mmc_Mmc_Send_Command_content+1, 1
0x05D4	0x6B04      	CLRF        FARG___Lib_Mmc_Mmc_Send_Command_content+2, 1
0x05D6	0x6B05      	CLRF        FARG___Lib_Mmc_Mmc_Send_Command_content+3, 1
0x05D8	0x0E95      	MOVLW       149
0x05DA	0x6F06      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_crc, 1
0x05DC	0xDD53      	RCALL       __Lib_Mmc_Mmc_Send_Command
0x05DE	0xF2EAC000  	MOVFF       R0, Mmc_Init_response_L0
;__Lib_Mmc.c,183 :: 		
0x05E2	0xDD41      	RCALL       __Lib_Mmc_Mmc_DeSelect
;__Lib_Mmc.c,186 :: 		
0x05E4	0x0102      	MOVLB       2
0x05E6	0x51EA      	MOVF        Mmc_Init_response_L0, 0, 1
0x05E8	0x0A01      	XORLW       1
0x05EA	0xE003      	BZ          L_Mmc_Init22
;__Lib_Mmc.c,187 :: 		
0x05EC	0x0E01      	MOVLW       1
0x05EE	0x6E00      	MOVWF       R0 
0x05F0	0xD078      	BRA         L_end_Mmc_Init
L_Mmc_Init22:
;__Lib_Mmc.c,189 :: 		
0x05F2	0xDD46      	RCALL       __Lib_Mmc_Mmc_Select
;__Lib_Mmc.c,190 :: 		
0x05F4	0x0E08      	MOVLW       8
0x05F6	0x0103      	MOVLB       3
0x05F8	0x6F01      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_partial_cmm, 1
0x05FA	0x0EAA      	MOVLW       170
0x05FC	0x6F02      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_content, 1
0x05FE	0x0E01      	MOVLW       1
0x0600	0x6F03      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_content+1, 1
0x0602	0x0E00      	MOVLW       0
0x0604	0x6F04      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_content+2, 1
0x0606	0x6F05      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_content+3, 1
0x0608	0x0E87      	MOVLW       135
0x060A	0x6F06      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_crc, 1
0x060C	0xDD3B      	RCALL       __Lib_Mmc_Mmc_Send_Command
0x060E	0xF2EAC000  	MOVFF       R0, Mmc_Init_response_L0
;__Lib_Mmc.c,192 :: 		
0x0612	0xFFE1C0C2  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x0616	0xFFE2C0C3  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x061A	0x0EFF      	MOVLW       255
0x061C	0x6EE6      	MOVWF       POSTINC1 
0x061E	0xF000C0C0  	MOVFF       _SPI_Rd_Ptr, R0
0x0622	0xF001C0C1  	MOVFF       _SPI_Rd_Ptr+1, R1
0x0626	0xDD03      	RCALL       _____DoIFC
;__Lib_Mmc.c,193 :: 		
0x0628	0xFFE1C0C2  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x062C	0xFFE2C0C3  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x0630	0x0EFF      	MOVLW       255
0x0632	0x6EE6      	MOVWF       POSTINC1 
0x0634	0xF000C0C0  	MOVFF       _SPI_Rd_Ptr, R0
0x0638	0xF001C0C1  	MOVFF       _SPI_Rd_Ptr+1, R1
0x063C	0xDCF8      	RCALL       _____DoIFC
;__Lib_Mmc.c,194 :: 		
0x063E	0xFFE1C0C2  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x0642	0xFFE2C0C3  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x0646	0x0EFF      	MOVLW       255
0x0648	0x6EE6      	MOVWF       POSTINC1 
0x064A	0xF000C0C0  	MOVFF       _SPI_Rd_Ptr, R0
0x064E	0xF001C0C1  	MOVFF       _SPI_Rd_Ptr+1, R1
0x0652	0xDCED      	RCALL       _____DoIFC
;__Lib_Mmc.c,195 :: 		
0x0654	0xFFE1C0C2  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x0658	0xFFE2C0C3  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x065C	0x0EFF      	MOVLW       255
0x065E	0x6EE6      	MOVWF       POSTINC1 
0x0660	0xF000C0C0  	MOVFF       _SPI_Rd_Ptr, R0
0x0664	0xF001C0C1  	MOVFF       _SPI_Rd_Ptr+1, R1
0x0668	0xDCE2      	RCALL       _____DoIFC
;__Lib_Mmc.c,196 :: 		
0x066A	0xDCFD      	RCALL       __Lib_Mmc_Mmc_DeSelect
;__Lib_Mmc.c,199 :: 		
0x066C	0x0102      	MOVLB       2
0x066E	0x51EA      	MOVF        Mmc_Init_response_L0, 0, 1
0x0670	0x0A01      	XORLW       1
0x0672	0xE009      	BZ          L_Mmc_Init23
;__Lib_Mmc.c,201 :: 		
0x0674	0x0E01      	MOVLW       1
0x0676	0x6FF6      	MOVWF       FARG___Lib_Mmc_Mmc_UnIdle_ctype, 1
0x0678	0xDD95      	RCALL       __Lib_Mmc_Mmc_UnIdle
0x067A	0x5200      	MOVF        R0, 1 
0x067C	0xE003      	BZ          L_Mmc_Init24
;__Lib_Mmc.c,202 :: 		
0x067E	0x0102      	MOVLB       2
0x0680	0x6BF6      	CLRF        FARG___Lib_Mmc_Mmc_UnIdle_ctype, 1
0x0682	0xDD90      	RCALL       __Lib_Mmc_Mmc_UnIdle
L_Mmc_Init24:
;__Lib_Mmc.c,203 :: 		
0x0684	0xD004      	BRA         L_Mmc_Init25
L_Mmc_Init23:
;__Lib_Mmc.c,206 :: 		
0x0686	0x0E02      	MOVLW       2
0x0688	0x0102      	MOVLB       2
0x068A	0x6FF6      	MOVWF       FARG___Lib_Mmc_Mmc_UnIdle_ctype, 1
0x068C	0xDD8B      	RCALL       __Lib_Mmc_Mmc_UnIdle
;__Lib_Mmc.c,207 :: 		
L_Mmc_Init25:
;__Lib_Mmc.c,210 :: 		
0x068E	0x0E00      	MOVLW       0
0x0690	0x0A00      	XORLW       0
0x0692	0xE103      	BNZ         L__Mmc_Init87
0x0694	0x0E05      	MOVLW       5
0x0696	0x0100      	MOVLB       0
0x0698	0x19BD      	XORWF       __Lib_Mmc_cardType, 0, 1
L__Mmc_Init87:
0x069A	0xE103      	BNZ         L_Mmc_Init26
;__Lib_Mmc.c,211 :: 		
0x069C	0x0E02      	MOVLW       2
0x069E	0x6E00      	MOVWF       R0 
0x06A0	0xD020      	BRA         L_end_Mmc_Init
L_Mmc_Init26:
;__Lib_Mmc.c,213 :: 		
0x06A2	0x0E00      	MOVLW       0
0x06A4	0x0A00      	XORLW       0
0x06A6	0xE103      	BNZ         L__Mmc_Init88
0x06A8	0x0100      	MOVLB       0
0x06AA	0x0E04      	MOVLW       4
0x06AC	0x19BD      	XORWF       __Lib_Mmc_cardType, 0, 1
L__Mmc_Init88:
0x06AE	0xE018      	BZ          L_Mmc_Init27
;__Lib_Mmc.c,215 :: 		
0x06B0	0xDCE7      	RCALL       __Lib_Mmc_Mmc_Select
;__Lib_Mmc.c,217 :: 		
0x06B2	0x0E10      	MOVLW       16
0x06B4	0x0103      	MOVLB       3
0x06B6	0x6F01      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_partial_cmm, 1
0x06B8	0x0E00      	MOVLW       0
0x06BA	0x6F02      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_content, 1
0x06BC	0x0E02      	MOVLW       2
0x06BE	0x6F03      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_content+1, 1
0x06C0	0x0E00      	MOVLW       0
0x06C2	0x6F04      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_content+2, 1
0x06C4	0x6F05      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_content+3, 1
0x06C6	0x0EFF      	MOVLW       255
0x06C8	0x6F06      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_crc, 1
0x06CA	0xDCDC      	RCALL       __Lib_Mmc_Mmc_Send_Command
0x06CC	0xF2EAC000  	MOVFF       R0, Mmc_Init_response_L0
;__Lib_Mmc.c,218 :: 		
0x06D0	0xDCCA      	RCALL       __Lib_Mmc_Mmc_DeSelect
;__Lib_Mmc.c,220 :: 		
0x06D2	0x0102      	MOVLB       2
0x06D4	0x51EA      	MOVF        Mmc_Init_response_L0, 0, 1
0x06D6	0x0A00      	XORLW       0
0x06D8	0xE003      	BZ          L_Mmc_Init28
;__Lib_Mmc.c,221 :: 		
0x06DA	0x0E03      	MOVLW       3
0x06DC	0x6E00      	MOVWF       R0 
0x06DE	0xD001      	BRA         L_end_Mmc_Init
L_Mmc_Init28:
;__Lib_Mmc.c,222 :: 		
L_Mmc_Init27:
;__Lib_Mmc.c,224 :: 		
0x06E0	0x6A00      	CLRF        R0 
;__Lib_Mmc.c,225 :: 		
L_end_Mmc_Init:
0x06E2	0x0012      	RETURN      0
; end of _Mmc_Init
_caidatMMC:
;soundrec.c,98 :: 		void caidatMMC()
;soundrec.c,101 :: 		UWR("Detecting MMC");
0x06E4	0x0E93      	MOVLW       ?lstr1_soundrec
0x06E6	0x0102      	MOVLB       2
0x06E8	0x6FE8      	MOVWF       FARG_UART_Write_Text_uart_text, 1
0x06EA	0x0E00      	MOVLW       hi_addr(?lstr1_soundrec)
0x06EC	0x6FE9      	MOVWF       FARG_UART_Write_Text_uart_text+1, 1
0x06EE	0xDE68      	RCALL       _UART_Write_Text
0x06F0	0x0E0D      	MOVLW       13
0x06F2	0x6FF6      	MOVWF       FARG_UART_Write__data, 1
0x06F4	0xDD4B      	RCALL       _UART_Write
0x06F6	0x0E0A      	MOVLW       10
0x06F8	0x0102      	MOVLB       2
0x06FA	0x6FF6      	MOVWF       FARG_UART_Write__data, 1
0x06FC	0xDD47      	RCALL       _UART_Write
;soundrec.c,102 :: 		Delay_ms(1000);
0x06FE	0x0E1A      	MOVLW       26
0x0700	0x6E0B      	MOVWF       R11, 0
0x0702	0x0E5E      	MOVLW       94
0x0704	0x6E0C      	MOVWF       R12, 0
0x0706	0x0E6E      	MOVLW       110
0x0708	0x6E0D      	MOVWF       R13, 0
L_caidatMMC6:
0x070A	0x2E0D      	DECFSZ      R13, 1, 0
0x070C	0xD7FE      	BRA         L_caidatMMC6
0x070E	0x2E0C      	DECFSZ      R12, 1, 0
0x0710	0xD7FC      	BRA         L_caidatMMC6
0x0712	0x2E0B      	DECFSZ      R11, 1, 0
0x0714	0xD7FA      	BRA         L_caidatMMC6
0x0716	0x0000      	NOP
;soundrec.c,104 :: 		_SPI_CLK_IDLE_LOW, _SPI_LOW_2_HIGH);
0x0718	0x0E02      	MOVLW       2
0x071A	0x0102      	MOVLB       2
0x071C	0x6FE8      	MOVWF       FARG_SPI1_Init_Advanced_master, 1
0x071E	0x6BE9      	CLRF        FARG_SPI1_Init_Advanced_data_sample, 1
0x0720	0x6BEA      	CLRF        FARG_SPI1_Init_Advanced_clock_idle, 1
0x0722	0x0E01      	MOVLW       1
0x0724	0x6FEB      	MOVWF       FARG_SPI1_Init_Advanced_transmit_edge, 1
0x0726	0xDE1F      	RCALL       _SPI1_Init_Advanced
;soundrec.c,106 :: 		while (MMC_Init() != 0)
L_caidatMMC7:
0x0728	0xDF33      	RCALL       _Mmc_Init
0x072A	0x5000      	MOVF        R0, 0 
0x072C	0x0A00      	XORLW       0
0x072E	0xE001      	BZ          L_caidatMMC8
;soundrec.c,108 :: 		}
0x0730	0xD7FB      	BRA         L_caidatMMC7
L_caidatMMC8:
;soundrec.c,111 :: 		_SPI_CLK_IDLE_LOW, _SPI_LOW_2_HIGH);
0x0732	0x0102      	MOVLB       2
0x0734	0x6BE8      	CLRF        FARG_SPI1_Init_Advanced_master, 1
0x0736	0x6BE9      	CLRF        FARG_SPI1_Init_Advanced_data_sample, 1
0x0738	0x6BEA      	CLRF        FARG_SPI1_Init_Advanced_clock_idle, 1
0x073A	0x0E01      	MOVLW       1
0x073C	0x6FEB      	MOVWF       FARG_SPI1_Init_Advanced_transmit_edge, 1
0x073E	0xDE13      	RCALL       _SPI1_Init_Advanced
;soundrec.c,114 :: 		UWR("MMC Detected!");
0x0740	0x0E85      	MOVLW       ?lstr2_soundrec
0x0742	0x6FE8      	MOVWF       FARG_UART_Write_Text_uart_text, 1
0x0744	0x0E00      	MOVLW       hi_addr(?lstr2_soundrec)
0x0746	0x6FE9      	MOVWF       FARG_UART_Write_Text_uart_text+1, 1
0x0748	0xDE3B      	RCALL       _UART_Write_Text
0x074A	0x0E0D      	MOVLW       13
0x074C	0x6FF6      	MOVWF       FARG_UART_Write__data, 1
0x074E	0xDD1E      	RCALL       _UART_Write
0x0750	0x0E0A      	MOVLW       10
0x0752	0x0102      	MOVLB       2
0x0754	0x6FF6      	MOVWF       FARG_UART_Write__data, 1
0x0756	0xDD1A      	RCALL       _UART_Write
;soundrec.c,115 :: 		Delay_ms (1000);
0x0758	0x0E1A      	MOVLW       26
0x075A	0x6E0B      	MOVWF       R11, 0
0x075C	0x0E5E      	MOVLW       94
0x075E	0x6E0C      	MOVWF       R12, 0
0x0760	0x0E6E      	MOVLW       110
0x0762	0x6E0D      	MOVWF       R13, 0
L_caidatMMC9:
0x0764	0x2E0D      	DECFSZ      R13, 1, 0
0x0766	0xD7FE      	BRA         L_caidatMMC9
0x0768	0x2E0C      	DECFSZ      R12, 1, 0
0x076A	0xD7FC      	BRA         L_caidatMMC9
0x076C	0x2E0B      	DECFSZ      R11, 1, 0
0x076E	0xD7FA      	BRA         L_caidatMMC9
0x0770	0x0000      	NOP
;soundrec.c,116 :: 		}
L_end_caidatMMC:
0x0772	0x0012      	RETURN      0
; end of _caidatMMC
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x0774	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x0776	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x077A	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x077C	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x077E	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x0780	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x0782	0x0012      	RETURN      0
; end of ___CC2DW
_UART1_Init:
;__Lib_UART_c67.c,15 :: 		
;__Lib_UART_c67.c,18 :: 		
0x0784	0x0E58      	MOVLW       _UART1_Write
0x0786	0x0100      	MOVLB       0
0x0788	0x6FDA      	MOVWF       _UART_Wr_Ptr, 1
0x078A	0x0E00      	MOVLW       hi_addr(_UART1_Write)
0x078C	0x6FDB      	MOVWF       _UART_Wr_Ptr+1, 1
0x078E	0x0EFE      	MOVLW       FARG_UART1_Write_data_
0x0790	0x6FDC      	MOVWF       _UART_Wr_Ptr+2, 1
0x0792	0x0E02      	MOVLW       hi_addr(FARG_UART1_Write_data_)
0x0794	0x6FDD      	MOVWF       _UART_Wr_Ptr+3, 1
;__Lib_UART_c67.c,19 :: 		
0x0796	0x0EFF      	MOVLW       _UART1_Read
0x0798	0x6FD6      	MOVWF       _UART_Rd_Ptr, 1
0x079A	0x0EFF      	MOVLW       hi_addr(_UART1_Read)
0x079C	0x6FD7      	MOVWF       _UART_Rd_Ptr+1, 1
0x079E	0x0E00      	MOVLW       0
0x07A0	0x6FD8      	MOVWF       _UART_Rd_Ptr+2, 1
0x07A2	0x0E00      	MOVLW       0
0x07A4	0x6FD9      	MOVWF       _UART_Rd_Ptr+3, 1
;__Lib_UART_c67.c,20 :: 		
0x07A6	0x0EFF      	MOVLW       _UART1_Data_Ready
0x07A8	0x6FD2      	MOVWF       _UART_Rdy_Ptr, 1
0x07AA	0x0EFF      	MOVLW       hi_addr(_UART1_Data_Ready)
0x07AC	0x6FD3      	MOVWF       _UART_Rdy_Ptr+1, 1
0x07AE	0x0E00      	MOVLW       0
0x07B0	0x6FD4      	MOVWF       _UART_Rdy_Ptr+2, 1
0x07B2	0x0E00      	MOVLW       0
0x07B4	0x6FD5      	MOVWF       _UART_Rdy_Ptr+3, 1
;__Lib_UART_c67.c,21 :: 		
0x07B6	0x0EFF      	MOVLW       _UART1_Tx_Idle
0x07B8	0x6FCA      	MOVWF       _UART_Tx_Idle_Ptr, 1
0x07BA	0x0EFF      	MOVLW       hi_addr(_UART1_Tx_Idle)
0x07BC	0x6FCB      	MOVWF       _UART_Tx_Idle_Ptr+1, 1
0x07BE	0x0E00      	MOVLW       0
0x07C0	0x6FCC      	MOVWF       _UART_Tx_Idle_Ptr+2, 1
0x07C2	0x0E00      	MOVLW       0
0x07C4	0x6FCD      	MOVWF       _UART_Tx_Idle_Ptr+3, 1
;__Lib_UART_c67.c,23 :: 		
0x07C6	0x8AAC      	BSF         TXSTA, 5 
;__Lib_UART_c67.c,24 :: 		
0x07C8	0x0E90      	MOVLW       144
0x07CA	0x6EAB      	MOVWF       RCSTA 
;__Lib_UART_c67.c,25 :: 		
0x07CC	0x8E94      	BSF         TRISC7_bit, BitPos(TRISC7_bit+0) 
;__Lib_UART_c67.c,26 :: 		
0x07CE	0x9C94      	BCF         TRISC6_bit, BitPos(TRISC6_bit+0) 
;__Lib_UART_c67.c,28 :: 		
L_UART1_Init0:
0x07D0	0xAA9E      	BTFSS       PIR1, 5 
0x07D2	0xD003      	BRA         L_UART1_Init1
;__Lib_UART_c67.c,29 :: 		
0x07D4	0xF000CFAE  	MOVFF       RCREG, R0
0x07D8	0xD7FB      	BRA         L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,30 :: 		
L_end_UART1_Init:
0x07DA	0x0012      	RETURN      0
; end of _UART1_Init
_writeSingleBlock:
;soundrec.c,138 :: 		writeSingleBlock(void)
;soundrec.c,140 :: 		uint16_t g = 0;
0x07DC	0x0100      	MOVLB       0
0x07DE	0x6BE6      	CLRF        writeSingleBlock_g_L0, 1
0x07E0	0x6BE7      	CLRF        writeSingleBlock_g_L0+1, 1
;soundrec.c,141 :: 		spiWrite(0xff);
0x07E2	0x0EFF      	MOVLW       255
0x07E4	0x0102      	MOVLB       2
0x07E6	0x6FFE      	MOVWF       FARG_SPI1_Write_data_, 1
0x07E8	0xDC2E      	RCALL       _SPI1_Write
;soundrec.c,143 :: 		spiReadData = spiRead();
0x07EA	0x0EFF      	MOVLW       255
0x07EC	0x0102      	MOVLB       2
0x07EE	0x6FFF      	MOVWF       FARG_SPI1_Read_buffer, 1
0x07F0	0xDC15      	RCALL       _SPI1_Read
0x07F2	0xF0C9C000  	MOVFF       R0, _spiReadData
;soundrec.c,144 :: 		while (spiReadData != 0xff)
L_writeSingleBlock10:
0x07F6	0x0100      	MOVLB       0
0x07F8	0x51C9      	MOVF        _spiReadData, 0, 1
0x07FA	0x0AFF      	XORLW       255
0x07FC	0xE014      	BZ          L_writeSingleBlock11
;soundrec.c,146 :: 		spiReadData = spiRead();
0x07FE	0x0EFF      	MOVLW       255
0x0800	0x0102      	MOVLB       2
0x0802	0x6FFF      	MOVWF       FARG_SPI1_Read_buffer, 1
0x0804	0xDC0B      	RCALL       _SPI1_Read
0x0806	0xF0C9C000  	MOVFF       R0, _spiReadData
;soundrec.c,147 :: 		UWR("Card busy!");
0x080A	0x0E42      	MOVLW       ?lstr3_soundrec
0x080C	0x0102      	MOVLB       2
0x080E	0x6FE8      	MOVWF       FARG_UART_Write_Text_uart_text, 1
0x0810	0x0E00      	MOVLW       hi_addr(?lstr3_soundrec)
0x0812	0x6FE9      	MOVWF       FARG_UART_Write_Text_uart_text+1, 1
0x0814	0xDDD5      	RCALL       _UART_Write_Text
0x0816	0x0E0D      	MOVLW       13
0x0818	0x6FF6      	MOVWF       FARG_UART_Write__data, 1
0x081A	0xDCB8      	RCALL       _UART_Write
0x081C	0x0E0A      	MOVLW       10
0x081E	0x0102      	MOVLB       2
0x0820	0x6FF6      	MOVWF       FARG_UART_Write__data, 1
0x0822	0xDCB4      	RCALL       _UART_Write
;soundrec.c,148 :: 		}
0x0824	0xD7E8      	BRA         L_writeSingleBlock10
L_writeSingleBlock11:
;soundrec.c,150 :: 		command(24, arg, 0x95);
0x0826	0x0E18      	MOVLW       24
0x0828	0x0102      	MOVLB       2
0x082A	0x6FE8      	MOVWF       FARG_command_command, 1
0x082C	0xF2E9C0C5  	MOVFF       _arg, FARG_command_fourbyte_arg
0x0830	0xF2EAC0C6  	MOVFF       _arg+1, FARG_command_fourbyte_arg+1
0x0834	0xF2EBC0C7  	MOVFF       _arg+2, FARG_command_fourbyte_arg+2
0x0838	0xF2ECC0C8  	MOVFF       _arg+3, FARG_command_fourbyte_arg+3
0x083C	0x0E95      	MOVLW       149
0x083E	0x6FED      	MOVWF       FARG_command_CRCbits, 1
0x0840	0xDD61      	RCALL       _command
;soundrec.c,152 :: 		while (spiReadData != 0)
L_writeSingleBlock12:
0x0842	0x0100      	MOVLB       0
0x0844	0x51C9      	MOVF        _spiReadData, 0, 1
0x0846	0x0A00      	XORLW       0
0x0848	0xE008      	BZ          L_writeSingleBlock13
;soundrec.c,154 :: 		spiReadData = spiRead();
0x084A	0x0EFF      	MOVLW       255
0x084C	0x0102      	MOVLB       2
0x084E	0x6FFF      	MOVWF       FARG_SPI1_Read_buffer, 1
0x0850	0xF000EC0E  	CALL        _SPI1_Read, 0
0x0854	0xF0C9C000  	MOVFF       R0, _spiReadData
;soundrec.c,155 :: 		}
0x0858	0xD7F4      	BRA         L_writeSingleBlock12
L_writeSingleBlock13:
;soundrec.c,156 :: 		UWR("Command accepted!");
0x085A	0x0E73      	MOVLW       ?lstr4_soundrec
0x085C	0x0102      	MOVLB       2
0x085E	0x6FE8      	MOVWF       FARG_UART_Write_Text_uart_text, 1
0x0860	0x0E00      	MOVLW       hi_addr(?lstr4_soundrec)
0x0862	0x6FE9      	MOVWF       FARG_UART_Write_Text_uart_text+1, 1
0x0864	0xDDAD      	RCALL       _UART_Write_Text
0x0866	0x0E0D      	MOVLW       13
0x0868	0x6FF6      	MOVWF       FARG_UART_Write__data, 1
0x086A	0xDC90      	RCALL       _UART_Write
0x086C	0x0E0A      	MOVLW       10
0x086E	0x0102      	MOVLB       2
0x0870	0x6FF6      	MOVWF       FARG_UART_Write__data, 1
0x0872	0xDC8C      	RCALL       _UART_Write
;soundrec.c,157 :: 		spiWrite(0xff);
0x0874	0x0EFF      	MOVLW       255
0x0876	0x0102      	MOVLB       2
0x0878	0x6FFE      	MOVWF       FARG_SPI1_Write_data_, 1
0x087A	0xF000EC23  	CALL        _SPI1_Write, 0
;soundrec.c,158 :: 		spiWrite(0xff);
0x087E	0x0EFF      	MOVLW       255
0x0880	0x0102      	MOVLB       2
0x0882	0x6FFE      	MOVWF       FARG_SPI1_Write_data_, 1
0x0884	0xF000EC23  	CALL        _SPI1_Write, 0
;soundrec.c,159 :: 		spiWrite(0b11111110); // Data token for CMD 24
0x0888	0x0EFE      	MOVLW       254
0x088A	0x0102      	MOVLB       2
0x088C	0x6FFE      	MOVWF       FARG_SPI1_Write_data_, 1
0x088E	0xF000EC23  	CALL        _SPI1_Write, 0
;soundrec.c,160 :: 		for (g = 0; g < 512; g++)
0x0892	0x0100      	MOVLB       0
0x0894	0x6BE6      	CLRF        writeSingleBlock_g_L0, 1
0x0896	0x6BE7      	CLRF        writeSingleBlock_g_L0+1, 1
L_writeSingleBlock14:
0x0898	0x0E02      	MOVLW       2
0x089A	0x5DE7      	SUBWF       writeSingleBlock_g_L0+1, 0, 1
0x089C	0xE102      	BNZ         L__writeSingleBlock69
0x089E	0x0E00      	MOVLW       0
0x08A0	0x5DE6      	SUBWF       writeSingleBlock_g_L0, 0, 1
L__writeSingleBlock69:
0x08A2	0xE209      	BC          L_writeSingleBlock15
;soundrec.c,162 :: 		spiWrite(0x99);
0x08A4	0x0E99      	MOVLW       153
0x08A6	0x0102      	MOVLB       2
0x08A8	0x6FFE      	MOVWF       FARG_SPI1_Write_data_, 1
0x08AA	0xF000EC23  	CALL        _SPI1_Write, 0
;soundrec.c,160 :: 		for (g = 0; g < 512; g++)
0x08AE	0x0100      	MOVLB       0
0x08B0	0x4BE6      	INFSNZ      writeSingleBlock_g_L0, 1, 1
0x08B2	0x2BE7      	INCF        writeSingleBlock_g_L0+1, 1, 1
;soundrec.c,163 :: 		}
0x08B4	0xD7F1      	BRA         L_writeSingleBlock14
L_writeSingleBlock15:
;soundrec.c,164 :: 		spiWrite(0xff);
0x08B6	0x0EFF      	MOVLW       255
0x08B8	0x0102      	MOVLB       2
0x08BA	0x6FFE      	MOVWF       FARG_SPI1_Write_data_, 1
0x08BC	0xF000EC23  	CALL        _SPI1_Write, 0
;soundrec.c,165 :: 		spiWrite(0xff);
0x08C0	0x0EFF      	MOVLW       255
0x08C2	0x0102      	MOVLB       2
0x08C4	0x6FFE      	MOVWF       FARG_SPI1_Write_data_, 1
0x08C6	0xF000EC23  	CALL        _SPI1_Write, 0
;soundrec.c,166 :: 		spiReadData = spiRead();
0x08CA	0x0EFF      	MOVLW       255
0x08CC	0x0102      	MOVLB       2
0x08CE	0x6FFF      	MOVWF       FARG_SPI1_Read_buffer, 1
0x08D0	0xF000EC0E  	CALL        _SPI1_Read, 0
0x08D4	0xF0C9C000  	MOVFF       R0, _spiReadData
;soundrec.c,168 :: 		if ((spiReadData & 0b00011111) == 0x05)
0x08D8	0x0E1F      	MOVLW       31
0x08DA	0x0100      	MOVLB       0
0x08DC	0x15C9      	ANDWF       _spiReadData, 0, 1
0x08DE	0x6E01      	MOVWF       R1 
0x08E0	0x5001      	MOVF        R1, 0 
0x08E2	0x0A05      	XORLW       5
0x08E4	0xE10D      	BNZ         L_writeSingleBlock17
;soundrec.c,170 :: 		UWR("Data accepted!");
0x08E6	0x0E64      	MOVLW       ?lstr5_soundrec
0x08E8	0x0102      	MOVLB       2
0x08EA	0x6FE8      	MOVWF       FARG_UART_Write_Text_uart_text, 1
0x08EC	0x0E00      	MOVLW       hi_addr(?lstr5_soundrec)
0x08EE	0x6FE9      	MOVWF       FARG_UART_Write_Text_uart_text+1, 1
0x08F0	0xDD67      	RCALL       _UART_Write_Text
0x08F2	0x0E0D      	MOVLW       13
0x08F4	0x6FF6      	MOVWF       FARG_UART_Write__data, 1
0x08F6	0xDC4A      	RCALL       _UART_Write
0x08F8	0x0E0A      	MOVLW       10
0x08FA	0x0102      	MOVLB       2
0x08FC	0x6FF6      	MOVWF       FARG_UART_Write__data, 1
0x08FE	0xDC46      	RCALL       _UART_Write
;soundrec.c,171 :: 		}
L_writeSingleBlock17:
;soundrec.c,172 :: 		spiReadData = spiRead();
0x0900	0x0EFF      	MOVLW       255
0x0902	0x0102      	MOVLB       2
0x0904	0x6FFF      	MOVWF       FARG_SPI1_Read_buffer, 1
0x0906	0xF000EC0E  	CALL        _SPI1_Read, 0
0x090A	0xF0C9C000  	MOVFF       R0, _spiReadData
;soundrec.c,173 :: 		while (spiReadData != 0xff)
L_writeSingleBlock18:
0x090E	0x0100      	MOVLB       0
0x0910	0x51C9      	MOVF        _spiReadData, 0, 1
0x0912	0x0AFF      	XORLW       255
0x0914	0xE008      	BZ          L_writeSingleBlock19
;soundrec.c,175 :: 		spiReadData = spiRead();
0x0916	0x0EFF      	MOVLW       255
0x0918	0x0102      	MOVLB       2
0x091A	0x6FFF      	MOVWF       FARG_SPI1_Read_buffer, 1
0x091C	0xF000EC0E  	CALL        _SPI1_Read, 0
0x0920	0xF0C9C000  	MOVFF       R0, _spiReadData
;soundrec.c,176 :: 		}
0x0924	0xD7F4      	BRA         L_writeSingleBlock18
L_writeSingleBlock19:
;soundrec.c,177 :: 		UWR("Card is idle");
0x0926	0x0E35      	MOVLW       ?lstr6_soundrec
0x0928	0x0102      	MOVLB       2
0x092A	0x6FE8      	MOVWF       FARG_UART_Write_Text_uart_text, 1
0x092C	0x0E00      	MOVLW       hi_addr(?lstr6_soundrec)
0x092E	0x6FE9      	MOVWF       FARG_UART_Write_Text_uart_text+1, 1
0x0930	0xDD47      	RCALL       _UART_Write_Text
0x0932	0x0E0D      	MOVLW       13
0x0934	0x6FF6      	MOVWF       FARG_UART_Write__data, 1
0x0936	0xDC2A      	RCALL       _UART_Write
0x0938	0x0E0A      	MOVLW       10
0x093A	0x0102      	MOVLB       2
0x093C	0x6FF6      	MOVWF       FARG_UART_Write__data, 1
0x093E	0xDC26      	RCALL       _UART_Write
;soundrec.c,178 :: 		}
L_end_writeSingleBlock:
0x0940	0x0012      	RETURN      0
; end of _writeSingleBlock
_IntToStr:
;__Lib_Conversions.c,146 :: 		
;__Lib_Conversions.c,152 :: 		
0x0942	0x0100      	MOVLB       0
0x0944	0x6BEC      	CLRF        IntToStr_negative_L0, 1
0x0946	0x6BED      	CLRF        IntToStr_negative_L0+1, 1
;__Lib_Conversions.c,153 :: 		
0x0948	0xF0EEC0E6  	MOVFF       FARG_IntToStr_input, IntToStr_inword_L0
0x094C	0xF0EFC0E7  	MOVFF       FARG_IntToStr_input+1, IntToStr_inword_L0+1
;__Lib_Conversions.c,154 :: 		
0x0950	0x0E80      	MOVLW       128
0x0952	0x19E7      	XORWF       FARG_IntToStr_input+1, 0, 1
0x0954	0x6E00      	MOVWF       R0 
0x0956	0x0E80      	MOVLW       128
0x0958	0x5C00      	SUBWF       R0, 0 
0x095A	0xE102      	BNZ         L__IntToStr115
0x095C	0x0E00      	MOVLW       0
0x095E	0x5DE6      	SUBWF       FARG_IntToStr_input, 0, 1
L__IntToStr115:
0x0960	0xE20B      	BC          L_IntToStr23
;__Lib_Conversions.c,155 :: 		
0x0962	0x0E01      	MOVLW       1
0x0964	0x6FEC      	MOVWF       IntToStr_negative_L0, 1
0x0966	0x0E00      	MOVLW       0
0x0968	0x6FED      	MOVWF       IntToStr_negative_L0+1, 1
;__Lib_Conversions.c,156 :: 		
0x096A	0x51E6      	MOVF        FARG_IntToStr_input, 0, 1
0x096C	0x0800      	SUBLW       0
0x096E	0x6FEE      	MOVWF       IntToStr_inword_L0, 1
0x0970	0xF0EFC0E7  	MOVFF       FARG_IntToStr_input+1, IntToStr_inword_L0+1
0x0974	0x0E00      	MOVLW       0
0x0976	0x57EF      	SUBFWB      IntToStr_inword_L0+1, 1, 1
;__Lib_Conversions.c,157 :: 		
L_IntToStr23:
;__Lib_Conversions.c,158 :: 		
0x0978	0xF2E8C0EE  	MOVFF       IntToStr_inword_L0, FARG_WordToStr_input
0x097C	0xF2E9C0EF  	MOVFF       IntToStr_inword_L0+1, FARG_WordToStr_input+1
0x0980	0xF2EAC0E8  	MOVFF       FARG_IntToStr_output, FARG_WordToStr_output
0x0984	0xF2EBC0E9  	MOVFF       FARG_IntToStr_output+1, FARG_WordToStr_output+1
0x0988	0xDDBA      	RCALL       _WordToStr
;__Lib_Conversions.c,160 :: 		
0x098A	0x0E06      	MOVLW       6
0x098C	0x0100      	MOVLB       0
0x098E	0x6FEA      	MOVWF       IntToStr_i_L0, 1
0x0990	0x0E00      	MOVLW       0
0x0992	0x6FEB      	MOVWF       IntToStr_i_L0+1, 1
;__Lib_Conversions.c,161 :: 		
L_IntToStr24:
0x0994	0x0E00      	MOVLW       0
0x0996	0x6E00      	MOVWF       R0 
0x0998	0x51EB      	MOVF        IntToStr_i_L0+1, 0, 1
0x099A	0x5C00      	SUBWF       R0, 0 
0x099C	0xE102      	BNZ         L__IntToStr116
0x099E	0x51EA      	MOVF        IntToStr_i_L0, 0, 1
0x09A0	0x0800      	SUBLW       0
L__IntToStr116:
0x09A2	0xE219      	BC          L_IntToStr25
;__Lib_Conversions.c,162 :: 		
0x09A4	0x51EA      	MOVF        IntToStr_i_L0, 0, 1
0x09A6	0x25E8      	ADDWF       FARG_IntToStr_output, 0, 1
0x09A8	0x6EE1      	MOVWF       FSR1L 
0x09AA	0x51EB      	MOVF        IntToStr_i_L0+1, 0, 1
0x09AC	0x21E9      	ADDWFC      FARG_IntToStr_output+1, 0, 1
0x09AE	0x6EE2      	MOVWF       FSR1H 
0x09B0	0x0E01      	MOVLW       1
0x09B2	0x5DEA      	SUBWF       IntToStr_i_L0, 0, 1
0x09B4	0x6E00      	MOVWF       R0 
0x09B6	0x0E00      	MOVLW       0
0x09B8	0x59EB      	SUBWFB      IntToStr_i_L0+1, 0, 1
0x09BA	0x6E01      	MOVWF       R1 
0x09BC	0x5000      	MOVF        R0, 0 
0x09BE	0x25E8      	ADDWF       FARG_IntToStr_output, 0, 1
0x09C0	0x6EE9      	MOVWF       FSR0L 
0x09C2	0x5001      	MOVF        R1, 0 
0x09C4	0x21E9      	ADDWFC      FARG_IntToStr_output+1, 0, 1
0x09C6	0x6EEA      	MOVWF       FSR0H 
0x09C8	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
;__Lib_Conversions.c,163 :: 		
0x09CC	0x0E01      	MOVLW       1
0x09CE	0x5FEA      	SUBWF       IntToStr_i_L0, 1, 1
0x09D0	0x0E00      	MOVLW       0
0x09D2	0x5BEB      	SUBWFB      IntToStr_i_L0+1, 1, 1
;__Lib_Conversions.c,164 :: 		
0x09D4	0xD7DF      	BRA         L_IntToStr24
L_IntToStr25:
;__Lib_Conversions.c,165 :: 		
0x09D6	0xFFE1C0E8  	MOVFF       FARG_IntToStr_output, FSR1L
0x09DA	0xFFE2C0E9  	MOVFF       FARG_IntToStr_output+1, FSR1H
0x09DE	0x0E20      	MOVLW       32
0x09E0	0x6EE6      	MOVWF       POSTINC1 
;__Lib_Conversions.c,166 :: 		
0x09E2	0x51EC      	MOVF        IntToStr_negative_L0, 0, 1
0x09E4	0x11ED      	IORWF       IntToStr_negative_L0+1, 0, 1
0x09E6	0xE01A      	BZ          L_IntToStr26
;__Lib_Conversions.c,167 :: 		
0x09E8	0x6BEA      	CLRF        IntToStr_i_L0, 1
0x09EA	0x6BEB      	CLRF        IntToStr_i_L0+1, 1
;__Lib_Conversions.c,168 :: 		
L_IntToStr27:
0x09EC	0x51EA      	MOVF        IntToStr_i_L0, 0, 1
0x09EE	0x25E8      	ADDWF       FARG_IntToStr_output, 0, 1
0x09F0	0x6EE9      	MOVWF       FSR0L 
0x09F2	0x51EB      	MOVF        IntToStr_i_L0+1, 0, 1
0x09F4	0x21E9      	ADDWFC      FARG_IntToStr_output+1, 0, 1
0x09F6	0x6EEA      	MOVWF       FSR0H 
0x09F8	0x50EE      	MOVF        POSTINC0, 0 
0x09FA	0x0A20      	XORLW       32
0x09FC	0xE103      	BNZ         L_IntToStr28
0x09FE	0x4BEA      	INFSNZ      IntToStr_i_L0, 1, 1
0x0A00	0x2BEB      	INCF        IntToStr_i_L0+1, 1, 1
0x0A02	0xD7F4      	BRA         L_IntToStr27
L_IntToStr28:
;__Lib_Conversions.c,169 :: 		
0x0A04	0x0E01      	MOVLW       1
0x0A06	0x5FEA      	SUBWF       IntToStr_i_L0, 1, 1
0x0A08	0x0E00      	MOVLW       0
0x0A0A	0x5BEB      	SUBWFB      IntToStr_i_L0+1, 1, 1
;__Lib_Conversions.c,170 :: 		
0x0A0C	0x51EA      	MOVF        IntToStr_i_L0, 0, 1
0x0A0E	0x25E8      	ADDWF       FARG_IntToStr_output, 0, 1
0x0A10	0x6EE1      	MOVWF       FSR1L 
0x0A12	0x51EB      	MOVF        IntToStr_i_L0+1, 0, 1
0x0A14	0x21E9      	ADDWFC      FARG_IntToStr_output+1, 0, 1
0x0A16	0x6EE2      	MOVWF       FSR1H 
0x0A18	0x0E2D      	MOVLW       45
0x0A1A	0x6EE6      	MOVWF       POSTINC1 
L_IntToStr26:
;__Lib_Conversions.c,171 :: 		
L_end_IntToStr:
0x0A1C	0x0012      	RETURN      0
; end of _IntToStr
_hamdoc:
;soundrec.c,209 :: 		void hamdoc()
;soundrec.c,214 :: 		if (Mmc_Read_Sector(t, a))
0x0A1E	0xF2E8C0BB  	MOVFF       _t, FARG_Mmc_Read_Sector_sector
0x0A22	0xF2E9C0BC  	MOVFF       _t+1, FARG_Mmc_Read_Sector_sector+1
0x0A26	0x0E00      	MOVLW       0
0x0A28	0x0102      	MOVLB       2
0x0A2A	0x6FEA      	MOVWF       FARG_Mmc_Read_Sector_sector+2, 1
0x0A2C	0x6FEB      	MOVWF       FARG_Mmc_Read_Sector_sector+3, 1
0x0A2E	0x0EE8      	MOVLW       hamdoc_a_L0
0x0A30	0x6FEC      	MOVWF       FARG_Mmc_Read_Sector_dbuff, 1
0x0A32	0x0E00      	MOVLW       hi_addr(hamdoc_a_L0)
0x0A34	0x6FED      	MOVWF       FARG_Mmc_Read_Sector_dbuff+1, 1
0x0A36	0xDCDE      	RCALL       _Mmc_Read_Sector
0x0A38	0x5200      	MOVF        R0, 1 
0x0A3A	0xE00F      	BZ          L_hamdoc27
;soundrec.c,216 :: 		UWR("Read error!");
0x0A3C	0x0EAF      	MOVLW       ?lstr9_soundrec
0x0A3E	0x0102      	MOVLB       2
0x0A40	0x6FE8      	MOVWF       FARG_UART_Write_Text_uart_text, 1
0x0A42	0x0E00      	MOVLW       hi_addr(?lstr9_soundrec)
0x0A44	0x6FE9      	MOVWF       FARG_UART_Write_Text_uart_text+1, 1
0x0A46	0xDCBC      	RCALL       _UART_Write_Text
0x0A48	0x0E0D      	MOVLW       13
0x0A4A	0x6FF6      	MOVWF       FARG_UART_Write__data, 1
0x0A4C	0xF000ECC6  	CALL        _UART_Write, 0
0x0A50	0x0E0A      	MOVLW       10
0x0A52	0x0102      	MOVLB       2
0x0A54	0x6FF6      	MOVWF       FARG_UART_Write__data, 1
0x0A56	0xF000ECC6  	CALL        _UART_Write, 0
;soundrec.c,217 :: 		}
L_hamdoc27:
;soundrec.c,218 :: 		for(i=0; i< 512; i++)
0x0A5A	0x0100      	MOVLB       0
0x0A5C	0x6BE6      	CLRF        hamdoc_i_L0, 1
0x0A5E	0x6BE7      	CLRF        hamdoc_i_L0+1, 1
L_hamdoc28:
0x0A60	0x0E02      	MOVLW       2
0x0A62	0x5DE7      	SUBWF       hamdoc_i_L0+1, 0, 1
0x0A64	0xE102      	BNZ         L__hamdoc73
0x0A66	0x0E00      	MOVLW       0
0x0A68	0x5DE6      	SUBWF       hamdoc_i_L0, 0, 1
L__hamdoc73:
0x0A6A	0xE210      	BC          L_hamdoc29
;soundrec.c,220 :: 		DACOUT = a[i];
0x0A6C	0x0EE8      	MOVLW       hamdoc_a_L0
0x0A6E	0x25E6      	ADDWF       hamdoc_i_L0, 0, 1
0x0A70	0x6EE9      	MOVWF       FSR0L 
0x0A72	0x0E00      	MOVLW       hi_addr(hamdoc_a_L0)
0x0A74	0x21E7      	ADDWFC      hamdoc_i_L0+1, 0, 1
0x0A76	0x6EEA      	MOVWF       FSR0H 
0x0A78	0xFF8ACFEE  	MOVFF       POSTINC0, LATB
;soundrec.c,222 :: 		Delay_us(25);
0x0A7C	0x0E29      	MOVLW       41
0x0A7E	0x6E0D      	MOVWF       R13, 0
L_hamdoc31:
0x0A80	0x2E0D      	DECFSZ      R13, 1, 0
0x0A82	0xD7FE      	BRA         L_hamdoc31
0x0A84	0x0000      	NOP
;soundrec.c,218 :: 		for(i=0; i< 512; i++)
0x0A86	0x4BE6      	INFSNZ      hamdoc_i_L0, 1, 1
0x0A88	0x2BE7      	INCF        hamdoc_i_L0+1, 1, 1
;soundrec.c,223 :: 		}
0x0A8A	0xD7EA      	BRA         L_hamdoc28
L_hamdoc29:
;soundrec.c,224 :: 		t++;
0x0A8C	0x0E01      	MOVLW       1
0x0A8E	0x25BB      	ADDWF       _t, 0, 1
0x0A90	0x6E00      	MOVWF       R0 
0x0A92	0x0E00      	MOVLW       0
0x0A94	0x21BC      	ADDWFC      _t+1, 0, 1
0x0A96	0x6E01      	MOVWF       R1 
0x0A98	0xF0BBC000  	MOVFF       R0, _t
0x0A9C	0xF0BCC001  	MOVFF       R1, _t+1
;soundrec.c,225 :: 		}
L_end_hamdoc:
0x0AA0	0x0012      	RETURN      0
; end of _hamdoc
_EEPROM_Read:
;__Lib_EEPROM_256.c,7 :: 		
;__Lib_EEPROM_256.c,9 :: 		
0x0AA2	0x9CA6      	BCF         EECON1, 6 
;__Lib_EEPROM_256.c,10 :: 		
0x0AA4	0xFFA9C0E6  	MOVFF       FARG_EEPROM_Read_address, EEADR
;__Lib_EEPROM_256.c,11 :: 		
0x0AA8	0x9EA6      	BCF         EECON1, 7 
;__Lib_EEPROM_256.c,12 :: 		
0x0AAA	0x80A6      	BSF         EECON1, 0 
;__Lib_EEPROM_256.c,14 :: 		
0x0AAC	0xF000CFA8  	MOVFF       EEDATA, R0
;__Lib_EEPROM_256.c,16 :: 		
L_end_EEPROM_Read:
0x0AB0	0x0012      	RETURN      0
; end of _EEPROM_Read
_main:
0x0AB2	0xF006ECF9  	CALL        3570, 0
;soundrec.c,253 :: 		void main()
;soundrec.c,260 :: 		ADCON1 |= 0x0e; // AIN0 as analog input
0x0AB6	0x0E0E      	MOVLW       14
0x0AB8	0x12C1      	IORWF       ADCON1, 1 
;soundrec.c,261 :: 		ADCON2 |= 0x2d; // 12 Tad and FOSC/16
0x0ABA	0x0E2D      	MOVLW       45
0x0ABC	0x12C0      	IORWF       ADCON2, 1 
;soundrec.c,262 :: 		ADFM_bit = 0; // Left justified
0x0ABE	0x9EC0      	BCF         ADFM_bit, BitPos(ADFM_bit+0) 
;soundrec.c,263 :: 		ADON_bit = 1; // Enable ADC module
0x0AC0	0x80C2      	BSF         ADON_bit, BitPos(ADON_bit+0) 
;soundrec.c,264 :: 		Delay_ms(100);
0x0AC2	0x0E03      	MOVLW       3
0x0AC4	0x6E0B      	MOVWF       R11, 0
0x0AC6	0x0E8A      	MOVLW       138
0x0AC8	0x6E0C      	MOVWF       R12, 0
0x0ACA	0x0E55      	MOVLW       85
0x0ACC	0x6E0D      	MOVWF       R13, 0
L_main40:
0x0ACE	0x2E0D      	DECFSZ      R13, 1, 0
0x0AD0	0xD7FE      	BRA         L_main40
0x0AD2	0x2E0C      	DECFSZ      R12, 1, 0
0x0AD4	0xD7FC      	BRA         L_main40
0x0AD6	0x2E0B      	DECFSZ      R11, 1, 0
0x0AD8	0xD7FA      	BRA         L_main40
0x0ADA	0x0000      	NOP
0x0ADC	0x0000      	NOP
;soundrec.c,267 :: 		TRISD=0xf3;
0x0ADE	0x0EF3      	MOVLW       243
0x0AE0	0x6E95      	MOVWF       TRISD 
;soundrec.c,268 :: 		TRISA2_bit=1;
0x0AE2	0x8492      	BSF         TRISA2_bit, BitPos(TRISA2_bit+0) 
;soundrec.c,269 :: 		TRISD2_bit=1;
0x0AE4	0x8495      	BSF         TRISD2_bit, BitPos(TRISD2_bit+0) 
;soundrec.c,270 :: 		TRISD3_bit=1;
0x0AE6	0x8695      	BSF         TRISD3_bit, BitPos(TRISD3_bit+0) 
;soundrec.c,271 :: 		TRISB=0;
0x0AE8	0x6A93      	CLRF        TRISB 
;soundrec.c,272 :: 		TRISC = 0x00;
0x0AEA	0x6A94      	CLRF        TRISC 
;soundrec.c,275 :: 		UART1_Init(9600);
0x0AEC	0x86B8      	BSF         BAUDCON, 3, 0
0x0AEE	0x0E02      	MOVLW       2
0x0AF0	0x6EB0      	MOVWF       SPBRGH 
0x0AF2	0x0E08      	MOVLW       8
0x0AF4	0x6EAF      	MOVWF       SPBRG 
0x0AF6	0x84AC      	BSF         TXSTA, 2, 0
0x0AF8	0xDE45      	RCALL       _UART1_Init
;soundrec.c,276 :: 		caidatMMC();
0x0AFA	0xDDF4      	RCALL       _caidatMMC
;soundrec.c,283 :: 		for ( ; ; )        // Repeats forever
L_main41:
;soundrec.c,286 :: 		while (SLCT != 0)        // Wait until SELECT pressed
L_main44:
0x0AFC	0xA483      	BTFSS       RD2_bit, BitPos(RD2_bit+0) 
0x0AFE	0xD001      	BRA         L_main45
;soundrec.c,288 :: 		}
0x0B00	0xD7FD      	BRA         L_main44
L_main45:
;soundrec.c,293 :: 		UWR("Select a Menu");
0x0B02	0x0EA1      	MOVLW       ?lstr12_soundrec
0x0B04	0x0102      	MOVLB       2
0x0B06	0x6FE8      	MOVWF       FARG_UART_Write_Text_uart_text, 1
0x0B08	0x0E00      	MOVLW       hi_addr(?lstr12_soundrec)
0x0B0A	0x6FE9      	MOVWF       FARG_UART_Write_Text_uart_text+1, 1
0x0B0C	0xDC59      	RCALL       _UART_Write_Text
0x0B0E	0x0E0D      	MOVLW       13
0x0B10	0x6FF6      	MOVWF       FARG_UART_Write__data, 1
0x0B12	0xF000ECC6  	CALL        _UART_Write, 0
0x0B16	0x0E0A      	MOVLW       10
0x0B18	0x0102      	MOVLB       2
0x0B1A	0x6FF6      	MOVWF       FARG_UART_Write__data, 1
0x0B1C	0xF000ECC6  	CALL        _UART_Write, 0
;soundrec.c,294 :: 		while (OK)
L_main46:
0x0B20	0xA683      	BTFSS       RD3_bit, BitPos(RD3_bit+0) 
0x0B22	0xD074      	BRA         L_main47
;soundrec.c,296 :: 		if (!SLCT)
0x0B24	0xB483      	BTFSC       RD2_bit, BitPos(RD2_bit+0) 
0x0B26	0xD023      	BRA         L_main48
;soundrec.c,298 :: 		Delay_ms(300);
0x0B28	0x0E08      	MOVLW       8
0x0B2A	0x6E0B      	MOVWF       R11, 0
0x0B2C	0x0E9D      	MOVLW       157
0x0B2E	0x6E0C      	MOVWF       R12, 0
0x0B30	0x0E05      	MOVLW       5
0x0B32	0x6E0D      	MOVWF       R13, 0
L_main49:
0x0B34	0x2E0D      	DECFSZ      R13, 1, 0
0x0B36	0xD7FE      	BRA         L_main49
0x0B38	0x2E0C      	DECFSZ      R12, 1, 0
0x0B3A	0xD7FC      	BRA         L_main49
0x0B3C	0x2E0B      	DECFSZ      R11, 1, 0
0x0B3E	0xD7FA      	BRA         L_main49
0x0B40	0x0000      	NOP
0x0B42	0x0000      	NOP
;soundrec.c,299 :: 		mode++;
0x0B44	0x0E01      	MOVLW       1
0x0B46	0x0100      	MOVLB       0
0x0B48	0x25BE      	ADDWF       _mode, 0, 1
0x0B4A	0x6E00      	MOVWF       R0 
0x0B4C	0x0E00      	MOVLW       0
0x0B4E	0x21BF      	ADDWFC      _mode+1, 0, 1
0x0B50	0x6E01      	MOVWF       R1 
0x0B52	0xF0BEC000  	MOVFF       R0, _mode
0x0B56	0xF0BFC001  	MOVFF       R1, _mode+1
;soundrec.c,300 :: 		if (mode == 3)
0x0B5A	0x0E00      	MOVLW       0
0x0B5C	0x19BF      	XORWF       _mode+1, 0, 1
0x0B5E	0xE102      	BNZ         L__main79
0x0B60	0x0E03      	MOVLW       3
0x0B62	0x19BE      	XORWF       _mode, 0, 1
L__main79:
0x0B64	0xE104      	BNZ         L_main50
;soundrec.c,302 :: 		mode = 1;
0x0B66	0x0E01      	MOVLW       1
0x0B68	0x6FBE      	MOVWF       _mode, 1
0x0B6A	0x0E00      	MOVLW       0
0x0B6C	0x6FBF      	MOVWF       _mode+1, 1
;soundrec.c,303 :: 		}
L_main50:
;soundrec.c,304 :: 		}
L_main48:
0x0B6E	0x0100      	MOVLB       0
;soundrec.c,306 :: 		if ((mode == 1) & (lastMode != mode))
0x0B70	0x0E00      	MOVLW       0
0x0B72	0x19BF      	XORWF       _mode+1, 0, 1
0x0B74	0xE102      	BNZ         L__main80
0x0B76	0x0E01      	MOVLW       1
0x0B78	0x19BE      	XORWF       _mode, 0, 1
L__main80:
0x0B7A	0x0E01      	MOVLW       1
0x0B7C	0xA4D8      	BTFSS       STATUS, 2 
0x0B7E	0x0E00      	MOVLW       0
0x0B80	0x6E01      	MOVWF       R1 
0x0B82	0x0E00      	MOVLW       0
0x0B84	0x19BF      	XORWF       _mode+1, 0, 1
0x0B86	0xE102      	BNZ         L__main81
0x0B88	0x51BE      	MOVF        _mode, 0, 1
0x0B8A	0x19DE      	XORWF       main_lastMode_L0, 0, 1
L__main81:
0x0B8C	0x0E00      	MOVLW       0
0x0B8E	0xA4D8      	BTFSS       STATUS, 2 
0x0B90	0x0E01      	MOVLW       1
0x0B92	0x6E00      	MOVWF       R0 
0x0B94	0x5001      	MOVF        R1, 0 
0x0B96	0x1600      	ANDWF       R0, 1 
0x0B98	0xE010      	BZ          L_main51
;soundrec.c,309 :: 		UWR("Record\n");
0x0B9A	0x0E27      	MOVLW       ?lstr13_soundrec
0x0B9C	0x0102      	MOVLB       2
0x0B9E	0x6FE8      	MOVWF       FARG_UART_Write_Text_uart_text, 1
0x0BA0	0x0E00      	MOVLW       hi_addr(?lstr13_soundrec)
0x0BA2	0x6FE9      	MOVWF       FARG_UART_Write_Text_uart_text+1, 1
0x0BA4	0xDC0D      	RCALL       _UART_Write_Text
0x0BA6	0x0E0D      	MOVLW       13
0x0BA8	0x6FF6      	MOVWF       FARG_UART_Write__data, 1
0x0BAA	0xF000ECC6  	CALL        _UART_Write, 0
0x0BAE	0x0E0A      	MOVLW       10
0x0BB0	0x0102      	MOVLB       2
0x0BB2	0x6FF6      	MOVWF       FARG_UART_Write__data, 1
0x0BB4	0xF000ECC6  	CALL        _UART_Write, 0
;soundrec.c,310 :: 		}
0x0BB8	0xD026      	BRA         L_main52
L_main51:
;soundrec.c,311 :: 		else if ((mode == 2) & (lastMode != mode))
0x0BBA	0x0E00      	MOVLW       0
0x0BBC	0x0100      	MOVLB       0
0x0BBE	0x19BF      	XORWF       _mode+1, 0, 1
0x0BC0	0xE102      	BNZ         L__main82
0x0BC2	0x0E02      	MOVLW       2
0x0BC4	0x19BE      	XORWF       _mode, 0, 1
L__main82:
0x0BC6	0x0E01      	MOVLW       1
0x0BC8	0xA4D8      	BTFSS       STATUS, 2 
0x0BCA	0x0E00      	MOVLW       0
0x0BCC	0x6E01      	MOVWF       R1 
0x0BCE	0x0E00      	MOVLW       0
0x0BD0	0x19BF      	XORWF       _mode+1, 0, 1
0x0BD2	0xE102      	BNZ         L__main83
0x0BD4	0x51BE      	MOVF        _mode, 0, 1
0x0BD6	0x19DE      	XORWF       main_lastMode_L0, 0, 1
L__main83:
0x0BD8	0x0E00      	MOVLW       0
0x0BDA	0xA4D8      	BTFSS       STATUS, 2 
0x0BDC	0x0E01      	MOVLW       1
0x0BDE	0x6E00      	MOVWF       R0 
0x0BE0	0x5001      	MOVF        R1, 0 
0x0BE2	0x1600      	ANDWF       R0, 1 
0x0BE4	0xE010      	BZ          L_main53
;soundrec.c,314 :: 		UWR("Play\n");
0x0BE6	0x0E2F      	MOVLW       ?lstr14_soundrec
0x0BE8	0x0102      	MOVLB       2
0x0BEA	0x6FE8      	MOVWF       FARG_UART_Write_Text_uart_text, 1
0x0BEC	0x0E00      	MOVLW       hi_addr(?lstr14_soundrec)
0x0BEE	0x6FE9      	MOVWF       FARG_UART_Write_Text_uart_text+1, 1
0x0BF0	0xF001ECE0  	CALL        _UART_Write_Text, 0
0x0BF4	0x0E0D      	MOVLW       13
0x0BF6	0x6FF6      	MOVWF       FARG_UART_Write__data, 1
0x0BF8	0xF000ECC6  	CALL        _UART_Write, 0
0x0BFC	0x0E0A      	MOVLW       10
0x0BFE	0x0102      	MOVLB       2
0x0C00	0x6FF6      	MOVWF       FARG_UART_Write__data, 1
0x0C02	0xF000ECC6  	CALL        _UART_Write, 0
;soundrec.c,315 :: 		}
L_main53:
L_main52:
;soundrec.c,320 :: 		lastMode = mode;
0x0C06	0xF0DEC0BE  	MOVFF       _mode, main_lastMode_L0
;soundrec.c,321 :: 		}
0x0C0A	0xD78A      	BRA         L_main46
L_main47:
;soundrec.c,385 :: 		if (mode == 1)
0x0C0C	0x0E00      	MOVLW       0
0x0C0E	0x0100      	MOVLB       0
0x0C10	0x19BF      	XORWF       _mode+1, 0, 1
0x0C12	0xE102      	BNZ         L__main84
0x0C14	0x0E01      	MOVLW       1
0x0C16	0x19BE      	XORWF       _mode, 0, 1
L__main84:
0x0C18	0xE114      	BNZ         L_main54
;soundrec.c,390 :: 		t = 0;
0x0C1A	0x6BBB      	CLRF        _t, 1
0x0C1C	0x6BBC      	CLRF        _t+1, 1
;soundrec.c,391 :: 		UWR("Writing");
0x0C1E	0x0E15      	MOVLW       ?lstr15_soundrec
0x0C20	0x0102      	MOVLB       2
0x0C22	0x6FE8      	MOVWF       FARG_UART_Write_Text_uart_text, 1
0x0C24	0x0E00      	MOVLW       hi_addr(?lstr15_soundrec)
0x0C26	0x6FE9      	MOVWF       FARG_UART_Write_Text_uart_text+1, 1
0x0C28	0xF001ECE0  	CALL        _UART_Write_Text, 0
0x0C2C	0x0E0D      	MOVLW       13
0x0C2E	0x6FF6      	MOVWF       FARG_UART_Write__data, 1
0x0C30	0xF000ECC6  	CALL        _UART_Write, 0
0x0C34	0x0E0A      	MOVLW       10
0x0C36	0x0102      	MOVLB       2
0x0C38	0x6FF6      	MOVWF       FARG_UART_Write__data, 1
0x0C3A	0xF000ECC6  	CALL        _UART_Write, 0
;soundrec.c,392 :: 		PORTB = 0x00;
0x0C3E	0x6A81      	CLRF        PORTB 
;soundrec.c,415 :: 		writeSingleBlock();
0x0C40	0xDDCD      	RCALL       _writeSingleBlock
;soundrec.c,417 :: 		}
L_main54:
;soundrec.c,419 :: 		if (mode == 2)
0x0C42	0x0E00      	MOVLW       0
0x0C44	0x0100      	MOVLB       0
0x0C46	0x19BF      	XORWF       _mode+1, 0, 1
0x0C48	0xE102      	BNZ         L__main85
0x0C4A	0x0E02      	MOVLW       2
0x0C4C	0x19BE      	XORWF       _mode, 0, 1
L__main85:
0x0C4E	0xA4D8      	BTFSS       STATUS, 2 
0x0C50	0xD078      	BRA         L_main55
;soundrec.c,423 :: 		UWR("Reading");
0x0C52	0x0E1D      	MOVLW       ?lstr16_soundrec
0x0C54	0x0102      	MOVLB       2
0x0C56	0x6FE8      	MOVWF       FARG_UART_Write_Text_uart_text, 1
0x0C58	0x0E00      	MOVLW       hi_addr(?lstr16_soundrec)
0x0C5A	0x6FE9      	MOVWF       FARG_UART_Write_Text_uart_text+1, 1
0x0C5C	0xF001ECE0  	CALL        _UART_Write_Text, 0
0x0C60	0x0E0D      	MOVLW       13
0x0C62	0x6FF6      	MOVWF       FARG_UART_Write__data, 1
0x0C64	0xF000ECC6  	CALL        _UART_Write, 0
0x0C68	0x0E0A      	MOVLW       10
0x0C6A	0x0102      	MOVLB       2
0x0C6C	0x6FF6      	MOVWF       FARG_UART_Write__data, 1
0x0C6E	0xF000ECC6  	CALL        _UART_Write, 0
;soundrec.c,424 :: 		t = 0;
0x0C72	0x0100      	MOVLB       0
0x0C74	0x6BBB      	CLRF        _t, 1
0x0C76	0x6BBC      	CLRF        _t+1, 1
;soundrec.c,425 :: 		numberOfSectors = 0;
0x0C78	0x6A25      	CLRF        _numberOfSectors 
0x0C7A	0x6A26      	CLRF        _numberOfSectors+1 
;soundrec.c,427 :: 		x = EEPROM_Read(0x82);
0x0C7C	0x0E82      	MOVLW       130
0x0C7E	0x6FE6      	MOVWF       FARG_EEPROM_Read_address, 1
0x0C80	0xDF10      	RCALL       _EEPROM_Read
0x0C82	0xF0C4C000  	MOVFF       R0, _x
;soundrec.c,428 :: 		numberOfSectors |= x << 8;
0x0C86	0xF001C0C4  	MOVFF       _x, R1
0x0C8A	0x6A00      	CLRF        R0 
0x0C8C	0x5000      	MOVF        R0, 0 
0x0C8E	0x1225      	IORWF       _numberOfSectors, 1 
0x0C90	0x5001      	MOVF        R1, 0 
0x0C92	0x1226      	IORWF       _numberOfSectors+1, 1 
;soundrec.c,429 :: 		Delay_ms(25);
0x0C94	0x0EA3      	MOVLW       163
0x0C96	0x6E0C      	MOVWF       R12, 0
0x0C98	0x0E55      	MOVLW       85
0x0C9A	0x6E0D      	MOVWF       R13, 0
L_main56:
0x0C9C	0x2E0D      	DECFSZ      R13, 1, 0
0x0C9E	0xD7FE      	BRA         L_main56
0x0CA0	0x2E0C      	DECFSZ      R12, 1, 0
0x0CA2	0xD7FC      	BRA         L_main56
;soundrec.c,430 :: 		x = EEPROM_Read(0x81);
0x0CA4	0x0E81      	MOVLW       129
0x0CA6	0x6FE6      	MOVWF       FARG_EEPROM_Read_address, 1
0x0CA8	0xDEFC      	RCALL       _EEPROM_Read
0x0CAA	0xF0C4C000  	MOVFF       R0, _x
;soundrec.c,431 :: 		numberOfSectors |= x;
0x0CAE	0x51C4      	MOVF        _x, 0, 1
0x0CB0	0x1225      	IORWF       _numberOfSectors, 1 
0x0CB2	0x0E00      	MOVLW       0
0x0CB4	0x1226      	IORWF       _numberOfSectors+1, 1 
;soundrec.c,432 :: 		IntToStr(numberOfSectors, strNumOfSec);
0x0CB6	0xF0E6C025  	MOVFF       _numberOfSectors, FARG_IntToStr_input
0x0CBA	0xF0E7C026  	MOVFF       _numberOfSectors+1, FARG_IntToStr_input+1
0x0CBE	0x0EDF      	MOVLW       main_strNumOfSec_L0
0x0CC0	0x6FE8      	MOVWF       FARG_IntToStr_output, 1
0x0CC2	0x0E00      	MOVLW       hi_addr(main_strNumOfSec_L0)
0x0CC4	0x6FE9      	MOVWF       FARG_IntToStr_output+1, 1
0x0CC6	0xDE3D      	RCALL       _IntToStr
;soundrec.c,433 :: 		UWR(strNumOfSec);
0x0CC8	0x0EDF      	MOVLW       main_strNumOfSec_L0
0x0CCA	0x0102      	MOVLB       2
0x0CCC	0x6FE8      	MOVWF       FARG_UART_Write_Text_uart_text, 1
0x0CCE	0x0E00      	MOVLW       hi_addr(main_strNumOfSec_L0)
0x0CD0	0x6FE9      	MOVWF       FARG_UART_Write_Text_uart_text+1, 1
0x0CD2	0xF001ECE0  	CALL        _UART_Write_Text, 0
0x0CD6	0x0E0D      	MOVLW       13
0x0CD8	0x6FF6      	MOVWF       FARG_UART_Write__data, 1
0x0CDA	0xF000ECC6  	CALL        _UART_Write, 0
0x0CDE	0x0E0A      	MOVLW       10
0x0CE0	0x0102      	MOVLB       2
0x0CE2	0x6FF6      	MOVWF       FARG_UART_Write__data, 1
0x0CE4	0xF000ECC6  	CALL        _UART_Write, 0
;soundrec.c,434 :: 		while(t < numberOfSectors)
L_main57:
0x0CE8	0x5026      	MOVF        _numberOfSectors+1, 0 
0x0CEA	0x0100      	MOVLB       0
0x0CEC	0x5DBC      	SUBWF       _t+1, 0, 1
0x0CEE	0xE102      	BNZ         L__main86
0x0CF0	0x5025      	MOVF        _numberOfSectors, 0 
0x0CF2	0x5DBB      	SUBWF       _t, 0, 1
L__main86:
0x0CF4	0xE202      	BC          L_main58
;soundrec.c,436 :: 		hamdoc();
0x0CF6	0xDE93      	RCALL       _hamdoc
;soundrec.c,442 :: 		}
0x0CF8	0xD7F7      	BRA         L_main57
L_main58:
;soundrec.c,446 :: 		SPI1_Write(0xff);
0x0CFA	0x0EFF      	MOVLW       255
0x0CFC	0x0102      	MOVLB       2
0x0CFE	0x6FFE      	MOVWF       FARG_SPI1_Write_data_, 1
0x0D00	0xF000EC23  	CALL        _SPI1_Write, 0
;soundrec.c,447 :: 		SPI1_Write(0xff);
0x0D04	0x0EFF      	MOVLW       255
0x0D06	0x0102      	MOVLB       2
0x0D08	0x6FFE      	MOVWF       FARG_SPI1_Write_data_, 1
0x0D0A	0xF000EC23  	CALL        _SPI1_Write, 0
;soundrec.c,448 :: 		SPI1_Write(0x8D);
0x0D0E	0x0E8D      	MOVLW       141
0x0D10	0x0102      	MOVLB       2
0x0D12	0x6FFE      	MOVWF       FARG_SPI1_Write_data_, 1
0x0D14	0xF000EC23  	CALL        _SPI1_Write, 0
;soundrec.c,452 :: 		UWR("Stopped. Press anykey!");
0x0D18	0x0E4D      	MOVLW       ?lstr17_soundrec
0x0D1A	0x0102      	MOVLB       2
0x0D1C	0x6FE8      	MOVWF       FARG_UART_Write_Text_uart_text, 1
0x0D1E	0x0E00      	MOVLW       hi_addr(?lstr17_soundrec)
0x0D20	0x6FE9      	MOVWF       FARG_UART_Write_Text_uart_text+1, 1
0x0D22	0xF001ECE0  	CALL        _UART_Write_Text, 0
0x0D26	0x0E0D      	MOVLW       13
0x0D28	0x6FF6      	MOVWF       FARG_UART_Write__data, 1
0x0D2A	0xF000ECC6  	CALL        _UART_Write, 0
0x0D2E	0x0E0A      	MOVLW       10
0x0D30	0x0102      	MOVLB       2
0x0D32	0x6FF6      	MOVWF       FARG_UART_Write__data, 1
0x0D34	0xF000ECC6  	CALL        _UART_Write, 0
;soundrec.c,453 :: 		while (SLCT && OK)
L_main59:
0x0D38	0xA483      	BTFSS       RD2_bit, BitPos(RD2_bit+0) 
0x0D3A	0xD003      	BRA         L_main60
0x0D3C	0xA683      	BTFSS       RD3_bit, BitPos(RD3_bit+0) 
0x0D3E	0xD001      	BRA         L_main60
L__main63:
;soundrec.c,455 :: 		}
0x0D40	0xD7FB      	BRA         L_main59
L_main60:
;soundrec.c,456 :: 		}
L_main55:
;soundrec.c,458 :: 		}
0x0D42	0xD6DC      	BRA         L_main41
;soundrec.c,459 :: 		}
L_end_main:
0x0D44	0xD7FF      	BRA         $+0
; end of _main
0x0DF2	0xF015EE10  	LFSR        1, 21
0x0DF6	0x0EAB      	MOVLW       171
0x0DF8	0x6E00      	MOVWF       R0 
0x0DFA	0x0E01      	MOVLW       1
0x0DFC	0x6E01      	MOVWF       R1 
0x0DFE	0x0E46      	MOVLW       70
0x0E00	0x6EF6      	MOVWF       4086 
0x0E02	0x0E0D      	MOVLW       13
0x0E04	0x6EF7      	MOVWF       TBLPTRH 
0x0E06	0x0E00      	MOVLW       0
0x0E08	0x6EF8      	MOVWF       TBLPTRU 
0x0E0A	0xF003ECBA  	CALL        1908, 0
0x0E0E	0x0012      	RETURN      0
;soundrec.c,0 :: ?ICS?lstr15_soundrec
0x0D46	0x7257 ;?ICS?lstr15_soundrec+0
0x0D48	0x7469 ;?ICS?lstr15_soundrec+2
0x0D4A	0x6E69 ;?ICS?lstr15_soundrec+4
0x0D4C	0x0067 ;?ICS?lstr15_soundrec+6
; end of ?ICS?lstr15_soundrec
;soundrec.c,0 :: ?ICS?lstr16_soundrec
0x0D4E	0x6552 ;?ICS?lstr16_soundrec+0
0x0D50	0x6461 ;?ICS?lstr16_soundrec+2
0x0D52	0x6E69 ;?ICS?lstr16_soundrec+4
0x0D54	0x0067 ;?ICS?lstr16_soundrec+6
; end of ?ICS?lstr16_soundrec
;soundrec.c,0 :: ?ICS_numberOfSectors
0x0D56	0x0000 ;?ICS_numberOfSectors+0
; end of ?ICS_numberOfSectors
;soundrec.c,0 :: ?ICS?lstr13_soundrec
0x0D58	0x6552 ;?ICS?lstr13_soundrec+0
0x0D5A	0x6F63 ;?ICS?lstr13_soundrec+2
0x0D5C	0x6472 ;?ICS?lstr13_soundrec+4
0x0D5E	0x000A ;?ICS?lstr13_soundrec+6
; end of ?ICS?lstr13_soundrec
;soundrec.c,0 :: ?ICS?lstr14_soundrec
0x0D60	0x6C50 ;?ICS?lstr14_soundrec+0
0x0D62	0x7961 ;?ICS?lstr14_soundrec+2
0x0D64	0x000A ;?ICS?lstr14_soundrec+4
; end of ?ICS?lstr14_soundrec
;soundrec.c,0 :: ?ICS?lstr6_soundrec
0x0D66	0x6143 ;?ICS?lstr6_soundrec+0
0x0D68	0x6472 ;?ICS?lstr6_soundrec+2
0x0D6A	0x6920 ;?ICS?lstr6_soundrec+4
0x0D6C	0x2073 ;?ICS?lstr6_soundrec+6
0x0D6E	0x6469 ;?ICS?lstr6_soundrec+8
0x0D70	0x656C ;?ICS?lstr6_soundrec+10
0x0D72	0x00 ;?ICS?lstr6_soundrec+12
; end of ?ICS?lstr6_soundrec
;soundrec.c,0 :: ?ICS?lstr3_soundrec
0x0D73	0x6143 ;?ICS?lstr3_soundrec+0
0x0D75	0x6472 ;?ICS?lstr3_soundrec+2
0x0D77	0x6220 ;?ICS?lstr3_soundrec+4
0x0D79	0x7375 ;?ICS?lstr3_soundrec+6
0x0D7B	0x2179 ;?ICS?lstr3_soundrec+8
0x0D7D	0x00 ;?ICS?lstr3_soundrec+10
; end of ?ICS?lstr3_soundrec
;soundrec.c,0 :: ?ICS?lstr17_soundrec
0x0D7E	0x7453 ;?ICS?lstr17_soundrec+0
0x0D80	0x706F ;?ICS?lstr17_soundrec+2
0x0D82	0x6570 ;?ICS?lstr17_soundrec+4
0x0D84	0x2E64 ;?ICS?lstr17_soundrec+6
0x0D86	0x5020 ;?ICS?lstr17_soundrec+8
0x0D88	0x6572 ;?ICS?lstr17_soundrec+10
0x0D8A	0x7373 ;?ICS?lstr17_soundrec+12
0x0D8C	0x6120 ;?ICS?lstr17_soundrec+14
0x0D8E	0x796E ;?ICS?lstr17_soundrec+16
0x0D90	0x656B ;?ICS?lstr17_soundrec+18
0x0D92	0x2179 ;?ICS?lstr17_soundrec+20
0x0D94	0x00 ;?ICS?lstr17_soundrec+22
; end of ?ICS?lstr17_soundrec
;soundrec.c,0 :: ?ICS?lstr5_soundrec
0x0D95	0x6144 ;?ICS?lstr5_soundrec+0
0x0D97	0x6174 ;?ICS?lstr5_soundrec+2
0x0D99	0x6120 ;?ICS?lstr5_soundrec+4
0x0D9B	0x6363 ;?ICS?lstr5_soundrec+6
0x0D9D	0x7065 ;?ICS?lstr5_soundrec+8
0x0D9F	0x6574 ;?ICS?lstr5_soundrec+10
0x0DA1	0x2164 ;?ICS?lstr5_soundrec+12
0x0DA3	0x00 ;?ICS?lstr5_soundrec+14
; end of ?ICS?lstr5_soundrec
;soundrec.c,0 :: ?ICS?lstr4_soundrec
0x0DA4	0x6F43 ;?ICS?lstr4_soundrec+0
0x0DA6	0x6D6D ;?ICS?lstr4_soundrec+2
0x0DA8	0x6E61 ;?ICS?lstr4_soundrec+4
0x0DAA	0x2064 ;?ICS?lstr4_soundrec+6
0x0DAC	0x6361 ;?ICS?lstr4_soundrec+8
0x0DAE	0x6563 ;?ICS?lstr4_soundrec+10
0x0DB0	0x7470 ;?ICS?lstr4_soundrec+12
0x0DB2	0x6465 ;?ICS?lstr4_soundrec+14
0x0DB4	0x0021 ;?ICS?lstr4_soundrec+16
; end of ?ICS?lstr4_soundrec
;soundrec.c,0 :: ?ICS?lstr2_soundrec
0x0DB6	0x4D4D ;?ICS?lstr2_soundrec+0
0x0DB8	0x2043 ;?ICS?lstr2_soundrec+2
0x0DBA	0x6544 ;?ICS?lstr2_soundrec+4
0x0DBC	0x6574 ;?ICS?lstr2_soundrec+6
0x0DBE	0x7463 ;?ICS?lstr2_soundrec+8
0x0DC0	0x6465 ;?ICS?lstr2_soundrec+10
0x0DC2	0x0021 ;?ICS?lstr2_soundrec+12
; end of ?ICS?lstr2_soundrec
;soundrec.c,0 :: ?ICS?lstr1_soundrec
0x0DC4	0x6544 ;?ICS?lstr1_soundrec+0
0x0DC6	0x6574 ;?ICS?lstr1_soundrec+2
0x0DC8	0x7463 ;?ICS?lstr1_soundrec+4
0x0DCA	0x6E69 ;?ICS?lstr1_soundrec+6
0x0DCC	0x2067 ;?ICS?lstr1_soundrec+8
0x0DCE	0x4D4D ;?ICS?lstr1_soundrec+10
0x0DD0	0x0043 ;?ICS?lstr1_soundrec+12
; end of ?ICS?lstr1_soundrec
;soundrec.c,0 :: ?ICS?lstr12_soundrec
0x0DD2	0x6553 ;?ICS?lstr12_soundrec+0
0x0DD4	0x656C ;?ICS?lstr12_soundrec+2
0x0DD6	0x7463 ;?ICS?lstr12_soundrec+4
0x0DD8	0x6120 ;?ICS?lstr12_soundrec+6
0x0DDA	0x4D20 ;?ICS?lstr12_soundrec+8
0x0DDC	0x6E65 ;?ICS?lstr12_soundrec+10
0x0DDE	0x0075 ;?ICS?lstr12_soundrec+12
; end of ?ICS?lstr12_soundrec
;soundrec.c,0 :: ?ICS?lstr9_soundrec
0x0DE0	0x6552 ;?ICS?lstr9_soundrec+0
0x0DE2	0x6461 ;?ICS?lstr9_soundrec+2
0x0DE4	0x6520 ;?ICS?lstr9_soundrec+4
0x0DE6	0x7272 ;?ICS?lstr9_soundrec+6
0x0DE8	0x726F ;?ICS?lstr9_soundrec+8
0x0DEA	0x0021 ;?ICS?lstr9_soundrec+10
; end of ?ICS?lstr9_soundrec
;soundrec.c,0 :: ?ICS_t
0x0DEC	0x0000 ;?ICS_t+0
; end of ?ICS_t
;__Lib_Mmc.c,0 :: ?ICS__Lib_Mmc_cardType
0x0DEE	0x00 ;?ICS__Lib_Mmc_cardType+0
; end of ?ICS__Lib_Mmc_cardType
;soundrec.c,0 :: ?ICS_mode
0x0DEF	0x0000 ;?ICS_mode+0
; end of ?ICS_mode
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [18]    _SPI1_Read
0x002E      [24]    _____DoIFC
0x0046      [18]    _SPI1_Write
0x0058      [14]    _UART1_Write
0x0066      [26]    __Lib_Mmc_Mmc_DeSelect
0x0080       [4]    __Lib_Mmc_Mmc_Select
0x0084     [210]    __Lib_Mmc_Mmc_Send_Command
0x0156      [54]    _Div_16x16_U
0x018C      [24]    _UART_Write
0x01A4     [352]    __Lib_Mmc_Mmc_UnIdle
0x0304      [98]    _command
0x0366      [90]    _SPI1_Init_Advanced
0x03C0      [52]    _UART_Write_Text
0x03F4     [266]    _Mmc_Read_Sector
0x04FE     [146]    _WordToStr
0x0590     [340]    _Mmc_Init
0x06E4     [144]    _caidatMMC
0x0774      [16]    ___CC2DW
0x0784      [88]    _UART1_Init
0x07DC     [358]    _writeSingleBlock
0x0942     [220]    _IntToStr
0x0A1E     [132]    _hamdoc
0x0AA2      [16]    _EEPROM_Read
0x0AB2     [660]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    UART1_Init_tmp_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATSda_temp_sda_L0
0x0000       [1]    EEPROM_Write_SaveINTCON_L0
0x0000       [1]    FLASH_Erase_64_SaveINTCON_L0
0x0000       [1]    R0
0x0000       [1]    SPI1_Write_tmp_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATScl_temp_scl_L0
0x0001       [1]    __Lib_PS2_Wait_Falling_nsample_L0
0x0001       [1]    R1
0x0001       [1]    FLASH_Erase_Write_64_i_L0
0x0001       [1]    I2C1_Rd_tmp_L0
0x0001       [2]    FLASH_Read_N_Bytes_i_L0
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0001       [1]    ispunct_rslt_L0
0x0001       [1]    FLASH_Write_32_i_L0
0x0002       [1]    R2
0x0002       [1]    FLASH_Write_32_SaveINTCON_L0
0x0002       [2]    memchr_s_L0
0x0002       [2]    memcpy_dd_L0
0x0002       [2]    memset_pp_L0
0x0002       [1]    FLASH_Erase_Write_64_j_L0
0x0002       [2]    strlen_cp_L0
0x0003       [2]    __Lib_MmcFat16_f16_toInt_l_L0
0x0003       [2]    memmove_tt_L0
0x0003       [1]    R3
0x0003       [1]    codeToRam_i_L0
0x0003       [2]    MM_TotalFreeMemSize_Tot_L0
0x0003       [2]    Ltrim_original_L0
0x0003       [1]    MM_Init_i_L0
0x0003       [1]    FLASH_Erase_Write_64_SaveINTCON_L0
0x0004       [2]    strncat_cp_L0
0x0004       [2]    strcat_cp_L0
0x0004       [2]    frexp_pom_L0
0x0004       [2]    memcpy_ss_L0
0x0004       [2]    strcpy_cp_L0
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    __Lib_MemManager_MM_GetMemAlign_P_L0
0x0004       [1]    R4
0x0005       [1]    R5
0x0005       [2]    memmove_ff_L0
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [2]    Ltrim_p_L0
0x0005       [1]    MM_TotalFreeMemSize_i_L0
0x0006       [1]    __Lib_MemManager_MM_GetMemAlign_i_L0
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x0009       [4]    __Lib_MmcFat16_f16_toLong_l_L0
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [8]    ?lstr15_soundrec
0x001D       [8]    ?lstr16_soundrec
0x0025       [2]    _numberOfSectors
0x0027       [8]    ?lstr13_soundrec
0x002F       [6]    ?lstr14_soundrec
0x0035      [13]    ?lstr6_soundrec
0x0042      [11]    ?lstr3_soundrec
0x004D      [23]    ?lstr17_soundrec
0x0064      [15]    ?lstr5_soundrec
0x0073      [18]    ?lstr4_soundrec
0x0085      [14]    ?lstr2_soundrec
0x0093      [14]    ?lstr1_soundrec
0x00A1      [14]    ?lstr12_soundrec
0x00AF      [12]    ?lstr9_soundrec
0x00BB       [2]    _t
0x00BD       [1]    __Lib_Mmc_cardType
0x00BE       [2]    _mode
0x00C0       [4]    _SPI_Rd_Ptr
0x00C4       [1]    _x
0x00C5       [4]    _arg
0x00C9       [1]    _spiReadData
0x00CA       [4]    _UART_Tx_Idle_Ptr
0x00CE       [4]    _SPI_Wr_Ptr
0x00D2       [4]    _UART_Rdy_Ptr
0x00D6       [4]    _UART_Rd_Ptr
0x00DA       [4]    _UART_Wr_Ptr
0x00DE       [1]    main_lastMode_L0
0x00DF       [7]    main_strNumOfSec_L0
0x00E6       [2]    writeSingleBlock_g_L0
0x00E6       [1]    FARG_EEPROM_Read_address
0x00E6       [2]    FARG_IntToStr_input
0x00E6       [2]    hamdoc_i_L0
0x00E8       [2]    FARG_IntToStr_output
0x00E8     [512]    hamdoc_a_L0
0x00EA       [2]    IntToStr_i_L0
0x00EC       [2]    IntToStr_negative_L0
0x00EE       [2]    IntToStr_inword_L0
0x02E8       [1]    FARG_command_command
0x02E8       [1]    FARG_SPI1_Init_Advanced_master
0x02E8       [4]    FARG_Mmc_Read_Sector_sector
0x02E8       [2]    FARG_UART_Write_Text_uart_text
0x02E8       [2]    FARG_WordToStr_input
0x02E8       [2]    Mmc_Init_cnt_L0
0x02E9       [4]    FARG_command_fourbyte_arg
0x02E9       [1]    FARG_SPI1_Init_Advanced_data_sample
0x02EA       [1]    FARG_SPI1_Init_Advanced_clock_idle
0x02EA       [2]    FARG_WordToStr_output
0x02EA       [1]    UART_Write_Text_data__L0
0x02EA       [1]    Mmc_Init_response_L0
0x02EB       [1]    FARG_SPI1_Init_Advanced_transmit_edge
0x02EB       [1]    UART_Write_Text_counter_L0
0x02EC       [1]    WordToStr_len_L0
0x02EC       [2]    FARG_Mmc_Read_Sector_dbuff
0x02ED       [2]    FLOC__WordToStr
0x02ED       [1]    FARG_command_CRCbits
0x02EE       [2]    Mmc_Read_Sector_i_L0
0x02F0       [4]    Mmc_Read_Sector_byte_start_L0
0x02F4       [2]    FLOC__Mmc_Read_Sector
0x02F6       [1]    FARG___Lib_Mmc_Mmc_UnIdle_ctype
0x02F6       [1]    FARG_UART_Write__data
0x02F7       [2]    __Lib_Mmc_Mmc_UnIdle_cnt_L0
0x02F9       [1]    __Lib_Mmc_Mmc_UnIdle_response_L0
0x02FA       [1]    __Lib_Mmc_Mmc_UnIdle_response2_L0
0x02FB       [1]    __Lib_Mmc_Mmc_Send_Command_response_L0
0x02FC       [2]    __Lib_Mmc_Mmc_Send_Command_timeout_L0
0x02FE       [1]    FARG_SPI1_Write_data_
0x02FE       [1]    FARG_UART1_Write_data_
0x02FF       [1]    FARG_SPI1_Read_buffer
0x0301       [1]    FARG___Lib_Mmc_Mmc_Send_Command_partial_cmm
0x0302       [4]    FARG___Lib_Mmc_Mmc_Send_Command_content
0x0306       [1]    FARG___Lib_Mmc_Mmc_Send_Command_crc
0x0F81       [1]    PORTB
0x0F83       [0]    RD3_bit
0x0F83       [0]    RD2_bit
0x0F8A       [1]    LATB
0x0F8B       [0]    Mmc_Chip_Select
0x0F8B       [0]    LATC2_bit
0x0F8C       [0]    LATD5_bit
0x0F8C       [0]    LATD7_bit
0x0F8C       [0]    LATD6_bit
0x0F8C       [0]    LATD0_bit
0x0F8C       [0]    LATD1_bit
0x0F8C       [0]    LATD4_bit
0x0F92       [0]    TRISA2_bit
0x0F93       [1]    TRISB
0x0F94       [0]    TRISC2_bit
0x0F94       [0]    TRISC3_bit
0x0F94       [0]    TRISC7_bit
0x0F94       [1]    TRISC
0x0F94       [0]    Mmc_Chip_Select_Direction
0x0F94       [0]    TRISC6_bit
0x0F94       [0]    TRISC4_bit
0x0F94       [0]    TRISC5_bit
0x0F95       [0]    TRISD4_bit
0x0F95       [0]    TRISD6_bit
0x0F95       [0]    TRISD3_bit
0x0F95       [0]    TRISD5_bit
0x0F95       [0]    TRISD2_bit
0x0F95       [1]    TRISD
0x0F95       [0]    TRISD0_bit
0x0F95       [0]    TRISD1_bit
0x0F95       [0]    TRISD7_bit
0x0F9E       [1]    PIR1
0x0FA6       [1]    EECON1
0x0FA8       [1]    EEDATA
0x0FA9       [1]    EEADR
0x0FAB       [1]    RCSTA
0x0FAC       [1]    TXSTA
0x0FAD       [1]    TXREG
0x0FAE       [1]    RCREG
0x0FAF       [1]    SPBRG
0x0FB0       [1]    SPBRGH
0x0FB8       [1]    BAUDCON
0x0FC0       [1]    ADCON2
0x0FC0       [0]    ADFM_bit
0x0FC1       [1]    ADCON1
0x0FC2       [0]    ADON_bit
0x0FC6       [1]    SSPCON1
0x0FC7       [1]    SSPSTAT
0x0FC9       [1]    SSPBUF
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [2]    FSR1
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
0x0FFD       [1]    TOSL
0x0FFE       [1]    TOSH
0x0FFF       [1]    TOSU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0D46       [8]    ?ICS?lstr15_soundrec
0x0D4E       [8]    ?ICS?lstr16_soundrec
0x0D56       [2]    ?ICS_numberOfSectors
0x0D58       [8]    ?ICS?lstr13_soundrec
0x0D60       [6]    ?ICS?lstr14_soundrec
0x0D66      [13]    ?ICS?lstr6_soundrec
0x0D73      [11]    ?ICS?lstr3_soundrec
0x0D7E      [23]    ?ICS?lstr17_soundrec
0x0D95      [15]    ?ICS?lstr5_soundrec
0x0DA4      [18]    ?ICS?lstr4_soundrec
0x0DB6      [14]    ?ICS?lstr2_soundrec
0x0DC4      [14]    ?ICS?lstr1_soundrec
0x0DD2      [14]    ?ICS?lstr12_soundrec
0x0DE0      [12]    ?ICS?lstr9_soundrec
0x0DEC       [2]    ?ICS_t
0x0DEE       [1]    ?ICS__Lib_Mmc_cardType
0x0DEF       [2]    ?ICS_mode
//** Label List: ** 
//----------------------------------------------
  L_codeToRam0
  L_codeToRam1
  L_codeToRam2
  L_adcRead3
  L_adcRead4
  L_adcRead5
  L_caidatMMC6
  L_caidatMMC7
  L_caidatMMC8
  L_caidatMMC9
  L_writeSingleBlock10
  L_writeSingleBlock11
  L_writeSingleBlock12
  L_writeSingleBlock13
  L_writeSingleBlock14
  L_writeSingleBlock15
  L_writeSingleBlock16
  L_writeSingleBlock17
  L_writeSingleBlock18
  L_writeSingleBlock19
  L_hamghi20
  L_hamghi21
  L_hamghi22
  L_hamghi23
  L_hamghi24
  L_hamghi25
  L_hamghi26
  L_hamdoc27
  L_hamdoc28
  L_hamdoc29
  L_hamdoc30
  L_hamdoc31
  L_hamcaidat32
  L_hamcaidat33
  L_hamcaidat34
  L_hamcaidat35
  L_hamcaidat36
  L_hamcaidat37
  L_hamcaidat38
  L_hamcaidat39
  L_main40
  L_main41
  L_main42
  L_main43
  L_main44
  L_main45
  L_main46
  L_main47
  L_main48
  L_main49
  L_main50
  L_main51
  L_main52
  L_main53
  L_main54
  L_main55
  L_main56
  L_main57
  L_main58
  L_main59
  L_main60
  L_main61
  L_main62
  L__main63
  L_end_codeToRam
  _codeToRam
  L_end_adcRead
  _adcRead
  L_end_caidatMMC
  _caidatMMC
  L_end_command
  _command
  L_end_writeSingleBlock
  _writeSingleBlock
  L__writeSingleBlock69
  L_end_hamghi
  _hamghi
  L__hamghi71
  L_end_hamdoc
  _hamdoc
  L__hamdoc73
  L_end_hamcaidat
  _hamcaidat
  L__hamcaidat75
  L__hamcaidat76
  L__hamcaidat77
  L_end_main
  _main
  L__main79
  L__main80
  L__main81
  L__main82
  L__main83
  L__main84
  L__main85
  L__main86
  L_ByteToStr0
  L_ByteToStr1
  L_ByteToStr2
  L_ByteToStr3
  L_ByteToStr4
  L_ByteToStr5
  L_WordToStr6
  L_WordToStr7
  L_WordToStr8
  L_WordToStr9
  L_WordToStr10
  L_WordToStr11
  L_WordToStrWithZeros12
  L_WordToStrWithZeros13
  L_WordToStrWithZeros14
  L_WordToStrWithZeros15
  L_WordToStrWithZeros16
  L_ShortToStr17
  L_ShortToStr18
  L_ShortToStr19
  L_ShortToStr20
  L_ShortToStr21
  L_ShortToStr22
  L_IntToStr23
  L_IntToStr24
  L_IntToStr25
  L_IntToStr26
  L_IntToStr27
  L_IntToStr28
  L_IntToStrWithZeros29
  L_IntToStrWithZeros30
  L_IntToStrWithZeros31
  L_IntToStrWithZeros32
  L_IntToStrWithZeros33
  L_IntToStrWithZeros34
  L_IntToStrWithZeros35
  L_IntToStrWithZeros36
  L_IntToStrWithZeros37
  L_LongWordToStr38
  L_LongWordToStr39
  L_LongWordToStr40
  L_LongWordToStr41
  L_LongWordToStr42
  L_LongWordToStr43
  L_LongWordToStrWithZeros44
  L_LongWordToStrWithZeros45
  L_LongWordToStrWithZeros46
  L_LongWordToStrWithZeros47
  L_LongWordToStrWithZeros48
  L_LongToStr49
  L_LongToStr50
  L_LongToStr51
  L_LongToStr52
  L_LongToStr53
  L_LongToStr54
  L_LongIntToStrWithZeros55
  L_LongIntToStrWithZeros56
  L_LongIntToStrWithZeros57
  L_LongIntToStrWithZeros58
  L_LongIntToStrWithZeros59
  L_LongIntToStrWithZeros60
  L_LongIntToStrWithZeros61
  L_LongIntToStrWithZeros62
  L_LongIntToStrWithZeros63
  L_Dec2Bcd64
  L_Dec2Bcd65
  L_Rtrim66
  L_Rtrim67
  L_Rtrim68
  L_Rtrim69
  L_Ltrim70
  L_Ltrim71
  L_Ltrim72
  L_Ltrim73
  L_Ltrim74
  L_Ltrim75
  L_FloatToStr76
  L_FloatToStr77
  L_FloatToStr78
  L_FloatToStr79
  L_FloatToStr80
  L_FloatToStr81
  L_FloatToStr82
  L_FloatToStr83
  L_FloatToStr84
  L_FloatToStr85
  L_FloatToStr86
  L_FloatToStr87
  L_FloatToStr88
  L_FloatToStr89
  L_FloatToStr90
  L_FloatToStr91
  L_FloatToStr92
  L_FloatToStr93
  L_FloatToStr94
  L_FloatToStr95
  L_FloatToStr96
  L_FloatToStr97
  L__Rtrim98
  L__Ltrim99
  L__FloatToStr100
  L_end_ByteToHex
  _ByteToHex
  L_end_ShortToHex
  _ShortToHex
  L_end_WordToHex
  _WordToHex
  L_end_IntToHex
  _IntToHex
  L_end_LongWordToHex
  _LongWordToHex
  L_end_LongIntToHex
  _LongIntToHex
  L_end_ByteToStr
  _ByteToStr
  L_end_WordToStr
  _WordToStr
  L__WordToStr109
  L_end_WordToStrWithZeros
  _WordToStrWithZeros
  L__WordToStrWithZeros111
  L_end_ShortToStr
  _ShortToStr
  L__ShortToStr113
  L_end_IntToStr
  _IntToStr
  L__IntToStr115
  L__IntToStr116
  L_end_IntToStrWithZeros
  _IntToStrWithZeros
  L__IntToStrWithZeros118
  L__IntToStrWithZeros119
  L__IntToStrWithZeros120
  L_end_LongWordToStr
  _LongWordToStr
  L__LongWordToStr122
  L__LongWordToStr123
  L_end_LongWordToStrWithZeros
  _LongWordToStrWithZeros
  L__LongWordToStrWithZeros125
  L_end_LongToStr
  _LongToStr
  L__LongToStr127
  L__LongToStr128
  L_end_LongIntToStrWithZeros
  _LongIntToStrWithZeros
  L__LongIntToStrWithZeros130
  L__LongIntToStrWithZeros131
  L__LongIntToStrWithZeros132
  L_end_Dec2Bcd
  _Dec2Bcd
  L_end_Bcd2Dec
  _Bcd2Dec
  L_end_Bcd2Dec16
  _Bcd2Dec16
  L__Bcd2Dec16136
  L__Bcd2Dec16137
  L_end_Dec2Bcd16
  _Dec2Bcd16
  L__Dec2Bcd16139
  L__Dec2Bcd16140
  L_end_Rtrim
  _Rtrim
  L__Rtrim142
  L_end_Ltrim
  _Ltrim
  L_end_FloatToStr
  _FloatToStr
  L__FloatToStr145
  L__FloatToStr146
  L__FloatToStr147
  L__FloatToStr148
  L__FloatToStr149
  L_EEPROM_Write0
  L_EEPROM_Write1
  L_end_EEPROM_Read
  _EEPROM_Read
  L_end_EEPROM_Write
  _EEPROM_Write
  L__EEPROM_Write4
  L__EEPROM_Write5
  L_Div_16x16_S0
  L_Div_16x16_S1
  LOOPS3232A
  SADD22LA
  SOK22LA
  SADD22L8
  SOK22L8
  LOOPS3232B
  SADD22LB
  SOK22LB
  SADD22L16
  SOK22L16
  LOOPS3232C
  SADD22LC
  SOK22LC
  SADD22L24
  SOK22L24
  LOOPS3232D
  SADD22LD
  SOK22LD
  SOK22L
  L_Div_32x32_S6
  L_Div_32x32_S7
  L_Div_32x32_S8
  L_Div_32x32_S9
  FXD3232S
  END_ALL
  CA3232S
  C3232SX
  C3232SX1
  C3232S
  C3232S2
  C3232SX4
  C3232SOK
  C3232SX3
  C3232SX2
  avoid_comfrem
  LOOPU3232A
  UADD22LA
  UOK22LA
  UADD22L8
  UOK22L8
  LOOPU3232B
  UADD22LB
  UOK22LB
  UADD22L16
  UOK22L16
  LOOPU3232C
  UADD22LC
  UOK22LC
  UADD22L24
  UOK22L24
  LOOPU3232D
  UADD22LD
  UOK22LD
  UOK22L
  _NEXT
  _EXIT2
  _LOOP
  _EXIT1
  _IF_FIRST
  _IF_SECOND
  _INVERCE_FIRST
  _MULT
  _INBERSE_SECOND
  _EXIT
  L_end_Div_8x8_U
  _Div_8x8_U
  L_end_Div_16x16_U
  _Div_16x16_U
  L_end_Div_16x16_S_L
  _Div_16x16_S_L
  L_end_Div_16x16_S
  _Div_16x16_S
  L_end_Div_8x8_S
  _Div_8x8_S
  L_end_Mul_8x8_S
  _Mul_8x8_S
  L_end_Mul_16x16_U
  _Mul_16x16_U
  L_end_Mul_16x16_S
  _Mul_16x16_S
  L_end_SDIV3232L
  _SDIV3232L
  L_end_COMFREM
  _COMFREM
  L_end_Div_32x32_S
  _Div_32x32_S
  L_end_Div_32x32_U
  _Div_32x32_U
  L_end_Mul_32x32_U
  _Mul_32x32_U
  L_end_Mul_32x32_S
  _Mul_32x32_S
  L___Lib_Mmc_Mmc_Send_Command0
  L___Lib_Mmc_Mmc_Send_Command1
  L___Lib_Mmc_Mmc_Send_Command2
  L___Lib_Mmc_Mmc_Send_Command3
  L___Lib_Mmc_Mmc_Send_Command4
  L___Lib_Mmc_Mmc_UnIdle5
  L___Lib_Mmc_Mmc_UnIdle6
  L___Lib_Mmc_Mmc_UnIdle7
  L___Lib_Mmc_Mmc_UnIdle8
  L___Lib_Mmc_Mmc_UnIdle9
  L___Lib_Mmc_Mmc_UnIdle10
  L___Lib_Mmc_Mmc_UnIdle11
  L___Lib_Mmc_Mmc_UnIdle12
  L___Lib_Mmc_Mmc_UnIdle13
  L___Lib_Mmc_Mmc_UnIdle14
  L___Lib_Mmc_Mmc_UnIdle15
  L___Lib_Mmc_Mmc_UnIdle16
  L___Lib_Mmc_Mmc_UnIdle17
  L___Lib_Mmc_Mmc_UnIdle18
  L_Mmc_Init19
  L_Mmc_Init20
  L_Mmc_Init21
  L_Mmc_Init22
  L_Mmc_Init23
  L_Mmc_Init24
  L_Mmc_Init25
  L_Mmc_Init26
  L_Mmc_Init27
  L_Mmc_Init28
  L_Mmc_Read_Sector29
  L_Mmc_Read_Sector30
  L_Mmc_Read_Sector31
  L_Mmc_Read_Sector32
  L_Mmc_Read_Sector33
  L_Mmc_Read_Sector34
  L_Mmc_Read_Sector35
  L_Mmc_Read_Sector36
  L_Mmc_Write_Sector37
  L_Mmc_Write_Sector38
  L_Mmc_Write_Sector39
  L_Mmc_Write_Sector40
  L_Mmc_Write_Sector41
  L_Mmc_Write_Sector42
  L_Mmc_Write_Sector43
  L_Mmc_Write_Sector44
  L_Mmc_Write_Sector45
  L_Mmc_Read_Cid46
  L_Mmc_Read_Cid47
  L_Mmc_Read_Cid48
  L_Mmc_Read_Cid49
  L_Mmc_Read_Cid50
  L_Mmc_Read_Cid51
  L_Mmc_Read_Csd52
  L_Mmc_Read_Csd53
  L_Mmc_Read_Csd54
  L_Mmc_Read_Csd55
  L_Mmc_Read_Csd56
  L_Mmc_Read_Csd57
  L___Lib_Mmc_Mmc_Wait_Data_Ready58
  L___Lib_Mmc_Mmc_Wait_Data_Ready59
  L_Mmc_Multi_Read_Start60
  L_Mmc_Multi_Read_Start61
  L_Mmc_Multi_Read_Start62
  L_Mmc_Multi_Read_Sector63
  L_Mmc_Multi_Read_Sector64
  L_Mmc_Multi_Read_Sector65
  L_Mmc_Multi_Read_Stop66
  L_Mmc_Multi_Read_Stop67
  L_Mmc_Multi_Read_Stop68
  L_Mmc_Multi_Read_Stop69
  L_Mmc_Multi_Read_Stop70
  L_Mmc_Multi_Read_Stop71
  L_Mmc_Multi_Read_Stop72
  L_Mmc_Multi_Read_Stop73
  L_Mmc_Multi_Read_Stop74
  L___Lib_Mmc_Mmc_Send_Command75
  L__Mmc_Multi_Read_Stop76
  L_end_Mmc_Select
  __Lib_Mmc_Mmc_Select
  L_end_Mmc_DeSelect
  __Lib_Mmc_Mmc_DeSelect
  L_end_Mmc_Send_Command
  __Lib_Mmc_Mmc_Send_Command
  L___Lib_Mmc_Mmc_Send_Command80
  L_end_Mmc_UnIdle
  __Lib_Mmc_Mmc_UnIdle
  L___Lib_Mmc_Mmc_UnIdle82
  L___Lib_Mmc_Mmc_UnIdle83
  L___Lib_Mmc_Mmc_UnIdle84
  L_end_Mmc_Init
  _Mmc_Init
  L__Mmc_Init86
  L__Mmc_Init87
  L__Mmc_Init88
  L_end_Mmc_Read_Sector
  _Mmc_Read_Sector
  L__Mmc_Read_Sector90
  L__Mmc_Read_Sector91
  L__Mmc_Read_Sector92
  L__Mmc_Read_Sector93
  L_end_Mmc_Write_Sector
  _Mmc_Write_Sector
  L__Mmc_Write_Sector95
  L__Mmc_Write_Sector96
  L__Mmc_Write_Sector97
  L__Mmc_Write_Sector98
  L__Mmc_Write_Sector99
  L_end_Mmc_Read_Cid
  _Mmc_Read_Cid
  L_end_Mmc_Read_Csd
  _Mmc_Read_Csd
  L_end_Mmc_Wait_Data_Ready
  __Lib_Mmc_Mmc_Wait_Data_Ready
  L_end_Mmc_Multi_Read_Start
  _Mmc_Multi_Read_Start
  L__Mmc_Multi_Read_Start104
  L__Mmc_Multi_Read_Start105
  L__Mmc_Multi_Read_Start106
  L_end_Mmc_Multi_Read_Sector
  _Mmc_Multi_Read_Sector
  L__Mmc_Multi_Read_Sector108
  L_end_Mmc_Multi_Read_Stop
  _Mmc_Multi_Read_Stop
  L__Mmc_Multi_Read_Stop110
  L_SPI1_Init_Advanced0
  L_SPI1_Init_Advanced1
  L_SPI1_Init_Advanced2
  L_SPI1_Init_Advanced3
  L_SPI1_Init_Advanced4
  L_SPI1_Init_Advanced5
  L_SPI1_Read6
  L_SPI1_Read7
  L_SPI1_Write8
  L_SPI1_Write9
  L_end_SPI1_Init
  _SPI1_Init
  L_end_SPI1_Init_Advanced
  _SPI1_Init_Advanced
  L_end_SPI1_Read
  _SPI1_Read
  L_end_SPI1_Write
  _SPI1_Write
  L_end_SPI_Set_Active
  _SPI_Set_Active
  L_end_SPI_Read
  _SPI_Read
  L_end_SPI_Write
  _SPI_Write
  _CC2D_Loop1
  _CC2DL_Loop1
  L_loopCA2AWs
  L_loopCCA2AWs
  L_loopCS2Ss
  L_CS2Send
  L_loopCCS2Ss
  L_CCS2Send
  L_loopFZinSWs
  L_longjmp7
  L_end___CC2D
  ___CC2D
  L_end___CC2DW
  ___CC2DW
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end_____DoIFC
  _____DoIFC
  L_end_Swap
  _Swap
  L_end_setjmp
  _setjmp
  L_end_longjmp
  _longjmp
  L_UART1_Init0
  L_UART1_Init1
  L_UART1_Read2
  L_UART1_Write3
  L_UART1_Write4
  L_UART1_Write_Text5
  L_UART1_Write_Text6
  L_UART1_Read_Text7
  L_UART1_Read_Text8
  L_UART1_Read_Text9
  L_UART1_Read_Text10
  L_UART1_Read_Text11
  L_UART1_Read_Text12
  L_UART1_Read_Text13
  L_UART1_Read_Text14
  L_UART1_Read_Text15
  L_UART_Write_Text16
  L_UART_Write_Text17
  L_UART_Read_Text18
  L_UART_Read_Text19
  L_UART_Read_Text20
  L_UART_Read_Text21
  L_UART_Read_Text22
  L_UART_Read_Text23
  L_UART_Read_Text24
  L_UART_Read_Text25
  L_UART_Read_Text26
  L_end_UART1_Init
  _UART1_Init
  L_end_UART1_Data_Ready
  _UART1_Data_Ready
  L_end_UART1_Read
  _UART1_Read
  L_end_UART1_Tx_Idle
  _UART1_Tx_Idle
  L_end_UART1_Write
  _UART1_Write
  L_end_UART1_Write_Text
  _UART1_Write_Text
  L_end_UART1_Read_Text
  _UART1_Read_Text
  L_end_UART_Set_Active
  _UART_Set_Active
  L_end_UART_Write
  _UART_Write
  L_end_UART_Write_Text
  _UART_Write_Text
  L_end_UART_Read
  _UART_Read
  L_end_UART_Data_Ready
  _UART_Data_Ready
  L_end_UART_Read_Text
  _UART_Read_Text
  L_end_UART_Tx_Idle
  _UART_Tx_Idle
