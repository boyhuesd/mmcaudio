;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 04/12/2013 8:55:45 SA
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF005EF0F  	GOTO        2590
_interrupt:
;soundrec.c,407 :: 		void interrupt()
0x0008	0xF016C000  	MOVFF       R0, 22
0x000C	0xF015C001  	MOVFF       R1, 21
;soundrec.c,409 :: 		if (PIR1.TMR1IF == 1) {
0x0010	0xF019CFE1  	MOVFF       FSR1L, 25
0x0014	0xF01ACFE2  	MOVFF       FSR1H, 26
0x0018	0xF017CFE9  	MOVFF       FSR0L, 23
0x001C	0xF018CFEA  	MOVFF       FSR0H, 24
0x0020	0xA09E      	BTFSS       PIR1, 0 
0x0022	0xD03E      	BRA         L_interrupt55
;soundrec.c,411 :: 		PIR1.TMR1IF = 0;
0x0024	0x909E      	BCF         PIR1, 0 
;soundrec.c,416 :: 		TMR1H = timerH;
0x0026	0xFFCFC026  	MOVFF       soundrec_timerH, TMR1H
;soundrec.c,417 :: 		TMR1L = timerL;
0x002A	0xFFCEC01B  	MOVFF       soundrec_timerL, TMR1L
;soundrec.c,419 :: 		if (mode == 1) { /* Record mode */
0x002E	0x5028      	MOVF        _mode, 0 
0x0030	0x0A01      	XORLW       1
0x0032	0xE109      	BNZ         L_interrupt56
;soundrec.c,421 :: 		GO_bit = 1;
0x0034	0x82C2      	BSF         GO_bit, BitPos(GO_bit+0) 
;soundrec.c,424 :: 		LATC |= (1 << 6);
0x0036	0x8C8B      	BSF         LATC, 6 
;soundrec.c,425 :: 		Delay_us(1);
0x0038	0x0000      	NOP
0x003A	0x0000      	NOP
0x003C	0x0000      	NOP
0x003E	0x0000      	NOP
0x0040	0x0000      	NOP
;soundrec.c,426 :: 		LATC &= ~(1 << 6);
0x0042	0x9C8B      	BCF         LATC, 6 
;soundrec.c,427 :: 		}
0x0044	0xD02D      	BRA         L_interrupt57
L_interrupt56:
;soundrec.c,430 :: 		LATD = *(ptr + (ptrIndex++));
0x0046	0x503F      	MOVF        soundrec_ptrIndex, 0 
0x0048	0x242A      	ADDWF       soundrec_ptr, 0 
0x004A	0x6EE9      	MOVWF       FSR0L 
0x004C	0x5040      	MOVF        soundrec_ptrIndex+1, 0 
0x004E	0x202B      	ADDWFC      soundrec_ptr+1, 0 
0x0050	0x6EEA      	MOVWF       FSR0H 
0x0052	0xF000CFEE  	MOVFF       POSTINC0, R0
0x0056	0xFF8CC000  	MOVFF       R0, LATD
0x005A	0x0E01      	MOVLW       1
0x005C	0x243F      	ADDWF       soundrec_ptrIndex, 0 
0x005E	0x6E00      	MOVWF       R0 
0x0060	0x0E00      	MOVLW       0
0x0062	0x2040      	ADDWFC      soundrec_ptrIndex+1, 0 
0x0064	0x6E01      	MOVWF       R1 
0x0066	0xF03FC000  	MOVFF       R0, soundrec_ptrIndex
0x006A	0xF040C001  	MOVFF       R1, soundrec_ptrIndex+1
;soundrec.c,433 :: 		if (ptrIndex == 512) {
0x006E	0x5040      	MOVF        soundrec_ptrIndex+1, 0 
0x0070	0x0A02      	XORLW       2
0x0072	0xE102      	BNZ         L__interrupt72
0x0074	0x0E00      	MOVLW       0
0x0076	0x183F      	XORWF       soundrec_ptrIndex, 0 
L__interrupt72:
0x0078	0xE113      	BNZ         L_interrupt58
;soundrec.c,434 :: 		ptrIndex = 0;
0x007A	0x6A3F      	CLRF        soundrec_ptrIndex 
0x007C	0x6A40      	CLRF        soundrec_ptrIndex+1 
;soundrec.c,435 :: 		bufferFull = 1;
0x007E	0x0E01      	MOVLW       1
0x0080	0x6E29      	MOVWF       _bufferFull 
;soundrec.c,436 :: 		if (currentBuffer == 0)	{
0x0082	0x5046      	MOVF        _currentBuffer, 0 
0x0084	0x0A00      	XORLW       0
0x0086	0xE107      	BNZ         L_interrupt59
;soundrec.c,437 :: 		ptr = buffer1;
0x0088	0x0E47      	MOVLW       _buffer1
0x008A	0x6E2A      	MOVWF       soundrec_ptr 
0x008C	0x0E02      	MOVLW       hi_addr(_buffer1)
0x008E	0x6E2B      	MOVWF       soundrec_ptr+1 
;soundrec.c,438 :: 		currentBuffer = 1;
0x0090	0x0E01      	MOVLW       1
0x0092	0x6E46      	MOVWF       _currentBuffer 
;soundrec.c,439 :: 		}
0x0094	0xD005      	BRA         L_interrupt60
L_interrupt59:
;soundrec.c,441 :: 		ptr = buffer0;
0x0096	0x0E47      	MOVLW       _buffer0
0x0098	0x6E2A      	MOVWF       soundrec_ptr 
0x009A	0x0E00      	MOVLW       hi_addr(_buffer0)
0x009C	0x6E2B      	MOVWF       soundrec_ptr+1 
;soundrec.c,442 :: 		currentBuffer = 0;
0x009E	0x6A46      	CLRF        _currentBuffer 
;soundrec.c,443 :: 		}
L_interrupt60:
;soundrec.c,444 :: 		}
L_interrupt58:
;soundrec.c,445 :: 		}
L_interrupt57:
;soundrec.c,446 :: 		}
L_interrupt55:
;soundrec.c,448 :: 		if (PIR1 & (1 << ADIF)) {
0x00A0	0xAC9E      	BTFSS       PIR1, 6 
0x00A2	0xD02E      	BRA         L_interrupt61
;soundrec.c,450 :: 		PIR1 &= ~(1 << ADIF);
0x00A4	0x9C9E      	BCF         PIR1, 6 
;soundrec.c,453 :: 		adcResult = ADRESH;
0x00A6	0xF027CFC4  	MOVFF       ADRESH, _adcResult
;soundrec.c,455 :: 		*(ptr + (ptrIndex++)) = adcResult;
0x00AA	0x503F      	MOVF        soundrec_ptrIndex, 0 
0x00AC	0x242A      	ADDWF       soundrec_ptr, 0 
0x00AE	0x6EE1      	MOVWF       FSR1L 
0x00B0	0x5040      	MOVF        soundrec_ptrIndex+1, 0 
0x00B2	0x202B      	ADDWFC      soundrec_ptr+1, 0 
0x00B4	0x6EE2      	MOVWF       FSR1H 
0x00B6	0xFFE6C027  	MOVFF       _adcResult, POSTINC1
0x00BA	0x0E01      	MOVLW       1
0x00BC	0x243F      	ADDWF       soundrec_ptrIndex, 0 
0x00BE	0x6E00      	MOVWF       R0 
0x00C0	0x0E00      	MOVLW       0
0x00C2	0x2040      	ADDWFC      soundrec_ptrIndex+1, 0 
0x00C4	0x6E01      	MOVWF       R1 
0x00C6	0xF03FC000  	MOVFF       R0, soundrec_ptrIndex
0x00CA	0xF040C001  	MOVFF       R1, soundrec_ptrIndex+1
;soundrec.c,458 :: 		if (ptrIndex == 512)
0x00CE	0x5040      	MOVF        soundrec_ptrIndex+1, 0 
0x00D0	0x0A02      	XORLW       2
0x00D2	0xE102      	BNZ         L__interrupt73
0x00D4	0x0E00      	MOVLW       0
0x00D6	0x183F      	XORWF       soundrec_ptrIndex, 0 
L__interrupt73:
0x00D8	0xE113      	BNZ         L_interrupt62
;soundrec.c,460 :: 		ptrIndex = 0;
0x00DA	0x6A3F      	CLRF        soundrec_ptrIndex 
0x00DC	0x6A40      	CLRF        soundrec_ptrIndex+1 
;soundrec.c,461 :: 		bufferFull = 1;
0x00DE	0x0E01      	MOVLW       1
0x00E0	0x6E29      	MOVWF       _bufferFull 
;soundrec.c,462 :: 		if (currentBuffer == 0)
0x00E2	0x5046      	MOVF        _currentBuffer, 0 
0x00E4	0x0A00      	XORLW       0
0x00E6	0xE107      	BNZ         L_interrupt63
;soundrec.c,464 :: 		ptr = buffer1;
0x00E8	0x0E47      	MOVLW       _buffer1
0x00EA	0x6E2A      	MOVWF       soundrec_ptr 
0x00EC	0x0E02      	MOVLW       hi_addr(_buffer1)
0x00EE	0x6E2B      	MOVWF       soundrec_ptr+1 
;soundrec.c,465 :: 		currentBuffer = 1;
0x00F0	0x0E01      	MOVLW       1
0x00F2	0x6E46      	MOVWF       _currentBuffer 
;soundrec.c,466 :: 		}
0x00F4	0xD005      	BRA         L_interrupt64
L_interrupt63:
;soundrec.c,469 :: 		ptr = buffer0;
0x00F6	0x0E47      	MOVLW       _buffer0
0x00F8	0x6E2A      	MOVWF       soundrec_ptr 
0x00FA	0x0E00      	MOVLW       hi_addr(_buffer0)
0x00FC	0x6E2B      	MOVWF       soundrec_ptr+1 
;soundrec.c,470 :: 		currentBuffer = 0;
0x00FE	0x6A46      	CLRF        _currentBuffer 
;soundrec.c,471 :: 		}
L_interrupt64:
;soundrec.c,472 :: 		}
L_interrupt62:
;soundrec.c,473 :: 		}
L_interrupt61:
;soundrec.c,474 :: 		}
L_end_interrupt:
L__interrupt71:
0x0100	0xF000C016  	MOVFF       22, R0
0x0104	0xF001C015  	MOVFF       21, R1
0x0108	0xFFE9C017  	MOVFF       23, FSR0L
0x010C	0xFFEAC018  	MOVFF       24, FSR0H
0x0110	0xFFE1C019  	MOVFF       25, FSR1L
0x0114	0xFFE2C01A  	MOVFF       26, FSR1H
0x0118	0x0011      	RETFIE      1
; end of _interrupt
_SPI1_Read:
;__Lib_SPI_c345.c,67 :: 		
;__Lib_SPI_c345.c,68 :: 		
0x011A	0xFFC9C469  	MOVFF       FARG_SPI1_Read_buffer, SSPBUF
;__Lib_SPI_c345.c,69 :: 		
L_SPI1_Read6:
0x011E	0xB0C7      	BTFSC       SSPSTAT, 0 
0x0120	0xD002      	BRA         L_SPI1_Read7
;__Lib_SPI_c345.c,70 :: 		
0x0122	0x0000      	NOP
0x0124	0xD7FC      	BRA         L_SPI1_Read6
L_SPI1_Read7:
;__Lib_SPI_c345.c,71 :: 		
0x0126	0xF000CFC9  	MOVFF       SSPBUF, R0
;__Lib_SPI_c345.c,72 :: 		
L_end_SPI1_Read:
0x012A	0x0012      	RETURN      0
; end of _SPI1_Read
_Delay_50us:
;__Lib_Delays.c,19 :: 		void Delay_50us() {
;__Lib_Delays.c,20 :: 		Delay_us(50);
0x012C	0x0E53      	MOVLW       83
0x012E	0x6E0D      	MOVWF       R13, 0
L_Delay_50us2:
0x0130	0x2E0D      	DECFSZ      R13, 1, 0
0x0132	0xD7FE      	BRA         L_Delay_50us2
;__Lib_Delays.c,21 :: 		}
L_end_Delay_50us:
0x0134	0x0012      	RETURN      0
; end of _Delay_50us
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x0136	0x0000      	NOP
0x0138	0x0000      	NOP
0x013A	0x0000      	NOP
0x013C	0x0000      	NOP
0x013E	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
L_end_Delay_1us:
0x0140	0x0012      	RETURN      0
; end of _Delay_1us
_Delay_5500us:
;__Lib_Delays.c,31 :: 		void Delay_5500us() {
;__Lib_Delays.c,32 :: 		Delay_us(5500);
0x0142	0x0E24      	MOVLW       36
0x0144	0x6E0C      	MOVWF       R12, 0
0x0146	0x0EB5      	MOVLW       181
0x0148	0x6E0D      	MOVWF       R13, 0
L_Delay_5500us5:
0x014A	0x2E0D      	DECFSZ      R13, 1, 0
0x014C	0xD7FE      	BRA         L_Delay_5500us5
0x014E	0x2E0C      	DECFSZ      R12, 1, 0
0x0150	0xD7FC      	BRA         L_Delay_5500us5
0x0152	0x0000      	NOP
0x0154	0x0000      	NOP
;__Lib_Delays.c,33 :: 		}
L_end_Delay_5500us:
0x0156	0x0012      	RETURN      0
; end of _Delay_5500us
_____DoIFC:
;__Lib_System.c,93 :: 		
;__Lib_System.c,94 :: 		
0x0158	0x50F2      	MOVF        INTCON, 0, 0
;__Lib_System.c,95 :: 		
0x015A	0x6E02      	MOVWF       R2, 0
;__Lib_System.c,96 :: 		
0x015C	0x9EF2      	BCF         INTCON, 7 
;__Lib_System.c,97 :: 		
0x015E	0x0005      	PUSH
;__Lib_System.c,98 :: 		
0x0160	0x6AFF      	CLRF        TOSU, 0
;__Lib_System.c,99 :: 		
0x0162	0x5001      	MOVF        R1, 0, 0
;__Lib_System.c,100 :: 		
0x0164	0x6EFE      	MOVWF       TOSH, 0
;__Lib_System.c,101 :: 		
0x0166	0x5000      	MOVF        R0, 0, 0
;__Lib_System.c,102 :: 		
0x0168	0x6EFD      	MOVWF       TOSL, 0
;__Lib_System.c,103 :: 		
0x016A	0xBE02      	BTFSC       R2, 7, 0
;__Lib_System.c,104 :: 		
0x016C	0x8EF2      	BSF         INTCON, 7, 0
;__Lib_System.c,105 :: 		
;__Lib_System.c,107 :: 		
L_end_____DoIFC:
0x016E	0x0012      	RETURN      0
; end of _____DoIFC
__Lib_Mmc_Mmc_Select:
;__Lib_Mmc.c,53 :: 		
;__Lib_Mmc.c,55 :: 		
0x0170	0x948B      	BCF         Mmc_Chip_Select, BitPos(Mmc_Chip_Select+0) 
;__Lib_Mmc.c,65 :: 		
L_end_Mmc_Select:
0x0172	0x0012      	RETURN      0
; end of __Lib_Mmc_Mmc_Select
_Lcd_Cmd:
;__Lib_Lcd.c,18 :: 		
;__Lib_Lcd.c,20 :: 		
0x0174	0x0104      	MOVLB       4
0x0176	0xBF60      	BTFSC       FARG_Lcd_Cmd_out_char, 7, 1
0x0178	0xD002      	BRA         L__Lcd_Cmd21
0x017A	0x9481      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x017C	0xD001      	BRA         L__Lcd_Cmd22
L__Lcd_Cmd21:
0x017E	0x8481      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd22:
;__Lib_Lcd.c,21 :: 		
0x0180	0xBD60      	BTFSC       FARG_Lcd_Cmd_out_char, 6, 1
0x0182	0xD002      	BRA         L__Lcd_Cmd23
0x0184	0x9681      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x0186	0xD001      	BRA         L__Lcd_Cmd24
L__Lcd_Cmd23:
0x0188	0x8681      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd24:
;__Lib_Lcd.c,22 :: 		
0x018A	0xBB60      	BTFSC       FARG_Lcd_Cmd_out_char, 5, 1
0x018C	0xD002      	BRA         L__Lcd_Cmd25
0x018E	0x9881      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x0190	0xD001      	BRA         L__Lcd_Cmd26
L__Lcd_Cmd25:
0x0192	0x8881      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd26:
;__Lib_Lcd.c,23 :: 		
0x0194	0xB960      	BTFSC       FARG_Lcd_Cmd_out_char, 4, 1
0x0196	0xD002      	BRA         L__Lcd_Cmd27
0x0198	0x9A81      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x019A	0xD001      	BRA         L__Lcd_Cmd28
L__Lcd_Cmd27:
0x019C	0x8A81      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd28:
;__Lib_Lcd.c,25 :: 		
0x019E	0xB041      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
0x01A0	0xD002      	BRA         L__Lcd_Cmd29
0x01A2	0x8E81      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x01A4	0xD001      	BRA         L__Lcd_Cmd30
L__Lcd_Cmd29:
0x01A6	0x9E81      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd30:
;__Lib_Lcd.c,28 :: 		
0x01A8	0x8C81      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,29 :: 		
0x01AA	0xDFC5      	RCALL       _Delay_1us
;__Lib_Lcd.c,30 :: 		
0x01AC	0x9C81      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,33 :: 		
0x01AE	0xB760      	BTFSC       FARG_Lcd_Cmd_out_char, 3, 1
0x01B0	0xD002      	BRA         L__Lcd_Cmd31
0x01B2	0x9481      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x01B4	0xD001      	BRA         L__Lcd_Cmd32
L__Lcd_Cmd31:
0x01B6	0x8481      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd32:
;__Lib_Lcd.c,34 :: 		
0x01B8	0xB560      	BTFSC       FARG_Lcd_Cmd_out_char, 2, 1
0x01BA	0xD002      	BRA         L__Lcd_Cmd33
0x01BC	0x9681      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x01BE	0xD001      	BRA         L__Lcd_Cmd34
L__Lcd_Cmd33:
0x01C0	0x8681      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd34:
;__Lib_Lcd.c,35 :: 		
0x01C2	0xB360      	BTFSC       FARG_Lcd_Cmd_out_char, 1, 1
0x01C4	0xD002      	BRA         L__Lcd_Cmd35
0x01C6	0x9881      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x01C8	0xD001      	BRA         L__Lcd_Cmd36
L__Lcd_Cmd35:
0x01CA	0x8881      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd36:
;__Lib_Lcd.c,36 :: 		
0x01CC	0xB160      	BTFSC       FARG_Lcd_Cmd_out_char, 0, 1
0x01CE	0xD002      	BRA         L__Lcd_Cmd37
0x01D0	0x9A81      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x01D2	0xD001      	BRA         L__Lcd_Cmd38
L__Lcd_Cmd37:
0x01D4	0x8A81      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd38:
;__Lib_Lcd.c,38 :: 		
0x01D6	0xB041      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
0x01D8	0xD002      	BRA         L__Lcd_Cmd39
0x01DA	0x8E81      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x01DC	0xD001      	BRA         L__Lcd_Cmd40
L__Lcd_Cmd39:
0x01DE	0x9E81      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd40:
;__Lib_Lcd.c,40 :: 		
0x01E0	0x8C81      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,41 :: 		
0x01E2	0xDFA9      	RCALL       _Delay_1us
;__Lib_Lcd.c,42 :: 		
0x01E4	0x9C81      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,44 :: 		
0x01E6	0xA041      	BTFSS       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
0x01E8	0xD002      	BRA         L_Lcd_Cmd0
;__Lib_Lcd.c,45 :: 		
0x01EA	0xDFAB      	RCALL       _Delay_5500us
0x01EC	0xD001      	BRA         L_Lcd_Cmd1
L_Lcd_Cmd0:
;__Lib_Lcd.c,47 :: 		
0x01EE	0xDF9E      	RCALL       _Delay_50us
L_Lcd_Cmd1:
;__Lib_Lcd.c,48 :: 		
L_end_Lcd_Cmd:
0x01F0	0x0012      	RETURN      0
; end of _Lcd_Cmd
__Lib_Mmc_Mmc_DeSelect:
;__Lib_Mmc.c,67 :: 		
;__Lib_Mmc.c,69 :: 		
0x01F2	0x848B      	BSF         Mmc_Chip_Select, BitPos(Mmc_Chip_Select+0) 
;__Lib_Mmc.c,73 :: 		
0x01F4	0xFFE1C03D  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x01F8	0xFFE2C03E  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x01FC	0x0EFF      	MOVLW       255
0x01FE	0x6EE6      	MOVWF       POSTINC1 
0x0200	0xF000C03B  	MOVFF       _SPI_Rd_Ptr, R0
0x0204	0xF001C03C  	MOVFF       _SPI_Rd_Ptr+1, R1
0x0208	0xDFA7      	RCALL       _____DoIFC
;__Lib_Mmc.c,74 :: 		
L_end_Mmc_DeSelect:
0x020A	0x0012      	RETURN      0
; end of __Lib_Mmc_Mmc_DeSelect
__Lib_Mmc_Mmc_Send_Command:
;__Lib_Mmc.c,77 :: 		
;__Lib_Mmc.c,81 :: 		
0x020C	0x0E40      	MOVLW       64
0x020E	0x0104      	MOVLB       4
0x0210	0x2560      	ADDWF       FARG___Lib_Mmc_Mmc_Send_Command_partial_cmm, 0, 1
0x0212	0x6E00      	MOVWF       R0 
0x0214	0xFFE1C03D  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x0218	0xFFE2C03E  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x021C	0xFFE6C000  	MOVFF       R0, POSTINC1
0x0220	0xF000C03B  	MOVFF       _SPI_Rd_Ptr, R0
0x0224	0xF001C03C  	MOVFF       _SPI_Rd_Ptr+1, R1
0x0228	0xDF97      	RCALL       _____DoIFC
;__Lib_Mmc.c,82 :: 		
0x022A	0xFFE1C03D  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x022E	0xFFE2C03E  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x0232	0xFFE6C464  	MOVFF       FARG___Lib_Mmc_Mmc_Send_Command_content+3, POSTINC1
0x0236	0xF000C03B  	MOVFF       _SPI_Rd_Ptr, R0
0x023A	0xF001C03C  	MOVFF       _SPI_Rd_Ptr+1, R1
0x023E	0xDF8C      	RCALL       _____DoIFC
;__Lib_Mmc.c,83 :: 		
0x0240	0xFFE1C03D  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x0244	0xFFE2C03E  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x0248	0xFFE6C463  	MOVFF       FARG___Lib_Mmc_Mmc_Send_Command_content+2, POSTINC1
0x024C	0xF000C03B  	MOVFF       _SPI_Rd_Ptr, R0
0x0250	0xF001C03C  	MOVFF       _SPI_Rd_Ptr+1, R1
0x0254	0xDF81      	RCALL       _____DoIFC
;__Lib_Mmc.c,84 :: 		
0x0256	0xFFE1C03D  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x025A	0xFFE2C03E  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x025E	0xFFE6C462  	MOVFF       FARG___Lib_Mmc_Mmc_Send_Command_content+1, POSTINC1
0x0262	0xF000C03B  	MOVFF       _SPI_Rd_Ptr, R0
0x0266	0xF001C03C  	MOVFF       _SPI_Rd_Ptr+1, R1
0x026A	0xDF76      	RCALL       _____DoIFC
;__Lib_Mmc.c,85 :: 		
0x026C	0xFFE1C03D  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x0270	0xFFE2C03E  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x0274	0xFFE6C461  	MOVFF       FARG___Lib_Mmc_Mmc_Send_Command_content, POSTINC1
0x0278	0xF000C03B  	MOVFF       _SPI_Rd_Ptr, R0
0x027C	0xF001C03C  	MOVFF       _SPI_Rd_Ptr+1, R1
0x0280	0xDF6B      	RCALL       _____DoIFC
;__Lib_Mmc.c,86 :: 		
0x0282	0xFFE1C03D  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x0286	0xFFE2C03E  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x028A	0xFFE6C465  	MOVFF       FARG___Lib_Mmc_Mmc_Send_Command_crc, POSTINC1
0x028E	0xF000C03B  	MOVFF       _SPI_Rd_Ptr, R0
0x0292	0xF001C03C  	MOVFF       _SPI_Rd_Ptr+1, R1
0x0296	0xDF60      	RCALL       _____DoIFC
;__Lib_Mmc.c,89 :: 		
0x0298	0x0104      	MOVLB       4
0x029A	0x6B67      	CLRF        __Lib_Mmc_Mmc_Send_Command_timeout_L0, 1
0x029C	0x6B68      	CLRF        __Lib_Mmc_Mmc_Send_Command_timeout_L0+1, 1
;__Lib_Mmc.c,90 :: 		
L___Lib_Mmc_Mmc_Send_Command0:
;__Lib_Mmc.c,91 :: 		
0x029E	0xFFE1C03D  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x02A2	0xFFE2C03E  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x02A6	0x0EFF      	MOVLW       255
0x02A8	0x6EE6      	MOVWF       POSTINC1 
0x02AA	0xF000C03B  	MOVFF       _SPI_Rd_Ptr, R0
0x02AE	0xF001C03C  	MOVFF       _SPI_Rd_Ptr+1, R1
0x02B2	0xDF52      	RCALL       _____DoIFC
0x02B4	0xF466C000  	MOVFF       R0, __Lib_Mmc_Mmc_Send_Command_response_L0
;__Lib_Mmc.c,92 :: 		
0x02B8	0x0104      	MOVLB       4
0x02BA	0x4B67      	INFSNZ      __Lib_Mmc_Mmc_Send_Command_timeout_L0, 1, 1
0x02BC	0x2B68      	INCF        __Lib_Mmc_Mmc_Send_Command_timeout_L0+1, 1, 1
;__Lib_Mmc.c,93 :: 		
0x02BE	0x0E80      	MOVLW       128
0x02C0	0x1400      	ANDWF       R0, 0 
0x02C2	0x6E01      	MOVWF       R1 
0x02C4	0x5001      	MOVF        R1, 0 
0x02C6	0x0A00      	XORLW       0
0x02C8	0xE007      	BZ          L___Lib_Mmc_Mmc_Send_Command75
0x02CA	0x0E00      	MOVLW       0
0x02CC	0x5D68      	SUBWF       __Lib_Mmc_Mmc_Send_Command_timeout_L0+1, 0, 1
0x02CE	0xE102      	BNZ         L___Lib_Mmc_Mmc_Send_Command80
0x02D0	0x0E64      	MOVLW       100
0x02D2	0x5D67      	SUBWF       __Lib_Mmc_Mmc_Send_Command_timeout_L0, 0, 1
L___Lib_Mmc_Mmc_Send_Command80:
0x02D4	0xE201      	BC          L___Lib_Mmc_Mmc_Send_Command75
0x02D6	0xD7E3      	BRA         L___Lib_Mmc_Mmc_Send_Command0
L___Lib_Mmc_Mmc_Send_Command75:
;__Lib_Mmc.c,95 :: 		
0x02D8	0xF000C466  	MOVFF       __Lib_Mmc_Mmc_Send_Command_response_L0, R0
;__Lib_Mmc.c,96 :: 		
L_end_Mmc_Send_Command:
0x02DC	0x0012      	RETURN      0
; end of __Lib_Mmc_Mmc_Send_Command
_Lcd_Chr_CP:
;__Lib_Lcd.c,50 :: 		
;__Lib_Lcd.c,52 :: 		
0x02DE	0x9041      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,53 :: 		
0x02E0	0xF460C45B  	MOVFF       FARG_Lcd_Chr_CP_out_char, FARG_Lcd_Cmd_out_char
0x02E4	0xDF47      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,54 :: 		
0x02E6	0x8041      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,55 :: 		
L_end_Lcd_Chr_CP:
0x02E8	0x0012      	RETURN      0
; end of _Lcd_Chr_CP
__Lib_Mmc_Mmc_UnIdle:
;__Lib_Mmc.c,98 :: 		
;__Lib_Mmc.c,102 :: 		
0x02EA	0x0104      	MOVLB       4
0x02EC	0x6B5C      	CLRF        __Lib_Mmc_Mmc_UnIdle_cnt_L0, 1
0x02EE	0x6B5D      	CLRF        __Lib_Mmc_Mmc_UnIdle_cnt_L0+1, 1
L___Lib_Mmc_Mmc_UnIdle5:
0x02F0	0x0E27      	MOVLW       39
0x02F2	0x5D5D      	SUBWF       __Lib_Mmc_Mmc_UnIdle_cnt_L0+1, 0, 1
0x02F4	0xE102      	BNZ         L___Lib_Mmc_Mmc_UnIdle82
0x02F6	0x0E10      	MOVLW       16
0x02F8	0x5D5C      	SUBWF       __Lib_Mmc_Mmc_UnIdle_cnt_L0, 0, 1
L___Lib_Mmc_Mmc_UnIdle82:
0x02FA	0xB0D8      	BTFSC       STATUS, 0 
0x02FC	0xD09A      	BRA         L___Lib_Mmc_Mmc_UnIdle6
;__Lib_Mmc.c,103 :: 		
0x02FE	0x0E00      	MOVLW       0
0x0300	0x0A00      	XORLW       0
0x0302	0xE102      	BNZ         L___Lib_Mmc_Mmc_UnIdle83
0x0304	0x0E00      	MOVLW       0
0x0306	0x195B      	XORWF       FARG___Lib_Mmc_Mmc_UnIdle_ctype, 0, 1
L___Lib_Mmc_Mmc_UnIdle83:
0x0308	0xE115      	BNZ         L___Lib_Mmc_Mmc_UnIdle8
;__Lib_Mmc.c,104 :: 		
0x030A	0xDF32      	RCALL       __Lib_Mmc_Mmc_Select
;__Lib_Mmc.c,106 :: 		
0x030C	0x0E01      	MOVLW       1
0x030E	0x6F60      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_partial_cmm, 1
0x0310	0x6B61      	CLRF        FARG___Lib_Mmc_Mmc_Send_Command_content, 1
0x0312	0x6B62      	CLRF        FARG___Lib_Mmc_Mmc_Send_Command_content+1, 1
0x0314	0x6B63      	CLRF        FARG___Lib_Mmc_Mmc_Send_Command_content+2, 1
0x0316	0x6B64      	CLRF        FARG___Lib_Mmc_Mmc_Send_Command_content+3, 1
0x0318	0x0EFF      	MOVLW       255
0x031A	0x6F65      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_crc, 1
0x031C	0xDF77      	RCALL       __Lib_Mmc_Mmc_Send_Command
0x031E	0xF45EC000  	MOVFF       R0, __Lib_Mmc_Mmc_UnIdle_response_L0
;__Lib_Mmc.c,107 :: 		
0x0322	0xDF67      	RCALL       __Lib_Mmc_Mmc_DeSelect
;__Lib_Mmc.c,108 :: 		
0x0324	0x0104      	MOVLB       4
0x0326	0x515E      	MOVF        __Lib_Mmc_Mmc_UnIdle_response_L0, 0, 1
0x0328	0x0A00      	XORLW       0
0x032A	0xE103      	BNZ         L___Lib_Mmc_Mmc_UnIdle9
;__Lib_Mmc.c,110 :: 		
0x032C	0x6A1C      	CLRF        __Lib_Mmc_cardType 
;__Lib_Mmc.c,111 :: 		
0x032E	0x6A00      	CLRF        R0 
0x0330	0xD082      	BRA         L_end_Mmc_UnIdle
;__Lib_Mmc.c,112 :: 		
L___Lib_Mmc_Mmc_UnIdle9:
;__Lib_Mmc.c,113 :: 		
0x0332	0xD07C      	BRA         L___Lib_Mmc_Mmc_UnIdle10
L___Lib_Mmc_Mmc_UnIdle8:
;__Lib_Mmc.c,115 :: 		
0x0334	0xDF1D      	RCALL       __Lib_Mmc_Mmc_Select
;__Lib_Mmc.c,118 :: 		
0x0336	0x0E37      	MOVLW       55
0x0338	0x6F60      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_partial_cmm, 1
0x033A	0x6B61      	CLRF        FARG___Lib_Mmc_Mmc_Send_Command_content, 1
0x033C	0x6B62      	CLRF        FARG___Lib_Mmc_Mmc_Send_Command_content+1, 1
0x033E	0x6B63      	CLRF        FARG___Lib_Mmc_Mmc_Send_Command_content+2, 1
0x0340	0x6B64      	CLRF        FARG___Lib_Mmc_Mmc_Send_Command_content+3, 1
0x0342	0x0EFF      	MOVLW       255
0x0344	0x6F65      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_crc, 1
0x0346	0xDF62      	RCALL       __Lib_Mmc_Mmc_Send_Command
0x0348	0xF45EC000  	MOVFF       R0, __Lib_Mmc_Mmc_UnIdle_response_L0
;__Lib_Mmc.c,119 :: 		
0x034C	0xDF52      	RCALL       __Lib_Mmc_Mmc_DeSelect
;__Lib_Mmc.c,120 :: 		
0x034E	0x0104      	MOVLB       4
0x0350	0x515E      	MOVF        __Lib_Mmc_Mmc_UnIdle_response_L0, 0, 1
0x0352	0x0A01      	XORLW       1
0x0354	0xA4D8      	BTFSS       STATUS, 2 
0x0356	0xD069      	BRA         L___Lib_Mmc_Mmc_UnIdle11
;__Lib_Mmc.c,122 :: 		
0x0358	0xDF0B      	RCALL       __Lib_Mmc_Mmc_Select
;__Lib_Mmc.c,124 :: 		
0x035A	0x0E29      	MOVLW       41
0x035C	0x6F60      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_partial_cmm, 1
0x035E	0x0E00      	MOVLW       0
0x0360	0x6F61      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_content, 1
0x0362	0x0E00      	MOVLW       0
0x0364	0x6F62      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_content+1, 1
0x0366	0x0E00      	MOVLW       0
0x0368	0x6F63      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_content+2, 1
0x036A	0x0E40      	MOVLW       64
0x036C	0x6F64      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_content+3, 1
0x036E	0x0EFF      	MOVLW       255
0x0370	0x6F65      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_crc, 1
0x0372	0xDF4C      	RCALL       __Lib_Mmc_Mmc_Send_Command
0x0374	0xF45EC000  	MOVFF       R0, __Lib_Mmc_Mmc_UnIdle_response_L0
;__Lib_Mmc.c,125 :: 		
0x0378	0xDF3C      	RCALL       __Lib_Mmc_Mmc_DeSelect
;__Lib_Mmc.c,126 :: 		
0x037A	0x0104      	MOVLB       4
0x037C	0x515E      	MOVF        __Lib_Mmc_Mmc_UnIdle_response_L0, 0, 1
0x037E	0x0A00      	XORLW       0
0x0380	0xE153      	BNZ         L___Lib_Mmc_Mmc_UnIdle12
;__Lib_Mmc.c,127 :: 		
0x0382	0x0E00      	MOVLW       0
0x0384	0x0A00      	XORLW       0
0x0386	0xE102      	BNZ         L___Lib_Mmc_Mmc_UnIdle84
0x0388	0x0E02      	MOVLW       2
0x038A	0x195B      	XORWF       FARG___Lib_Mmc_Mmc_UnIdle_ctype, 0, 1
L___Lib_Mmc_Mmc_UnIdle84:
0x038C	0xE149      	BNZ         L___Lib_Mmc_Mmc_UnIdle13
;__Lib_Mmc.c,128 :: 		
0x038E	0xDEF0      	RCALL       __Lib_Mmc_Mmc_Select
;__Lib_Mmc.c,129 :: 		
0x0390	0x0E3A      	MOVLW       58
0x0392	0x6F60      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_partial_cmm, 1
0x0394	0x6B61      	CLRF        FARG___Lib_Mmc_Mmc_Send_Command_content, 1
0x0396	0x6B62      	CLRF        FARG___Lib_Mmc_Mmc_Send_Command_content+1, 1
0x0398	0x6B63      	CLRF        FARG___Lib_Mmc_Mmc_Send_Command_content+2, 1
0x039A	0x6B64      	CLRF        FARG___Lib_Mmc_Mmc_Send_Command_content+3, 1
0x039C	0x0EFF      	MOVLW       255
0x039E	0x6F65      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_crc, 1
0x03A0	0xDF35      	RCALL       __Lib_Mmc_Mmc_Send_Command
0x03A2	0xF45EC000  	MOVFF       R0, __Lib_Mmc_Mmc_UnIdle_response_L0
;__Lib_Mmc.c,130 :: 		
0x03A6	0xFFE1C03D  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x03AA	0xFFE2C03E  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x03AE	0x0EFF      	MOVLW       255
0x03B0	0x6EE6      	MOVWF       POSTINC1 
0x03B2	0xF000C03B  	MOVFF       _SPI_Rd_Ptr, R0
0x03B6	0xF001C03C  	MOVFF       _SPI_Rd_Ptr+1, R1
0x03BA	0xDECE      	RCALL       _____DoIFC
0x03BC	0xF45FC000  	MOVFF       R0, __Lib_Mmc_Mmc_UnIdle_response2_L0
;__Lib_Mmc.c,131 :: 		
0x03C0	0xFFE1C03D  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x03C4	0xFFE2C03E  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x03C8	0x0EFF      	MOVLW       255
0x03CA	0x6EE6      	MOVWF       POSTINC1 
0x03CC	0xF000C03B  	MOVFF       _SPI_Rd_Ptr, R0
0x03D0	0xF001C03C  	MOVFF       _SPI_Rd_Ptr+1, R1
0x03D4	0xDEC1      	RCALL       _____DoIFC
;__Lib_Mmc.c,132 :: 		
0x03D6	0xFFE1C03D  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x03DA	0xFFE2C03E  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x03DE	0x0EFF      	MOVLW       255
0x03E0	0x6EE6      	MOVWF       POSTINC1 
0x03E2	0xF000C03B  	MOVFF       _SPI_Rd_Ptr, R0
0x03E6	0xF001C03C  	MOVFF       _SPI_Rd_Ptr+1, R1
0x03EA	0xDEB6      	RCALL       _____DoIFC
;__Lib_Mmc.c,133 :: 		
0x03EC	0xFFE1C03D  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x03F0	0xFFE2C03E  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x03F4	0x0EFF      	MOVLW       255
0x03F6	0x6EE6      	MOVWF       POSTINC1 
0x03F8	0xF000C03B  	MOVFF       _SPI_Rd_Ptr, R0
0x03FC	0xF001C03C  	MOVFF       _SPI_Rd_Ptr+1, R1
0x0400	0xDEAB      	RCALL       _____DoIFC
;__Lib_Mmc.c,134 :: 		
0x0402	0xDEF7      	RCALL       __Lib_Mmc_Mmc_DeSelect
;__Lib_Mmc.c,135 :: 		
0x0404	0x0104      	MOVLB       4
0x0406	0x515E      	MOVF        __Lib_Mmc_Mmc_UnIdle_response_L0, 0, 1
0x0408	0x0A00      	XORLW       0
0x040A	0xE109      	BNZ         L___Lib_Mmc_Mmc_UnIdle14
;__Lib_Mmc.c,136 :: 		
0x040C	0xAD5F      	BTFSS       __Lib_Mmc_Mmc_UnIdle_response2_L0, 6, 1
0x040E	0xD003      	BRA         L___Lib_Mmc_Mmc_UnIdle15
;__Lib_Mmc.c,138 :: 		
0x0410	0x0E04      	MOVLW       4
0x0412	0x6E1C      	MOVWF       __Lib_Mmc_cardType 
0x0414	0xD002      	BRA         L___Lib_Mmc_Mmc_UnIdle16
L___Lib_Mmc_Mmc_UnIdle15:
;__Lib_Mmc.c,141 :: 		
0x0416	0x0E03      	MOVLW       3
0x0418	0x6E1C      	MOVWF       __Lib_Mmc_cardType 
L___Lib_Mmc_Mmc_UnIdle16:
;__Lib_Mmc.c,142 :: 		
0x041A	0x6A00      	CLRF        R0 
0x041C	0xD00C      	BRA         L_end_Mmc_UnIdle
;__Lib_Mmc.c,143 :: 		
L___Lib_Mmc_Mmc_UnIdle14:
;__Lib_Mmc.c,144 :: 		
0x041E	0xD004      	BRA         L___Lib_Mmc_Mmc_UnIdle17
L___Lib_Mmc_Mmc_UnIdle13:
;__Lib_Mmc.c,146 :: 		
0x0420	0x0E01      	MOVLW       1
0x0422	0x6E1C      	MOVWF       __Lib_Mmc_cardType 
;__Lib_Mmc.c,147 :: 		
0x0424	0x6A00      	CLRF        R0 
0x0426	0xD007      	BRA         L_end_Mmc_UnIdle
;__Lib_Mmc.c,148 :: 		
L___Lib_Mmc_Mmc_UnIdle17:
;__Lib_Mmc.c,149 :: 		
L___Lib_Mmc_Mmc_UnIdle12:
;__Lib_Mmc.c,150 :: 		
0x0428	0xD001      	BRA         L___Lib_Mmc_Mmc_UnIdle18
L___Lib_Mmc_Mmc_UnIdle11:
;__Lib_Mmc.c,153 :: 		
0x042A	0xD003      	BRA         L___Lib_Mmc_Mmc_UnIdle6
;__Lib_Mmc.c,154 :: 		
L___Lib_Mmc_Mmc_UnIdle18:
;__Lib_Mmc.c,155 :: 		
L___Lib_Mmc_Mmc_UnIdle10:
;__Lib_Mmc.c,102 :: 		
0x042C	0x4B5C      	INFSNZ      __Lib_Mmc_Mmc_UnIdle_cnt_L0, 1, 1
0x042E	0x2B5D      	INCF        __Lib_Mmc_Mmc_UnIdle_cnt_L0+1, 1, 1
;__Lib_Mmc.c,156 :: 		
0x0430	0xD75F      	BRA         L___Lib_Mmc_Mmc_UnIdle5
L___Lib_Mmc_Mmc_UnIdle6:
;__Lib_Mmc.c,157 :: 		
0x0432	0x0E01      	MOVLW       1
0x0434	0x6E00      	MOVWF       R0 
;__Lib_Mmc.c,158 :: 		
L_end_Mmc_UnIdle:
0x0436	0x0012      	RETURN      0
; end of __Lib_Mmc_Mmc_UnIdle
_Lcd_Out:
;__Lib_Lcd.c,184 :: 		
;__Lib_Lcd.c,187 :: 		
0x0438	0xD010      	BRA         L_Lcd_Out11
;__Lib_Lcd.c,188 :: 		
L_Lcd_Out13:
0x043A	0x0E80      	MOVLW       128
0x043C	0x0104      	MOVLB       4
0x043E	0x6F4D      	MOVWF       FARG_Lcd_Out_row, 1
0x0440	0xD01A      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,189 :: 		
L_Lcd_Out14:
0x0442	0x0EC0      	MOVLW       192
0x0444	0x6F4D      	MOVWF       FARG_Lcd_Out_row, 1
0x0446	0xD017      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,190 :: 		
L_Lcd_Out15:
0x0448	0x0E94      	MOVLW       148
0x044A	0x6F4D      	MOVWF       FARG_Lcd_Out_row, 1
0x044C	0xD014      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,191 :: 		
L_Lcd_Out16:
0x044E	0x0ED4      	MOVLW       212
0x0450	0x6F4D      	MOVWF       FARG_Lcd_Out_row, 1
0x0452	0xD011      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,192 :: 		
L_Lcd_Out17:
0x0454	0x0E80      	MOVLW       128
0x0456	0x6F4D      	MOVWF       FARG_Lcd_Out_row, 1
;__Lib_Lcd.c,193 :: 		
0x0458	0xD00E      	BRA         L_Lcd_Out12
L_Lcd_Out11:
0x045A	0x0104      	MOVLB       4
0x045C	0x514D      	MOVF        FARG_Lcd_Out_row, 0, 1
0x045E	0x0A01      	XORLW       1
0x0460	0xE0EC      	BZ          L_Lcd_Out13
0x0462	0x514D      	MOVF        FARG_Lcd_Out_row, 0, 1
0x0464	0x0A02      	XORLW       2
0x0466	0xE0ED      	BZ          L_Lcd_Out14
0x0468	0x514D      	MOVF        FARG_Lcd_Out_row, 0, 1
0x046A	0x0A03      	XORLW       3
0x046C	0xE0ED      	BZ          L_Lcd_Out15
0x046E	0x514D      	MOVF        FARG_Lcd_Out_row, 0, 1
0x0470	0x0A04      	XORLW       4
0x0472	0xE0ED      	BZ          L_Lcd_Out16
0x0474	0xD7EF      	BRA         L_Lcd_Out17
L_Lcd_Out12:
;__Lib_Lcd.c,194 :: 		
0x0476	0x054E      	DECF        FARG_Lcd_Out_column, 0, 1
0x0478	0x6E00      	MOVWF       R0 
0x047A	0x514D      	MOVF        FARG_Lcd_Out_row, 0, 1
0x047C	0x2600      	ADDWF       R0, 1 
0x047E	0xF44DC000  	MOVFF       R0, FARG_Lcd_Out_row
;__Lib_Lcd.c,196 :: 		
0x0482	0xF460C000  	MOVFF       R0, FARG_Lcd_Cmd_out_char
0x0486	0xDE76      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,197 :: 		
0x0488	0x9041      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,198 :: 		
0x048A	0x6B51      	CLRF        Lcd_Out_i_L0, 1
;__Lib_Lcd.c,199 :: 		
L_Lcd_Out18:
0x048C	0x5151      	MOVF        Lcd_Out_i_L0, 0, 1
0x048E	0x254F      	ADDWF       FARG_Lcd_Out_text, 0, 1
0x0490	0x6EE9      	MOVWF       FSR0L 
0x0492	0x0E00      	MOVLW       0
0x0494	0x2150      	ADDWFC      FARG_Lcd_Out_text+1, 0, 1
0x0496	0x6EEA      	MOVWF       FSR0H 
0x0498	0x52EE      	MOVF        POSTINC0, 1 
0x049A	0xE00B      	BZ          L_Lcd_Out19
;__Lib_Lcd.c,200 :: 		
0x049C	0x5151      	MOVF        Lcd_Out_i_L0, 0, 1
0x049E	0x254F      	ADDWF       FARG_Lcd_Out_text, 0, 1
0x04A0	0x6EE9      	MOVWF       FSR0L 
0x04A2	0x0E00      	MOVLW       0
0x04A4	0x2150      	ADDWFC      FARG_Lcd_Out_text+1, 0, 1
0x04A6	0x6EEA      	MOVWF       FSR0H 
0x04A8	0xF45BCFEE  	MOVFF       POSTINC0, FARG_Lcd_Chr_CP_out_char
0x04AC	0xDF18      	RCALL       _Lcd_Chr_CP
0x04AE	0x2B51      	INCF        Lcd_Out_i_L0, 1, 1
0x04B0	0xD7ED      	BRA         L_Lcd_Out18
L_Lcd_Out19:
;__Lib_Lcd.c,201 :: 		
0x04B2	0x8041      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,202 :: 		
L_end_Lcd_Out:
0x04B4	0x0012      	RETURN      0
; end of _Lcd_Out
_codeToRam:
;soundrec.c,135 :: 		char* codeToRam(const char* ctxt)
;soundrec.c,139 :: 		for(i =0; txt[i] = ctxt[i]; i++);
0x04B6	0x6A03      	CLRF        R3 
L_codeToRam0:
0x04B8	0x0E2C      	MOVLW       codeToRam_txt_L0
0x04BA	0x6E01      	MOVWF       R1 
0x04BC	0x0E00      	MOVLW       hi_addr(codeToRam_txt_L0)
0x04BE	0x6E02      	MOVWF       R2 
0x04C0	0x5003      	MOVF        R3, 0 
0x04C2	0x2601      	ADDWF       R1, 1 
0x04C4	0xB0D8      	BTFSC       STATUS, 0 
0x04C6	0x2A02      	INCF        R2, 1 
0x04C8	0x5003      	MOVF        R3, 0 
0x04CA	0x0104      	MOVLB       4
0x04CC	0x254D      	ADDWF       FARG_codeToRam_ctxt, 0, 1
0x04CE	0x6EF6      	MOVWF       4086 
0x04D0	0x0E00      	MOVLW       0
0x04D2	0x214E      	ADDWFC      FARG_codeToRam_ctxt+1, 0, 1
0x04D4	0x6EF7      	MOVWF       TBLPTRH 
0x04D6	0x0E00      	MOVLW       0
0x04D8	0x214F      	ADDWFC      FARG_codeToRam_ctxt+2, 0, 1
0x04DA	0x6EF8      	MOVWF       TBLPTRU 
0x04DC	0x0009      	TBLRD*+
0x04DE	0xF000CFF5  	MOVFF       TABLAT, R0
0x04E2	0xFFE1C001  	MOVFF       R1, FSR1L
0x04E6	0xFFE2C002  	MOVFF       R2, FSR1H
0x04EA	0xFFE6C000  	MOVFF       R0, POSTINC1
0x04EE	0xFFE9C001  	MOVFF       R1, FSR0L
0x04F2	0xFFEAC002  	MOVFF       R2, FSR0H
0x04F6	0x52EE      	MOVF        POSTINC0, 1 
0x04F8	0xE002      	BZ          L_codeToRam1
0x04FA	0x2A03      	INCF        R3, 1 
0x04FC	0xD7DD      	BRA         L_codeToRam0
L_codeToRam1:
;soundrec.c,141 :: 		return txt;
0x04FE	0x0E2C      	MOVLW       codeToRam_txt_L0
0x0500	0x6E00      	MOVWF       R0 
0x0502	0x0E00      	MOVLW       hi_addr(codeToRam_txt_L0)
0x0504	0x6E01      	MOVWF       R1 
;soundrec.c,142 :: 		}
L_end_codeToRam:
0x0506	0x0012      	RETURN      0
; end of _codeToRam
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x0508	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x050A	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x050E	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x0510	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x0512	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x0514	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x0516	0x0012      	RETURN      0
; end of ___CC2DW
_adcInit:
;adc.c,25 :: 		void adcInit(void)
;adc.c,27 :: 		ADCON1 = 0x0e;
0x0518	0x0E0E      	MOVLW       14
0x051A	0x6EC1      	MOVWF       ADCON1 
;adc.c,28 :: 		ADCON2 = 0x2d;
0x051C	0x0E2D      	MOVLW       45
0x051E	0x6EC0      	MOVWF       ADCON2 
;adc.c,29 :: 		ADCON0 |= (1 << ADON);
0x0520	0x80C2      	BSF         ADCON0, 0 
;adc.c,30 :: 		}
L_end_adcInit:
0x0522	0x0012      	RETURN      0
; end of _adcInit
_Lcd_Init:
;__Lib_Lcd.c,84 :: 		
;__Lib_Lcd.c,86 :: 		
0x0524	0x9C93      	BCF         LCD_EN_Direction, BitPos(LCD_EN_Direction+0) 
;__Lib_Lcd.c,87 :: 		
0x0526	0x9E93      	BCF         LCD_RS_Direction, BitPos(LCD_RS_Direction+0) 
;__Lib_Lcd.c,88 :: 		
0x0528	0x9A93      	BCF         LCD_D4_Direction, BitPos(LCD_D4_Direction+0) 
;__Lib_Lcd.c,89 :: 		
0x052A	0x9893      	BCF         LCD_D5_Direction, BitPos(LCD_D5_Direction+0) 
;__Lib_Lcd.c,90 :: 		
0x052C	0x9693      	BCF         LCD_D6_Direction, BitPos(LCD_D6_Direction+0) 
;__Lib_Lcd.c,91 :: 		
0x052E	0x9493      	BCF         LCD_D7_Direction, BitPos(LCD_D7_Direction+0) 
;__Lib_Lcd.c,93 :: 		
0x0530	0x9C81      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,94 :: 		
0x0532	0x9E81      	BCF         LCD_RS, BitPos(LCD_RS+0) 
;__Lib_Lcd.c,95 :: 		
0x0534	0x9481      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,96 :: 		
0x0536	0x9681      	BCF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,97 :: 		
0x0538	0x9881      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,98 :: 		
0x053A	0x9A81      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,100 :: 		
0x053C	0xDE02      	RCALL       _Delay_5500us
;__Lib_Lcd.c,101 :: 		
0x053E	0xDE01      	RCALL       _Delay_5500us
;__Lib_Lcd.c,102 :: 		
0x0540	0xDE00      	RCALL       _Delay_5500us
;__Lib_Lcd.c,105 :: 		
0x0542	0x8881      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,106 :: 		
0x0544	0x8A81      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,107 :: 		
0x0546	0x8C81      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,108 :: 		
0x0548	0xDDF6      	RCALL       _Delay_1us
;__Lib_Lcd.c,109 :: 		
0x054A	0x9C81      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,110 :: 		
0x054C	0xDDFA      	RCALL       _Delay_5500us
;__Lib_Lcd.c,112 :: 		
0x054E	0x8C81      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,113 :: 		
0x0550	0xDDF2      	RCALL       _Delay_1us
;__Lib_Lcd.c,114 :: 		
0x0552	0x9C81      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,115 :: 		
0x0554	0xDDF6      	RCALL       _Delay_5500us
;__Lib_Lcd.c,117 :: 		
0x0556	0x8C81      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,118 :: 		
0x0558	0xDDEE      	RCALL       _Delay_1us
;__Lib_Lcd.c,119 :: 		
0x055A	0x9C81      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,120 :: 		
0x055C	0xDDF2      	RCALL       _Delay_5500us
;__Lib_Lcd.c,123 :: 		
0x055E	0x9A81      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,124 :: 		
0x0560	0x8C81      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,125 :: 		
0x0562	0xDDE9      	RCALL       _Delay_1us
;__Lib_Lcd.c,126 :: 		
0x0564	0x9C81      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,127 :: 		
0x0566	0xDDED      	RCALL       _Delay_5500us
;__Lib_Lcd.c,130 :: 		
0x0568	0x8C81      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,131 :: 		
0x056A	0xDDE5      	RCALL       _Delay_1us
;__Lib_Lcd.c,132 :: 		
0x056C	0x9C81      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,134 :: 		
0x056E	0x9881      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,135 :: 		
0x0570	0x8481      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,136 :: 		
0x0572	0x8C81      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,137 :: 		
0x0574	0xDDE0      	RCALL       _Delay_1us
;__Lib_Lcd.c,138 :: 		
0x0576	0x9C81      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,139 :: 		
0x0578	0xDDE4      	RCALL       _Delay_5500us
;__Lib_Lcd.c,142 :: 		
0x057A	0x9481      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,143 :: 		
0x057C	0x8A81      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,144 :: 		
0x057E	0x8C81      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,145 :: 		
0x0580	0xDDDA      	RCALL       _Delay_1us
;__Lib_Lcd.c,146 :: 		
0x0582	0x9C81      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,148 :: 		
0x0584	0x9A81      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,149 :: 		
0x0586	0x8C81      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,150 :: 		
0x0588	0xDDD6      	RCALL       _Delay_1us
;__Lib_Lcd.c,151 :: 		
0x058A	0x9C81      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,152 :: 		
0x058C	0xDDDA      	RCALL       _Delay_5500us
;__Lib_Lcd.c,155 :: 		
0x058E	0x8C81      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,156 :: 		
0x0590	0xDDD2      	RCALL       _Delay_1us
;__Lib_Lcd.c,157 :: 		
0x0592	0x9C81      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,159 :: 		
0x0594	0x8A81      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,160 :: 		
0x0596	0x8C81      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,161 :: 		
0x0598	0xDDCE      	RCALL       _Delay_1us
;__Lib_Lcd.c,162 :: 		
0x059A	0x9C81      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,163 :: 		
0x059C	0xDDD2      	RCALL       _Delay_5500us
;__Lib_Lcd.c,166 :: 		
0x059E	0x9A81      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,167 :: 		
0x05A0	0x8C81      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,168 :: 		
0x05A2	0xDDC9      	RCALL       _Delay_1us
;__Lib_Lcd.c,169 :: 		
0x05A4	0x9C81      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,171 :: 		
0x05A6	0x8481      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,172 :: 		
0x05A8	0x8681      	BSF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,173 :: 		
0x05AA	0x8881      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,174 :: 		
0x05AC	0x8A81      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,175 :: 		
0x05AE	0x8C81      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,176 :: 		
0x05B0	0xDDC2      	RCALL       _Delay_1us
;__Lib_Lcd.c,177 :: 		
0x05B2	0x9C81      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,179 :: 		
0x05B4	0xDDC6      	RCALL       _Delay_5500us
;__Lib_Lcd.c,181 :: 		
0x05B6	0x8041      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,182 :: 		
L_end_Lcd_Init:
0x05B8	0x0012      	RETURN      0
; end of _Lcd_Init
_SPI1_Init_Advanced:
;__Lib_SPI_c345.c,40 :: 		
;__Lib_SPI_c345.c,41 :: 		
0x05BA	0x0E1A      	MOVLW       _SPI1_Read
0x05BC	0x6E3B      	MOVWF       _SPI_Rd_Ptr 
0x05BE	0x0E01      	MOVLW       hi_addr(_SPI1_Read)
0x05C0	0x6E3C      	MOVWF       _SPI_Rd_Ptr+1 
0x05C2	0x0E69      	MOVLW       FARG_SPI1_Read_buffer
0x05C4	0x6E3D      	MOVWF       _SPI_Rd_Ptr+2 
0x05C6	0x0E04      	MOVLW       hi_addr(FARG_SPI1_Read_buffer)
0x05C8	0x6E3E      	MOVWF       _SPI_Rd_Ptr+3 
;__Lib_SPI_c345.c,42 :: 		
0x05CA	0x0EFF      	MOVLW       _SPI1_Write
0x05CC	0x6E42      	MOVWF       _SPI_Wr_Ptr 
0x05CE	0x0EFF      	MOVLW       hi_addr(_SPI1_Write)
0x05D0	0x6E43      	MOVWF       _SPI_Wr_Ptr+1 
0x05D2	0x0EFF      	MOVLW       FARG_SPI1_Write_data_
0x05D4	0x6E44      	MOVWF       _SPI_Wr_Ptr+2 
0x05D6	0x0EFF      	MOVLW       hi_addr(FARG_SPI1_Write_data_)
0x05D8	0x6E45      	MOVWF       _SPI_Wr_Ptr+3 
;__Lib_SPI_c345.c,44 :: 		
0x05DA	0x9A94      	BCF         TRISC5_bit, BitPos(TRISC5_bit+0) 
;__Lib_SPI_c345.c,45 :: 		
0x05DC	0x0104      	MOVLB       4
0x05DE	0x514D      	MOVF        FARG_SPI1_Init_Advanced_master, 0, 1
0x05E0	0x0A04      	XORLW       4
0x05E2	0xE102      	BNZ         L_SPI1_Init_Advanced0
0x05E4	0x8694      	BSF         TRISC3_bit, BitPos(TRISC3_bit+0) 
0x05E6	0xD001      	BRA         L_SPI1_Init_Advanced1
L_SPI1_Init_Advanced0:
;__Lib_SPI_c345.c,46 :: 		
0x05E8	0x9694      	BCF         TRISC3_bit, BitPos(TRISC3_bit+0) 
L_SPI1_Init_Advanced1:
;__Lib_SPI_c345.c,47 :: 		
0x05EA	0x8894      	BSF         TRISC4_bit, BitPos(TRISC4_bit+0) 
;__Lib_SPI_c345.c,49 :: 		
0x05EC	0x6AC6      	CLRF        SSPCON1 
;__Lib_SPI_c345.c,50 :: 		
0x05EE	0x514D      	MOVF        FARG_SPI1_Init_Advanced_master, 0, 1
0x05F0	0x12C6      	IORWF       SSPCON1, 1 
;__Lib_SPI_c345.c,51 :: 		
0x05F2	0x514F      	MOVF        FARG_SPI1_Init_Advanced_clock_idle, 0, 1
0x05F4	0x12C6      	IORWF       SSPCON1, 1 
;__Lib_SPI_c345.c,52 :: 		
0x05F6	0x514E      	MOVF        FARG_SPI1_Init_Advanced_data_sample, 0, 1
0x05F8	0x12C7      	IORWF       SSPSTAT, 1 
;__Lib_SPI_c345.c,54 :: 		
0x05FA	0x534F      	MOVF        FARG_SPI1_Init_Advanced_clock_idle, 1, 1
0x05FC	0xE005      	BZ          L_SPI1_Init_Advanced2
;__Lib_SPI_c345.c,55 :: 		
0x05FE	0x5150      	MOVF        FARG_SPI1_Init_Advanced_transmit_edge, 0, 1
0x0600	0x0A00      	XORLW       0
0x0602	0xB4D8      	BTFSC       STATUS, 2 
;__Lib_SPI_c345.c,56 :: 		
0x0604	0x8CC7      	BSF         SSPSTAT, 6 
L_SPI1_Init_Advanced3:
;__Lib_SPI_c345.c,57 :: 		
0x0606	0xD003      	BRA         L_SPI1_Init_Advanced4
L_SPI1_Init_Advanced2:
;__Lib_SPI_c345.c,59 :: 		
0x0608	0x5350      	MOVF        FARG_SPI1_Init_Advanced_transmit_edge, 1, 1
0x060A	0xA4D8      	BTFSS       STATUS, 2 
;__Lib_SPI_c345.c,60 :: 		
0x060C	0x8CC7      	BSF         SSPSTAT, 6 
L_SPI1_Init_Advanced5:
;__Lib_SPI_c345.c,61 :: 		
L_SPI1_Init_Advanced4:
;__Lib_SPI_c345.c,62 :: 		
0x060E	0x8AC6      	BSF         SSPCON1, 5 
;__Lib_SPI_c345.c,63 :: 		
L_end_SPI1_Init_Advanced:
0x0610	0x0012      	RETURN      0
; end of _SPI1_Init_Advanced
_Mmc_Init:
;__Lib_Mmc.c,164 :: 		
;__Lib_Mmc.c,168 :: 		
0x0612	0x0E05      	MOVLW       5
0x0614	0x6E1C      	MOVWF       __Lib_Mmc_cardType 
;__Lib_Mmc.c,170 :: 		
0x0616	0x9494      	BCF         Mmc_Chip_Select_Direction, BitPos(Mmc_Chip_Select_Direction+0) 
;__Lib_Mmc.c,172 :: 		
0x0618	0xDDEC      	RCALL       __Lib_Mmc_Mmc_DeSelect
;__Lib_Mmc.c,175 :: 		
0x061A	0x0104      	MOVLB       4
0x061C	0x6B4D      	CLRF        Mmc_Init_cnt_L0, 1
0x061E	0x6B4E      	CLRF        Mmc_Init_cnt_L0+1, 1
L_Mmc_Init19:
0x0620	0x0E00      	MOVLW       0
0x0622	0x5D4E      	SUBWF       Mmc_Init_cnt_L0+1, 0, 1
0x0624	0xE102      	BNZ         L__Mmc_Init86
0x0626	0x0E0A      	MOVLW       10
0x0628	0x5D4D      	SUBWF       Mmc_Init_cnt_L0, 0, 1
L__Mmc_Init86:
0x062A	0xE20F      	BC          L_Mmc_Init20
;__Lib_Mmc.c,176 :: 		
0x062C	0xFFE1C03D  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x0630	0xFFE2C03E  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x0634	0x0EFF      	MOVLW       255
0x0636	0x6EE6      	MOVWF       POSTINC1 
0x0638	0xF000C03B  	MOVFF       _SPI_Rd_Ptr, R0
0x063C	0xF001C03C  	MOVFF       _SPI_Rd_Ptr+1, R1
0x0640	0xDD8B      	RCALL       _____DoIFC
;__Lib_Mmc.c,175 :: 		
0x0642	0x0104      	MOVLB       4
0x0644	0x4B4D      	INFSNZ      Mmc_Init_cnt_L0, 1, 1
0x0646	0x2B4E      	INCF        Mmc_Init_cnt_L0+1, 1, 1
;__Lib_Mmc.c,176 :: 		
0x0648	0xD7EB      	BRA         L_Mmc_Init19
L_Mmc_Init20:
;__Lib_Mmc.c,180 :: 		
0x064A	0xDD92      	RCALL       __Lib_Mmc_Mmc_Select
;__Lib_Mmc.c,182 :: 		
0x064C	0x6B60      	CLRF        FARG___Lib_Mmc_Mmc_Send_Command_partial_cmm, 1
0x064E	0x6B61      	CLRF        FARG___Lib_Mmc_Mmc_Send_Command_content, 1
0x0650	0x6B62      	CLRF        FARG___Lib_Mmc_Mmc_Send_Command_content+1, 1
0x0652	0x6B63      	CLRF        FARG___Lib_Mmc_Mmc_Send_Command_content+2, 1
0x0654	0x6B64      	CLRF        FARG___Lib_Mmc_Mmc_Send_Command_content+3, 1
0x0656	0x0E95      	MOVLW       149
0x0658	0x6F65      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_crc, 1
0x065A	0xDDD8      	RCALL       __Lib_Mmc_Mmc_Send_Command
0x065C	0xF44FC000  	MOVFF       R0, Mmc_Init_response_L0
;__Lib_Mmc.c,183 :: 		
0x0660	0xDDC8      	RCALL       __Lib_Mmc_Mmc_DeSelect
;__Lib_Mmc.c,186 :: 		
0x0662	0x0104      	MOVLB       4
0x0664	0x514F      	MOVF        Mmc_Init_response_L0, 0, 1
0x0666	0x0A01      	XORLW       1
0x0668	0xE003      	BZ          L_Mmc_Init22
;__Lib_Mmc.c,187 :: 		
0x066A	0x0E01      	MOVLW       1
0x066C	0x6E00      	MOVWF       R0 
0x066E	0xD072      	BRA         L_end_Mmc_Init
L_Mmc_Init22:
;__Lib_Mmc.c,189 :: 		
0x0670	0xDD7F      	RCALL       __Lib_Mmc_Mmc_Select
;__Lib_Mmc.c,190 :: 		
0x0672	0x0E08      	MOVLW       8
0x0674	0x6F60      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_partial_cmm, 1
0x0676	0x0EAA      	MOVLW       170
0x0678	0x6F61      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_content, 1
0x067A	0x0E01      	MOVLW       1
0x067C	0x6F62      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_content+1, 1
0x067E	0x0E00      	MOVLW       0
0x0680	0x6F63      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_content+2, 1
0x0682	0x6F64      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_content+3, 1
0x0684	0x0E87      	MOVLW       135
0x0686	0x6F65      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_crc, 1
0x0688	0xDDC1      	RCALL       __Lib_Mmc_Mmc_Send_Command
0x068A	0xF44FC000  	MOVFF       R0, Mmc_Init_response_L0
;__Lib_Mmc.c,192 :: 		
0x068E	0xFFE1C03D  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x0692	0xFFE2C03E  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x0696	0x0EFF      	MOVLW       255
0x0698	0x6EE6      	MOVWF       POSTINC1 
0x069A	0xF000C03B  	MOVFF       _SPI_Rd_Ptr, R0
0x069E	0xF001C03C  	MOVFF       _SPI_Rd_Ptr+1, R1
0x06A2	0xDD5A      	RCALL       _____DoIFC
;__Lib_Mmc.c,193 :: 		
0x06A4	0xFFE1C03D  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x06A8	0xFFE2C03E  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x06AC	0x0EFF      	MOVLW       255
0x06AE	0x6EE6      	MOVWF       POSTINC1 
0x06B0	0xF000C03B  	MOVFF       _SPI_Rd_Ptr, R0
0x06B4	0xF001C03C  	MOVFF       _SPI_Rd_Ptr+1, R1
0x06B8	0xDD4F      	RCALL       _____DoIFC
;__Lib_Mmc.c,194 :: 		
0x06BA	0xFFE1C03D  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x06BE	0xFFE2C03E  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x06C2	0x0EFF      	MOVLW       255
0x06C4	0x6EE6      	MOVWF       POSTINC1 
0x06C6	0xF000C03B  	MOVFF       _SPI_Rd_Ptr, R0
0x06CA	0xF001C03C  	MOVFF       _SPI_Rd_Ptr+1, R1
0x06CE	0xDD44      	RCALL       _____DoIFC
;__Lib_Mmc.c,195 :: 		
0x06D0	0xFFE1C03D  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x06D4	0xFFE2C03E  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x06D8	0x0EFF      	MOVLW       255
0x06DA	0x6EE6      	MOVWF       POSTINC1 
0x06DC	0xF000C03B  	MOVFF       _SPI_Rd_Ptr, R0
0x06E0	0xF001C03C  	MOVFF       _SPI_Rd_Ptr+1, R1
0x06E4	0xDD39      	RCALL       _____DoIFC
;__Lib_Mmc.c,196 :: 		
0x06E6	0xDD85      	RCALL       __Lib_Mmc_Mmc_DeSelect
;__Lib_Mmc.c,199 :: 		
0x06E8	0x0104      	MOVLB       4
0x06EA	0x514F      	MOVF        Mmc_Init_response_L0, 0, 1
0x06EC	0x0A01      	XORLW       1
0x06EE	0xE008      	BZ          L_Mmc_Init23
;__Lib_Mmc.c,201 :: 		
0x06F0	0x0E01      	MOVLW       1
0x06F2	0x6F5B      	MOVWF       FARG___Lib_Mmc_Mmc_UnIdle_ctype, 1
0x06F4	0xDDFA      	RCALL       __Lib_Mmc_Mmc_UnIdle
0x06F6	0x5200      	MOVF        R0, 1 
0x06F8	0xE002      	BZ          L_Mmc_Init24
;__Lib_Mmc.c,202 :: 		
0x06FA	0x6B5B      	CLRF        FARG___Lib_Mmc_Mmc_UnIdle_ctype, 1
0x06FC	0xDDF6      	RCALL       __Lib_Mmc_Mmc_UnIdle
L_Mmc_Init24:
;__Lib_Mmc.c,203 :: 		
0x06FE	0xD003      	BRA         L_Mmc_Init25
L_Mmc_Init23:
;__Lib_Mmc.c,206 :: 		
0x0700	0x0E02      	MOVLW       2
0x0702	0x6F5B      	MOVWF       FARG___Lib_Mmc_Mmc_UnIdle_ctype, 1
0x0704	0xDDF2      	RCALL       __Lib_Mmc_Mmc_UnIdle
;__Lib_Mmc.c,207 :: 		
L_Mmc_Init25:
;__Lib_Mmc.c,210 :: 		
0x0706	0x0E00      	MOVLW       0
0x0708	0x0A00      	XORLW       0
0x070A	0xE102      	BNZ         L__Mmc_Init87
0x070C	0x0E05      	MOVLW       5
0x070E	0x181C      	XORWF       __Lib_Mmc_cardType, 0 
L__Mmc_Init87:
0x0710	0xE103      	BNZ         L_Mmc_Init26
;__Lib_Mmc.c,211 :: 		
0x0712	0x0E02      	MOVLW       2
0x0714	0x6E00      	MOVWF       R0 
0x0716	0xD01E      	BRA         L_end_Mmc_Init
L_Mmc_Init26:
;__Lib_Mmc.c,213 :: 		
0x0718	0x0E00      	MOVLW       0
0x071A	0x0A00      	XORLW       0
0x071C	0xE102      	BNZ         L__Mmc_Init88
0x071E	0x0E04      	MOVLW       4
0x0720	0x181C      	XORWF       __Lib_Mmc_cardType, 0 
L__Mmc_Init88:
0x0722	0xE017      	BZ          L_Mmc_Init27
;__Lib_Mmc.c,215 :: 		
0x0724	0xDD25      	RCALL       __Lib_Mmc_Mmc_Select
;__Lib_Mmc.c,217 :: 		
0x0726	0x0E10      	MOVLW       16
0x0728	0x6F60      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_partial_cmm, 1
0x072A	0x0E00      	MOVLW       0
0x072C	0x6F61      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_content, 1
0x072E	0x0E02      	MOVLW       2
0x0730	0x6F62      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_content+1, 1
0x0732	0x0E00      	MOVLW       0
0x0734	0x6F63      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_content+2, 1
0x0736	0x6F64      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_content+3, 1
0x0738	0x0EFF      	MOVLW       255
0x073A	0x6F65      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_crc, 1
0x073C	0xDD67      	RCALL       __Lib_Mmc_Mmc_Send_Command
0x073E	0xF44FC000  	MOVFF       R0, Mmc_Init_response_L0
;__Lib_Mmc.c,218 :: 		
0x0742	0xDD57      	RCALL       __Lib_Mmc_Mmc_DeSelect
;__Lib_Mmc.c,220 :: 		
0x0744	0x0104      	MOVLB       4
0x0746	0x514F      	MOVF        Mmc_Init_response_L0, 0, 1
0x0748	0x0A00      	XORLW       0
0x074A	0xE003      	BZ          L_Mmc_Init28
;__Lib_Mmc.c,221 :: 		
0x074C	0x0E03      	MOVLW       3
0x074E	0x6E00      	MOVWF       R0 
0x0750	0xD001      	BRA         L_end_Mmc_Init
L_Mmc_Init28:
;__Lib_Mmc.c,222 :: 		
L_Mmc_Init27:
;__Lib_Mmc.c,224 :: 		
0x0752	0x6A00      	CLRF        R0 
;__Lib_Mmc.c,225 :: 		
L_end_Mmc_Init:
0x0754	0x0012      	RETURN      0
; end of _Mmc_Init
_timer1Config:
;soundrec.c,480 :: 		void timer1Config(void)
;soundrec.c,482 :: 		PIE1 = (1 << TMR1IE);
0x0756	0x0E01      	MOVLW       1
0x0758	0x6E9D      	MOVWF       PIE1 
;soundrec.c,484 :: 		if (samplingRate == _16KHZ) {
0x075A	0x5025      	MOVF        soundrec_samplingRate, 0 
0x075C	0x0A00      	XORLW       0
0x075E	0xE105      	BNZ         L_timer1Config65
;soundrec.c,485 :: 		timerH = _16KHZ_HIGHBYTE;
0x0760	0x0EFE      	MOVLW       254
0x0762	0x6E26      	MOVWF       soundrec_timerH 
;soundrec.c,486 :: 		timerL = _16KHZ_LOWBYTE;
0x0764	0x0EC7      	MOVLW       199
0x0766	0x6E1B      	MOVWF       soundrec_timerL 
;soundrec.c,487 :: 		}
0x0768	0xD007      	BRA         L_timer1Config66
L_timer1Config65:
;soundrec.c,488 :: 		else if (samplingRate == _8KHZ) {
0x076A	0x5025      	MOVF        soundrec_samplingRate, 0 
0x076C	0x0A01      	XORLW       1
0x076E	0xE104      	BNZ         L_timer1Config67
;soundrec.c,489 :: 		timerH = _8KHZ_HIGHBYTE;
0x0770	0x0EFD      	MOVLW       253
0x0772	0x6E26      	MOVWF       soundrec_timerH 
;soundrec.c,490 :: 		timerL = _8KHZ_LOWBYTE;
0x0774	0x0E8E      	MOVLW       142
0x0776	0x6E1B      	MOVWF       soundrec_timerL 
;soundrec.c,491 :: 		}
L_timer1Config67:
L_timer1Config66:
;soundrec.c,493 :: 		TMR1H = timerH;
0x0778	0xFFCFC026  	MOVFF       soundrec_timerH, TMR1H
;soundrec.c,494 :: 		TMR1L = timerL;
0x077C	0xFFCEC01B  	MOVFF       soundrec_timerL, TMR1L
;soundrec.c,495 :: 		}
L_end_timer1Config:
0x0780	0x0012      	RETURN      0
; end of _timer1Config
_Mmc_Read_Sector:
;__Lib_Mmc.c,231 :: 		
;__Lib_Mmc.c,236 :: 		
0x0782	0xDCF6      	RCALL       __Lib_Mmc_Mmc_Select
;__Lib_Mmc.c,238 :: 		
0x0784	0x0E00      	MOVLW       0
0x0786	0x0A00      	XORLW       0
0x0788	0xE102      	BNZ         L__Mmc_Read_Sector90
0x078A	0x0E04      	MOVLW       4
0x078C	0x181C      	XORWF       __Lib_Mmc_cardType, 0 
L__Mmc_Read_Sector90:
0x078E	0xE109      	BNZ         L_Mmc_Read_Sector29
;__Lib_Mmc.c,239 :: 		
0x0790	0xF455C44D  	MOVFF       FARG_Mmc_Read_Sector_sector, Mmc_Read_Sector_byte_start_L0
0x0794	0xF456C44E  	MOVFF       FARG_Mmc_Read_Sector_sector+1, Mmc_Read_Sector_byte_start_L0+1
0x0798	0xF457C44F  	MOVFF       FARG_Mmc_Read_Sector_sector+2, Mmc_Read_Sector_byte_start_L0+2
0x079C	0xF458C450  	MOVFF       FARG_Mmc_Read_Sector_sector+3, Mmc_Read_Sector_byte_start_L0+3
0x07A0	0xD014      	BRA         L_Mmc_Read_Sector30
L_Mmc_Read_Sector29:
;__Lib_Mmc.c,241 :: 		
0x07A2	0x0E09      	MOVLW       9
0x07A4	0x6E00      	MOVWF       R0 
0x07A6	0xF455C44D  	MOVFF       FARG_Mmc_Read_Sector_sector, Mmc_Read_Sector_byte_start_L0
0x07AA	0xF456C44E  	MOVFF       FARG_Mmc_Read_Sector_sector+1, Mmc_Read_Sector_byte_start_L0+1
0x07AE	0xF457C44F  	MOVFF       FARG_Mmc_Read_Sector_sector+2, Mmc_Read_Sector_byte_start_L0+2
0x07B2	0xF458C450  	MOVFF       FARG_Mmc_Read_Sector_sector+3, Mmc_Read_Sector_byte_start_L0+3
0x07B6	0x5000      	MOVF        R0, 0 
L__Mmc_Read_Sector91:
0x07B8	0xE008      	BZ          L__Mmc_Read_Sector92
0x07BA	0x0104      	MOVLB       4
0x07BC	0x3755      	RLCF        Mmc_Read_Sector_byte_start_L0, 1, 1
0x07BE	0x9155      	BCF         Mmc_Read_Sector_byte_start_L0, 0, 1
0x07C0	0x3756      	RLCF        Mmc_Read_Sector_byte_start_L0+1, 1, 1
0x07C2	0x3757      	RLCF        Mmc_Read_Sector_byte_start_L0+2, 1, 1
0x07C4	0x3758      	RLCF        Mmc_Read_Sector_byte_start_L0+3, 1, 1
0x07C6	0x0FFF      	ADDLW       255
0x07C8	0xD7F7      	BRA         L__Mmc_Read_Sector91
L__Mmc_Read_Sector92:
L_Mmc_Read_Sector30:
0x07CA	0x0104      	MOVLB       4
;__Lib_Mmc.c,244 :: 		
0x07CC	0x0E11      	MOVLW       17
0x07CE	0x6F60      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_partial_cmm, 1
0x07D0	0xF461C455  	MOVFF       Mmc_Read_Sector_byte_start_L0, FARG___Lib_Mmc_Mmc_Send_Command_content
0x07D4	0xF462C456  	MOVFF       Mmc_Read_Sector_byte_start_L0+1, FARG___Lib_Mmc_Mmc_Send_Command_content+1
0x07D8	0xF463C457  	MOVFF       Mmc_Read_Sector_byte_start_L0+2, FARG___Lib_Mmc_Mmc_Send_Command_content+2
0x07DC	0xF464C458  	MOVFF       Mmc_Read_Sector_byte_start_L0+3, FARG___Lib_Mmc_Mmc_Send_Command_content+3
0x07E0	0x0EFF      	MOVLW       255
0x07E2	0x6F65      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_crc, 1
0x07E4	0xDD13      	RCALL       __Lib_Mmc_Mmc_Send_Command
;__Lib_Mmc.c,245 :: 		
0x07E6	0x5200      	MOVF        R0, 1 
0x07E8	0xE004      	BZ          L_Mmc_Read_Sector31
;__Lib_Mmc.c,247 :: 		
0x07EA	0xDD03      	RCALL       __Lib_Mmc_Mmc_DeSelect
;__Lib_Mmc.c,248 :: 		
0x07EC	0x0E01      	MOVLW       1
0x07EE	0x6E00      	MOVWF       R0 
0x07F0	0xD04B      	BRA         L_end_Mmc_Read_Sector
;__Lib_Mmc.c,249 :: 		
L_Mmc_Read_Sector31:
;__Lib_Mmc.c,251 :: 		
L_Mmc_Read_Sector32:
0x07F2	0xFFE1C03D  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x07F6	0xFFE2C03E  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x07FA	0x0EFF      	MOVLW       255
0x07FC	0x6EE6      	MOVWF       POSTINC1 
0x07FE	0xF000C03B  	MOVFF       _SPI_Rd_Ptr, R0
0x0802	0xF001C03C  	MOVFF       _SPI_Rd_Ptr+1, R1
0x0806	0xDCA8      	RCALL       _____DoIFC
0x0808	0x5000      	MOVF        R0, 0 
0x080A	0x0AFE      	XORLW       254
0x080C	0xE001      	BZ          L_Mmc_Read_Sector33
;__Lib_Mmc.c,252 :: 		
0x080E	0xD7F1      	BRA         L_Mmc_Read_Sector32
L_Mmc_Read_Sector33:
;__Lib_Mmc.c,255 :: 		
0x0810	0x0104      	MOVLB       4
0x0812	0x6B53      	CLRF        Mmc_Read_Sector_i_L0, 1
0x0814	0x6B54      	CLRF        Mmc_Read_Sector_i_L0+1, 1
L_Mmc_Read_Sector34:
0x0816	0x0E02      	MOVLW       2
0x0818	0x5D54      	SUBWF       Mmc_Read_Sector_i_L0+1, 0, 1
0x081A	0xE102      	BNZ         L__Mmc_Read_Sector93
0x081C	0x0E00      	MOVLW       0
0x081E	0x5D53      	SUBWF       Mmc_Read_Sector_i_L0, 0, 1
L__Mmc_Read_Sector93:
0x0820	0xE21B      	BC          L_Mmc_Read_Sector35
;__Lib_Mmc.c,257 :: 		
0x0822	0x5153      	MOVF        Mmc_Read_Sector_i_L0, 0, 1
0x0824	0x2551      	ADDWF       FARG_Mmc_Read_Sector_dbuff, 0, 1
0x0826	0x6F59      	MOVWF       FLOC__Mmc_Read_Sector, 1
0x0828	0x5154      	MOVF        Mmc_Read_Sector_i_L0+1, 0, 1
0x082A	0x2152      	ADDWFC      FARG_Mmc_Read_Sector_dbuff+1, 0, 1
0x082C	0x6F5A      	MOVWF       FLOC__Mmc_Read_Sector+1, 1
0x082E	0xFFE1C03D  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x0832	0xFFE2C03E  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x0836	0x0EFF      	MOVLW       255
0x0838	0x6EE6      	MOVWF       POSTINC1 
0x083A	0xF000C03B  	MOVFF       _SPI_Rd_Ptr, R0
0x083E	0xF001C03C  	MOVFF       _SPI_Rd_Ptr+1, R1
0x0842	0xDC8A      	RCALL       _____DoIFC
0x0844	0xFFE1C459  	MOVFF       FLOC__Mmc_Read_Sector, FSR1L
0x0848	0xFFE2C45A  	MOVFF       FLOC__Mmc_Read_Sector+1, FSR1H
0x084C	0xFFE6C000  	MOVFF       R0, POSTINC1
;__Lib_Mmc.c,255 :: 		
0x0850	0x0104      	MOVLB       4
0x0852	0x4B53      	INFSNZ      Mmc_Read_Sector_i_L0, 1, 1
0x0854	0x2B54      	INCF        Mmc_Read_Sector_i_L0+1, 1, 1
;__Lib_Mmc.c,258 :: 		
0x0856	0xD7DF      	BRA         L_Mmc_Read_Sector34
L_Mmc_Read_Sector35:
;__Lib_Mmc.c,261 :: 		
0x0858	0xFFE1C03D  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x085C	0xFFE2C03E  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x0860	0x0EFF      	MOVLW       255
0x0862	0x6EE6      	MOVWF       POSTINC1 
0x0864	0xF000C03B  	MOVFF       _SPI_Rd_Ptr, R0
0x0868	0xF001C03C  	MOVFF       _SPI_Rd_Ptr+1, R1
0x086C	0xDC75      	RCALL       _____DoIFC
;__Lib_Mmc.c,262 :: 		
0x086E	0xFFE1C03D  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x0872	0xFFE2C03E  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x0876	0x0EFF      	MOVLW       255
0x0878	0x6EE6      	MOVWF       POSTINC1 
0x087A	0xF000C03B  	MOVFF       _SPI_Rd_Ptr, R0
0x087E	0xF001C03C  	MOVFF       _SPI_Rd_Ptr+1, R1
0x0882	0xDC6A      	RCALL       _____DoIFC
;__Lib_Mmc.c,264 :: 		
0x0884	0xDCB6      	RCALL       __Lib_Mmc_Mmc_DeSelect
;__Lib_Mmc.c,267 :: 		
0x0886	0x6A00      	CLRF        R0 
;__Lib_Mmc.c,268 :: 		
L_end_Mmc_Read_Sector:
0x0888	0x0012      	RETURN      0
; end of _Mmc_Read_Sector
_Mmc_Write_Sector:
;__Lib_Mmc.c,276 :: 		
;__Lib_Mmc.c,280 :: 		
0x088A	0xDC72      	RCALL       __Lib_Mmc_Mmc_Select
;__Lib_Mmc.c,282 :: 		
0x088C	0x0E00      	MOVLW       0
0x088E	0x0A00      	XORLW       0
0x0890	0xE102      	BNZ         L__Mmc_Write_Sector95
0x0892	0x0E04      	MOVLW       4
0x0894	0x181C      	XORWF       __Lib_Mmc_cardType, 0 
L__Mmc_Write_Sector95:
0x0896	0xE109      	BNZ         L_Mmc_Write_Sector37
;__Lib_Mmc.c,283 :: 		
0x0898	0xF455C44D  	MOVFF       FARG_Mmc_Write_Sector_sector, Mmc_Write_Sector_byte_start_L0
0x089C	0xF456C44E  	MOVFF       FARG_Mmc_Write_Sector_sector+1, Mmc_Write_Sector_byte_start_L0+1
0x08A0	0xF457C44F  	MOVFF       FARG_Mmc_Write_Sector_sector+2, Mmc_Write_Sector_byte_start_L0+2
0x08A4	0xF458C450  	MOVFF       FARG_Mmc_Write_Sector_sector+3, Mmc_Write_Sector_byte_start_L0+3
0x08A8	0xD014      	BRA         L_Mmc_Write_Sector38
L_Mmc_Write_Sector37:
;__Lib_Mmc.c,285 :: 		
0x08AA	0x0E09      	MOVLW       9
0x08AC	0x6E00      	MOVWF       R0 
0x08AE	0xF455C44D  	MOVFF       FARG_Mmc_Write_Sector_sector, Mmc_Write_Sector_byte_start_L0
0x08B2	0xF456C44E  	MOVFF       FARG_Mmc_Write_Sector_sector+1, Mmc_Write_Sector_byte_start_L0+1
0x08B6	0xF457C44F  	MOVFF       FARG_Mmc_Write_Sector_sector+2, Mmc_Write_Sector_byte_start_L0+2
0x08BA	0xF458C450  	MOVFF       FARG_Mmc_Write_Sector_sector+3, Mmc_Write_Sector_byte_start_L0+3
0x08BE	0x5000      	MOVF        R0, 0 
L__Mmc_Write_Sector96:
0x08C0	0xE008      	BZ          L__Mmc_Write_Sector97
0x08C2	0x0104      	MOVLB       4
0x08C4	0x3755      	RLCF        Mmc_Write_Sector_byte_start_L0, 1, 1
0x08C6	0x9155      	BCF         Mmc_Write_Sector_byte_start_L0, 0, 1
0x08C8	0x3756      	RLCF        Mmc_Write_Sector_byte_start_L0+1, 1, 1
0x08CA	0x3757      	RLCF        Mmc_Write_Sector_byte_start_L0+2, 1, 1
0x08CC	0x3758      	RLCF        Mmc_Write_Sector_byte_start_L0+3, 1, 1
0x08CE	0x0FFF      	ADDLW       255
0x08D0	0xD7F7      	BRA         L__Mmc_Write_Sector96
L__Mmc_Write_Sector97:
L_Mmc_Write_Sector38:
0x08D2	0x0104      	MOVLB       4
;__Lib_Mmc.c,288 :: 		
0x08D4	0x0E18      	MOVLW       24
0x08D6	0x6F60      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_partial_cmm, 1
0x08D8	0xF461C455  	MOVFF       Mmc_Write_Sector_byte_start_L0, FARG___Lib_Mmc_Mmc_Send_Command_content
0x08DC	0xF462C456  	MOVFF       Mmc_Write_Sector_byte_start_L0+1, FARG___Lib_Mmc_Mmc_Send_Command_content+1
0x08E0	0xF463C457  	MOVFF       Mmc_Write_Sector_byte_start_L0+2, FARG___Lib_Mmc_Mmc_Send_Command_content+2
0x08E4	0xF464C458  	MOVFF       Mmc_Write_Sector_byte_start_L0+3, FARG___Lib_Mmc_Mmc_Send_Command_content+3
0x08E8	0x0EFF      	MOVLW       255
0x08EA	0x6F65      	MOVWF       FARG___Lib_Mmc_Mmc_Send_Command_crc, 1
0x08EC	0xDC8F      	RCALL       __Lib_Mmc_Mmc_Send_Command
0x08EE	0x5200      	MOVF        R0, 1 
0x08F0	0xE004      	BZ          L_Mmc_Write_Sector39
;__Lib_Mmc.c,290 :: 		
0x08F2	0xDC7F      	RCALL       __Lib_Mmc_Mmc_DeSelect
;__Lib_Mmc.c,291 :: 		
0x08F4	0x0E01      	MOVLW       1
0x08F6	0x6E00      	MOVWF       R0 
0x08F8	0xD091      	BRA         L_end_Mmc_Write_Sector
;__Lib_Mmc.c,292 :: 		
L_Mmc_Write_Sector39:
;__Lib_Mmc.c,296 :: 		
0x08FA	0xFFE1C03D  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x08FE	0xFFE2C03E  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x0902	0x0EFF      	MOVLW       255
0x0904	0x6EE6      	MOVWF       POSTINC1 
0x0906	0xF000C03B  	MOVFF       _SPI_Rd_Ptr, R0
0x090A	0xF001C03C  	MOVFF       _SPI_Rd_Ptr+1, R1
0x090E	0xDC24      	RCALL       _____DoIFC
;__Lib_Mmc.c,297 :: 		
0x0910	0xFFE1C03D  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x0914	0xFFE2C03E  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x0918	0x0EFF      	MOVLW       255
0x091A	0x6EE6      	MOVWF       POSTINC1 
0x091C	0xF000C03B  	MOVFF       _SPI_Rd_Ptr, R0
0x0920	0xF001C03C  	MOVFF       _SPI_Rd_Ptr+1, R1
0x0924	0xDC19      	RCALL       _____DoIFC
;__Lib_Mmc.c,300 :: 		
0x0926	0xFFE1C03D  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x092A	0xFFE2C03E  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x092E	0x0EFE      	MOVLW       254
0x0930	0x6EE6      	MOVWF       POSTINC1 
0x0932	0xF000C03B  	MOVFF       _SPI_Rd_Ptr, R0
0x0936	0xF001C03C  	MOVFF       _SPI_Rd_Ptr+1, R1
0x093A	0xDC0E      	RCALL       _____DoIFC
;__Lib_Mmc.c,303 :: 		
0x093C	0x0104      	MOVLB       4
0x093E	0x6B53      	CLRF        Mmc_Write_Sector_i_L0, 1
0x0940	0x6B54      	CLRF        Mmc_Write_Sector_i_L0+1, 1
L_Mmc_Write_Sector40:
0x0942	0x5154      	MOVF        Mmc_Write_Sector_i_L0+1, 0, 1
0x0944	0x0801      	SUBLW       1
0x0946	0xE102      	BNZ         L__Mmc_Write_Sector98
0x0948	0x5153      	MOVF        Mmc_Write_Sector_i_L0, 0, 1
0x094A	0x08FF      	SUBLW       255
L__Mmc_Write_Sector98:
0x094C	0xE316      	BNC         L_Mmc_Write_Sector41
;__Lib_Mmc.c,304 :: 		
0x094E	0x5153      	MOVF        Mmc_Write_Sector_i_L0, 0, 1
0x0950	0x2551      	ADDWF       FARG_Mmc_Write_Sector_dbuff, 0, 1
0x0952	0x6EE9      	MOVWF       FSR0L 
0x0954	0x5154      	MOVF        Mmc_Write_Sector_i_L0+1, 0, 1
0x0956	0x2152      	ADDWFC      FARG_Mmc_Write_Sector_dbuff+1, 0, 1
0x0958	0x6EEA      	MOVWF       FSR0H 
0x095A	0xFFE1C03D  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x095E	0xFFE2C03E  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x0962	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x0966	0xF000C03B  	MOVFF       _SPI_Rd_Ptr, R0
0x096A	0xF001C03C  	MOVFF       _SPI_Rd_Ptr+1, R1
0x096E	0xF000ECAC  	CALL        _____DoIFC, 0
;__Lib_Mmc.c,303 :: 		
0x0972	0x0104      	MOVLB       4
0x0974	0x4B53      	INFSNZ      Mmc_Write_Sector_i_L0, 1, 1
0x0976	0x2B54      	INCF        Mmc_Write_Sector_i_L0+1, 1, 1
;__Lib_Mmc.c,305 :: 		
0x0978	0xD7E4      	BRA         L_Mmc_Write_Sector40
L_Mmc_Write_Sector41:
;__Lib_Mmc.c,308 :: 		
0x097A	0xFFE1C03D  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x097E	0xFFE2C03E  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x0982	0x0EFF      	MOVLW       255
0x0984	0x6EE6      	MOVWF       POSTINC1 
0x0986	0xF000C03B  	MOVFF       _SPI_Rd_Ptr, R0
0x098A	0xF001C03C  	MOVFF       _SPI_Rd_Ptr+1, R1
0x098E	0xF000ECAC  	CALL        _____DoIFC, 0
;__Lib_Mmc.c,309 :: 		
0x0992	0xFFE1C03D  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x0996	0xFFE2C03E  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x099A	0x0EFF      	MOVLW       255
0x099C	0x6EE6      	MOVWF       POSTINC1 
0x099E	0xF000C03B  	MOVFF       _SPI_Rd_Ptr, R0
0x09A2	0xF001C03C  	MOVFF       _SPI_Rd_Ptr+1, R1
0x09A6	0xF000ECAC  	CALL        _____DoIFC, 0
;__Lib_Mmc.c,312 :: 		
0x09AA	0xFFE1C03D  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x09AE	0xFFE2C03E  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x09B2	0x0EFF      	MOVLW       255
0x09B4	0x6EE6      	MOVWF       POSTINC1 
0x09B6	0xF000C03B  	MOVFF       _SPI_Rd_Ptr, R0
0x09BA	0xF001C03C  	MOVFF       _SPI_Rd_Ptr+1, R1
0x09BE	0xF000ECAC  	CALL        _____DoIFC, 0
0x09C2	0xF453C000  	MOVFF       R0, Mmc_Write_Sector_i_L0
0x09C6	0x0E00      	MOVLW       0
0x09C8	0x0104      	MOVLB       4
0x09CA	0x6F54      	MOVWF       Mmc_Write_Sector_i_L0+1, 1
;__Lib_Mmc.c,313 :: 		
0x09CC	0x0E1F      	MOVLW       31
0x09CE	0x1553      	ANDWF       Mmc_Write_Sector_i_L0, 0, 1
0x09D0	0x6E01      	MOVWF       R1 
0x09D2	0xF002C454  	MOVFF       Mmc_Write_Sector_i_L0+1, R2
0x09D6	0x0E00      	MOVLW       0
0x09D8	0x1602      	ANDWF       R2, 1 
0x09DA	0xF453C001  	MOVFF       R1, Mmc_Write_Sector_i_L0
0x09DE	0xF454C002  	MOVFF       R2, Mmc_Write_Sector_i_L0+1
;__Lib_Mmc.c,314 :: 		
0x09E2	0x0E00      	MOVLW       0
0x09E4	0x1802      	XORWF       R2, 0 
0x09E6	0xE102      	BNZ         L__Mmc_Write_Sector99
0x09E8	0x0E05      	MOVLW       5
0x09EA	0x1801      	XORWF       R1, 0 
L__Mmc_Write_Sector99:
0x09EC	0xE004      	BZ          L_Mmc_Write_Sector43
;__Lib_Mmc.c,316 :: 		
0x09EE	0xDC01      	RCALL       __Lib_Mmc_Mmc_DeSelect
;__Lib_Mmc.c,317 :: 		
0x09F0	0x0E02      	MOVLW       2
0x09F2	0x6E00      	MOVWF       R0 
0x09F4	0xD013      	BRA         L_end_Mmc_Write_Sector
;__Lib_Mmc.c,318 :: 		
L_Mmc_Write_Sector43:
;__Lib_Mmc.c,320 :: 		
L_Mmc_Write_Sector44:
0x09F6	0xFFE1C03D  	MOVFF       _SPI_Rd_Ptr+2, FSR1L
0x09FA	0xFFE2C03E  	MOVFF       _SPI_Rd_Ptr+3, FSR1H
0x09FE	0x0EFF      	MOVLW       255
0x0A00	0x6EE6      	MOVWF       POSTINC1 
0x0A02	0xF000C03B  	MOVFF       _SPI_Rd_Ptr, R0
0x0A06	0xF001C03C  	MOVFF       _SPI_Rd_Ptr+1, R1
0x0A0A	0xF000ECAC  	CALL        _____DoIFC, 0
0x0A0E	0x5000      	MOVF        R0, 0 
0x0A10	0x0AFF      	XORLW       255
0x0A12	0xE001      	BZ          L_Mmc_Write_Sector45
;__Lib_Mmc.c,321 :: 		
0x0A14	0xD7F0      	BRA         L_Mmc_Write_Sector44
L_Mmc_Write_Sector45:
;__Lib_Mmc.c,323 :: 		
0x0A16	0xF000ECF9  	CALL        __Lib_Mmc_Mmc_DeSelect, 0
;__Lib_Mmc.c,326 :: 		
0x0A1A	0x6A00      	CLRF        R0 
;__Lib_Mmc.c,327 :: 		
L_end_Mmc_Write_Sector:
0x0A1C	0x0012      	RETURN      0
; end of _Mmc_Write_Sector
_main:
0x0A1E	0xF007ECFF  	CALL        4094, 0
;soundrec.c,144 :: 		void main()
;soundrec.c,153 :: 		ptrIndex = 0;
0x0A22	0x6A3F      	CLRF        soundrec_ptrIndex 
0x0A24	0x6A40      	CLRF        soundrec_ptrIndex+1 
;soundrec.c,154 :: 		currentBuffer = 0;
0x0A26	0x6A46      	CLRF        _currentBuffer 
;soundrec.c,155 :: 		bufferFull = 0;
0x0A28	0x6A29      	CLRF        _bufferFull 
;soundrec.c,156 :: 		mode = 0;
0x0A2A	0x6A28      	CLRF        _mode 
;soundrec.c,157 :: 		adcResult = 0;
0x0A2C	0x6A27      	CLRF        _adcResult 
;soundrec.c,160 :: 		INTCON2 &= ~(1 << 7); // nRBPU = 0
0x0A2E	0x0E7F      	MOVLW       127
0x0A30	0x16F1      	ANDWF       INTCON2, 1 
;soundrec.c,162 :: 		ptr = &buffer0[0];
0x0A32	0x0E47      	MOVLW       _buffer0
0x0A34	0x6E2A      	MOVWF       soundrec_ptr 
0x0A36	0x0E00      	MOVLW       hi_addr(_buffer0)
0x0A38	0x6E2B      	MOVWF       soundrec_ptr+1 
;soundrec.c,163 :: 		adcInit();
0x0A3A	0xDD6E      	RCALL       _adcInit
;soundrec.c,164 :: 		Delay_ms(100);
0x0A3C	0x0E03      	MOVLW       3
0x0A3E	0x6E0B      	MOVWF       R11, 0
0x0A40	0x0E8A      	MOVLW       138
0x0A42	0x6E0C      	MOVWF       R12, 0
0x0A44	0x0E55      	MOVLW       85
0x0A46	0x6E0D      	MOVWF       R13, 0
L_main3:
0x0A48	0x2E0D      	DECFSZ      R13, 1, 0
0x0A4A	0xD7FE      	BRA         L_main3
0x0A4C	0x2E0C      	DECFSZ      R12, 1, 0
0x0A4E	0xD7FC      	BRA         L_main3
0x0A50	0x2E0B      	DECFSZ      R11, 1, 0
0x0A52	0xD7FA      	BRA         L_main3
0x0A54	0x0000      	NOP
0x0A56	0x0000      	NOP
;soundrec.c,168 :: 		TRISD = 0x00; 							// Output for DAC0808
0x0A58	0x6A95      	CLRF        TRISD 
;soundrec.c,169 :: 		TRISB = (1 << RB0) | (1 << RB1); 		// B0, B1 input; remains output
0x0A5A	0x0E03      	MOVLW       3
0x0A5C	0x6E93      	MOVWF       TRISB 
;soundrec.c,170 :: 		TRISC &= ~((1 << 2) | (1 << 6)); 					// Output for CS pin
0x0A5E	0x0EBB      	MOVLW       187
0x0A60	0x1694      	ANDWF       TRISC, 1 
;soundrec.c,173 :: 		LATD = 0x40;
0x0A62	0x0E40      	MOVLW       64
0x0A64	0x6E8C      	MOVWF       LATD 
;soundrec.c,176 :: 		Lcd_Init();								// Init LCD for display
0x0A66	0xDD5E      	RCALL       _Lcd_Init
;soundrec.c,177 :: 		Lcd_Cmd(_LCD_CLEAR);
0x0A68	0x0E01      	MOVLW       1
0x0A6A	0x0104      	MOVLB       4
0x0A6C	0x6F60      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0A6E	0xF000ECBA  	CALL        _Lcd_Cmd, 0
;soundrec.c,178 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);
0x0A72	0x0E0C      	MOVLW       12
0x0A74	0x6F60      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0A76	0xF000ECBA  	CALL        _Lcd_Cmd, 0
;soundrec.c,179 :: 		Lcd_Out(1, 2, codeToRam(lcd_welcome));
0x0A7A	0x0E96      	MOVLW       _lcd_welcome
0x0A7C	0x6F4D      	MOVWF       FARG_codeToRam_ctxt, 1
0x0A7E	0x0E0F      	MOVLW       hi_addr(_lcd_welcome)
0x0A80	0x6F4E      	MOVWF       FARG_codeToRam_ctxt+1, 1
0x0A82	0x0E00      	MOVLW       higher_addr(_lcd_welcome)
0x0A84	0x6F4F      	MOVWF       FARG_codeToRam_ctxt+2, 1
0x0A86	0xDD17      	RCALL       _codeToRam
0x0A88	0xF44FC000  	MOVFF       R0, FARG_Lcd_Out_text
0x0A8C	0xF450C001  	MOVFF       R1, FARG_Lcd_Out_text+1
0x0A90	0x0E01      	MOVLW       1
0x0A92	0x6F4D      	MOVWF       FARG_Lcd_Out_row, 1
0x0A94	0x0E02      	MOVLW       2
0x0A96	0x6F4E      	MOVWF       FARG_Lcd_Out_column, 1
0x0A98	0xDCCF      	RCALL       _Lcd_Out
;soundrec.c,185 :: 		_SPI_CLK_IDLE_LOW, _SPI_LOW_2_HIGH);
0x0A9A	0x0E02      	MOVLW       2
0x0A9C	0x6F4D      	MOVWF       FARG_SPI1_Init_Advanced_master, 1
0x0A9E	0x6B4E      	CLRF        FARG_SPI1_Init_Advanced_data_sample, 1
0x0AA0	0x6B4F      	CLRF        FARG_SPI1_Init_Advanced_clock_idle, 1
0x0AA2	0x0E01      	MOVLW       1
0x0AA4	0x6F50      	MOVWF       FARG_SPI1_Init_Advanced_transmit_edge, 1
0x0AA6	0xDD89      	RCALL       _SPI1_Init_Advanced
;soundrec.c,188 :: 		while (MMC_Init() != 0)
L_main4:
0x0AA8	0xDDB4      	RCALL       _Mmc_Init
0x0AAA	0x5000      	MOVF        R0, 0 
0x0AAC	0x0A00      	XORLW       0
0x0AAE	0xE001      	BZ          L_main5
;soundrec.c,190 :: 		}
0x0AB0	0xD7FB      	BRA         L_main4
L_main5:
;soundrec.c,194 :: 		_SPI_CLK_IDLE_LOW, _SPI_LOW_2_HIGH);
0x0AB2	0x6B4D      	CLRF        FARG_SPI1_Init_Advanced_master, 1
0x0AB4	0x6B4E      	CLRF        FARG_SPI1_Init_Advanced_data_sample, 1
0x0AB6	0x6B4F      	CLRF        FARG_SPI1_Init_Advanced_clock_idle, 1
0x0AB8	0x0E01      	MOVLW       1
0x0ABA	0x6F50      	MOVWF       FARG_SPI1_Init_Advanced_transmit_edge, 1
0x0ABC	0xDD7E      	RCALL       _SPI1_Init_Advanced
;soundrec.c,198 :: 		INTCON |= (1 << GIE) | (1 << PEIE);		/* Global interrupt */
0x0ABE	0x0EC0      	MOVLW       192
0x0AC0	0x12F2      	IORWF       INTCON, 1 
;soundrec.c,200 :: 		for (;;)        						/* Repeat forever */
L_main6:
;soundrec.c,202 :: 		while (SLCT != 0){
L_main9:
0x0AC2	0xA081      	BTFSS       RB0_bit, BitPos(RB0_bit+0) 
0x0AC4	0xD001      	BRA         L_main10
;soundrec.c,203 :: 		}
0x0AC6	0xD7FD      	BRA         L_main9
L_main10:
0x0AC8	0x0104      	MOVLB       4
;soundrec.c,206 :: 		Lcd_Cmd(_LCD_CLEAR);               		// Clear display
0x0ACA	0x0E01      	MOVLW       1
0x0ACC	0x6F60      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0ACE	0xF000ECBA  	CALL        _Lcd_Cmd, 0
;soundrec.c,209 :: 		while (OK)	/* OK not pressed */
L_main11:
0x0AD2	0xA281      	BTFSS       RB1_bit, BitPos(RB1_bit+0) 
0x0AD4	0xD089      	BRA         L_main12
;soundrec.c,211 :: 		if (!SLCT)	/* SLCT */
0x0AD6	0xB081      	BTFSC       RB0_bit, BitPos(RB0_bit+0) 
0x0AD8	0xD018      	BRA         L_main13
;soundrec.c,213 :: 		Delay_ms(300);
0x0ADA	0x0E08      	MOVLW       8
0x0ADC	0x6E0B      	MOVWF       R11, 0
0x0ADE	0x0E9D      	MOVLW       157
0x0AE0	0x6E0C      	MOVWF       R12, 0
0x0AE2	0x0E05      	MOVLW       5
0x0AE4	0x6E0D      	MOVWF       R13, 0
L_main14:
0x0AE6	0x2E0D      	DECFSZ      R13, 1, 0
0x0AE8	0xD7FE      	BRA         L_main14
0x0AEA	0x2E0C      	DECFSZ      R12, 1, 0
0x0AEC	0xD7FC      	BRA         L_main14
0x0AEE	0x2E0B      	DECFSZ      R11, 1, 0
0x0AF0	0xD7FA      	BRA         L_main14
0x0AF2	0x0000      	NOP
0x0AF4	0x0000      	NOP
;soundrec.c,214 :: 		mode++;
0x0AF6	0x5028      	MOVF        _mode, 0 
0x0AF8	0x0F01      	ADDLW       1
0x0AFA	0x6E00      	MOVWF       R0 
0x0AFC	0xF028C000  	MOVFF       R0, _mode
;soundrec.c,215 :: 		if (mode == 4)
0x0B00	0x5028      	MOVF        _mode, 0 
0x0B02	0x0A04      	XORLW       4
0x0B04	0xE102      	BNZ         L_main15
;soundrec.c,217 :: 		mode = 1;
0x0B06	0x0E01      	MOVLW       1
0x0B08	0x6E28      	MOVWF       _mode 
;soundrec.c,218 :: 		}
L_main15:
;soundrec.c,219 :: 		}
L_main13:
0x0B0A	0x0104      	MOVLB       4
;soundrec.c,221 :: 		if ((mode == 1) & (lastMode != mode))
0x0B0C	0x5028      	MOVF        _mode, 0 
0x0B0E	0x0A01      	XORLW       1
0x0B10	0x0E01      	MOVLW       1
0x0B12	0xA4D8      	BTFSS       STATUS, 2 
0x0B14	0x0E00      	MOVLW       0
0x0B16	0x6E01      	MOVWF       R1 
0x0B18	0x5147      	MOVF        main_lastMode_L0, 0, 1
0x0B1A	0x1828      	XORWF       _mode, 0 
0x0B1C	0x0E00      	MOVLW       0
0x0B1E	0xA4D8      	BTFSS       STATUS, 2 
0x0B20	0x0E01      	MOVLW       1
0x0B22	0x6E00      	MOVWF       R0 
0x0B24	0x5001      	MOVF        R1, 0 
0x0B26	0x1600      	ANDWF       R0, 1 
0x0B28	0xE015      	BZ          L_main16
;soundrec.c,223 :: 		lcdClear();
0x0B2A	0x0E01      	MOVLW       1
0x0B2C	0x6F60      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0B2E	0xF000ECBA  	CALL        _Lcd_Cmd, 0
;soundrec.c,224 :: 		lcdDisplay(1, 2, codeToRam(lcd_record));
0x0B32	0x0ED7      	MOVLW       _lcd_record
0x0B34	0x6F4D      	MOVWF       FARG_codeToRam_ctxt, 1
0x0B36	0x0E0F      	MOVLW       hi_addr(_lcd_record)
0x0B38	0x6F4E      	MOVWF       FARG_codeToRam_ctxt+1, 1
0x0B3A	0x0E00      	MOVLW       higher_addr(_lcd_record)
0x0B3C	0x6F4F      	MOVWF       FARG_codeToRam_ctxt+2, 1
0x0B3E	0xDCBB      	RCALL       _codeToRam
0x0B40	0xF44FC000  	MOVFF       R0, FARG_Lcd_Out_text
0x0B44	0xF450C001  	MOVFF       R1, FARG_Lcd_Out_text+1
0x0B48	0x0E01      	MOVLW       1
0x0B4A	0x6F4D      	MOVWF       FARG_Lcd_Out_row, 1
0x0B4C	0x0E02      	MOVLW       2
0x0B4E	0x6F4E      	MOVWF       FARG_Lcd_Out_column, 1
0x0B50	0xDC73      	RCALL       _Lcd_Out
;soundrec.c,225 :: 		}
0x0B52	0xD047      	BRA         L_main17
L_main16:
;soundrec.c,226 :: 		else if ((mode == 2) & (lastMode != mode))
0x0B54	0x5028      	MOVF        _mode, 0 
0x0B56	0x0A02      	XORLW       2
0x0B58	0x0E01      	MOVLW       1
0x0B5A	0xA4D8      	BTFSS       STATUS, 2 
0x0B5C	0x0E00      	MOVLW       0
0x0B5E	0x6E01      	MOVWF       R1 
0x0B60	0x5147      	MOVF        main_lastMode_L0, 0, 1
0x0B62	0x1828      	XORWF       _mode, 0 
0x0B64	0x0E00      	MOVLW       0
0x0B66	0xA4D8      	BTFSS       STATUS, 2 
0x0B68	0x0E01      	MOVLW       1
0x0B6A	0x6E00      	MOVWF       R0 
0x0B6C	0x5001      	MOVF        R1, 0 
0x0B6E	0x1600      	ANDWF       R0, 1 
0x0B70	0xE015      	BZ          L_main18
;soundrec.c,228 :: 		lcdClear();
0x0B72	0x0E01      	MOVLW       1
0x0B74	0x6F60      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0B76	0xF000ECBA  	CALL        _Lcd_Cmd, 0
;soundrec.c,229 :: 		lcdDisplay(1, 2, codeToRam(lcd_play));
0x0B7A	0x0EE8      	MOVLW       _lcd_play
0x0B7C	0x6F4D      	MOVWF       FARG_codeToRam_ctxt, 1
0x0B7E	0x0E0F      	MOVLW       hi_addr(_lcd_play)
0x0B80	0x6F4E      	MOVWF       FARG_codeToRam_ctxt+1, 1
0x0B82	0x0E00      	MOVLW       higher_addr(_lcd_play)
0x0B84	0x6F4F      	MOVWF       FARG_codeToRam_ctxt+2, 1
0x0B86	0xDC97      	RCALL       _codeToRam
0x0B88	0xF44FC000  	MOVFF       R0, FARG_Lcd_Out_text
0x0B8C	0xF450C001  	MOVFF       R1, FARG_Lcd_Out_text+1
0x0B90	0x0E01      	MOVLW       1
0x0B92	0x6F4D      	MOVWF       FARG_Lcd_Out_row, 1
0x0B94	0x0E02      	MOVLW       2
0x0B96	0x6F4E      	MOVWF       FARG_Lcd_Out_column, 1
0x0B98	0xDC4F      	RCALL       _Lcd_Out
;soundrec.c,230 :: 		}
0x0B9A	0xD023      	BRA         L_main19
L_main18:
;soundrec.c,231 :: 		else if ((mode == 3) & (lastMode != mode))
0x0B9C	0x5028      	MOVF        _mode, 0 
0x0B9E	0x0A03      	XORLW       3
0x0BA0	0x0E01      	MOVLW       1
0x0BA2	0xA4D8      	BTFSS       STATUS, 2 
0x0BA4	0x0E00      	MOVLW       0
0x0BA6	0x6E01      	MOVWF       R1 
0x0BA8	0x5147      	MOVF        main_lastMode_L0, 0, 1
0x0BAA	0x1828      	XORWF       _mode, 0 
0x0BAC	0x0E00      	MOVLW       0
0x0BAE	0xA4D8      	BTFSS       STATUS, 2 
0x0BB0	0x0E01      	MOVLW       1
0x0BB2	0x6E00      	MOVWF       R0 
0x0BB4	0x5001      	MOVF        R1, 0 
0x0BB6	0x1600      	ANDWF       R0, 1 
0x0BB8	0xE014      	BZ          L_main20
;soundrec.c,233 :: 		lcdClear();
0x0BBA	0x0E01      	MOVLW       1
0x0BBC	0x6F60      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0BBE	0xF000ECBA  	CALL        _Lcd_Cmd, 0
;soundrec.c,234 :: 		lcdDisplay(1, 2, codeToRam(lcd_sampleRate));
0x0BC2	0x0EA5      	MOVLW       _lcd_sampleRate
0x0BC4	0x6F4D      	MOVWF       FARG_codeToRam_ctxt, 1
0x0BC6	0x0E0F      	MOVLW       hi_addr(_lcd_sampleRate)
0x0BC8	0x6F4E      	MOVWF       FARG_codeToRam_ctxt+1, 1
0x0BCA	0x0E00      	MOVLW       higher_addr(_lcd_sampleRate)
0x0BCC	0x6F4F      	MOVWF       FARG_codeToRam_ctxt+2, 1
0x0BCE	0xDC73      	RCALL       _codeToRam
0x0BD0	0xF44FC000  	MOVFF       R0, FARG_Lcd_Out_text
0x0BD4	0xF450C001  	MOVFF       R1, FARG_Lcd_Out_text+1
0x0BD8	0x0E01      	MOVLW       1
0x0BDA	0x6F4D      	MOVWF       FARG_Lcd_Out_row, 1
0x0BDC	0x0E02      	MOVLW       2
0x0BDE	0x6F4E      	MOVWF       FARG_Lcd_Out_column, 1
0x0BE0	0xDC2B      	RCALL       _Lcd_Out
;soundrec.c,235 :: 		}
L_main20:
L_main19:
L_main17:
;soundrec.c,237 :: 		lastMode = mode;
0x0BE2	0xF447C028  	MOVFF       _mode, main_lastMode_L0
;soundrec.c,238 :: 		}
0x0BE6	0xD775      	BRA         L_main11
L_main12:
;soundrec.c,241 :: 		if (mode == 1)
0x0BE8	0x5028      	MOVF        _mode, 0 
0x0BEA	0x0A01      	XORLW       1
0x0BEC	0xA4D8      	BTFSS       STATUS, 2 
0x0BEE	0xD08A      	BRA         L_main21
;soundrec.c,244 :: 		timer1Config();
0x0BF0	0xDDB2      	RCALL       _timer1Config
;soundrec.c,247 :: 		lcdClear();
0x0BF2	0x0E01      	MOVLW       1
0x0BF4	0x0104      	MOVLB       4
0x0BF6	0x6F60      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0BF8	0xF000ECBA  	CALL        _Lcd_Cmd, 0
;soundrec.c,248 :: 		lcdDisplay(1, 2, codeToRam(lcd_writing));
0x0BFC	0x0EB3      	MOVLW       _lcd_writing
0x0BFE	0x6F4D      	MOVWF       FARG_codeToRam_ctxt, 1
0x0C00	0x0E0F      	MOVLW       hi_addr(_lcd_writing)
0x0C02	0x6F4E      	MOVWF       FARG_codeToRam_ctxt+1, 1
0x0C04	0x0E00      	MOVLW       higher_addr(_lcd_writing)
0x0C06	0x6F4F      	MOVWF       FARG_codeToRam_ctxt+2, 1
0x0C08	0xDC56      	RCALL       _codeToRam
0x0C0A	0xF44FC000  	MOVFF       R0, FARG_Lcd_Out_text
0x0C0E	0xF450C001  	MOVFF       R1, FARG_Lcd_Out_text+1
0x0C12	0x0E01      	MOVLW       1
0x0C14	0x6F4D      	MOVWF       FARG_Lcd_Out_row, 1
0x0C16	0x0E02      	MOVLW       2
0x0C18	0x6F4E      	MOVWF       FARG_Lcd_Out_column, 1
0x0C1A	0xDC0E      	RCALL       _Lcd_Out
;soundrec.c,251 :: 		ptr = buffer0;
0x0C1C	0x0E47      	MOVLW       _buffer0
0x0C1E	0x6E2A      	MOVWF       soundrec_ptr 
0x0C20	0x0E00      	MOVLW       hi_addr(_buffer0)
0x0C22	0x6E2B      	MOVWF       soundrec_ptr+1 
;soundrec.c,252 :: 		ptrIndex = 0;
0x0C24	0x6A3F      	CLRF        soundrec_ptrIndex 
0x0C26	0x6A40      	CLRF        soundrec_ptrIndex+1 
;soundrec.c,253 :: 		sectorIndex = 0;
0x0C28	0x6B48      	CLRF        main_sectorIndex_L0, 1
0x0C2A	0x6B49      	CLRF        main_sectorIndex_L0+1, 1
0x0C2C	0x6B4A      	CLRF        main_sectorIndex_L0+2, 1
0x0C2E	0x6B4B      	CLRF        main_sectorIndex_L0+3, 1
;soundrec.c,254 :: 		bufferFull = 0;
0x0C30	0x6A29      	CLRF        _bufferFull 
;soundrec.c,255 :: 		currentBuffer = 0;
0x0C32	0x6A46      	CLRF        _currentBuffer 
;soundrec.c,257 :: 		T1CON = (1 << TMR1ON);		/* Start hardware timer */
0x0C34	0x0E01      	MOVLW       1
0x0C36	0x6ECD      	MOVWF       T1CON 
;soundrec.c,258 :: 		while (SLCT)				/* Wait until SLCT pressed */
L_main22:
0x0C38	0xA081      	BTFSS       RB0_bit, BitPos(RB0_bit+0) 
0x0C3A	0xD054      	BRA         L_main23
;soundrec.c,260 :: 		if (bufferFull == 1)
0x0C3C	0x5029      	MOVF        _bufferFull, 0 
0x0C3E	0x0A01      	XORLW       1
0x0C40	0xE150      	BNZ         L_main24
;soundrec.c,262 :: 		bufferFull = 0;
0x0C42	0x6A29      	CLRF        _bufferFull 
;soundrec.c,263 :: 		if (currentBuffer)	/* Write buffer 0 */
0x0C44	0x5246      	MOVF        _currentBuffer, 1 
0x0C46	0xE027      	BZ          L_main25
;soundrec.c,265 :: 		if (Mmc_Write_Sector(sectorIndex++, buffer0) != 0) {
0x0C48	0x0104      	MOVLB       4
0x0C4A	0xF44DC448  	MOVFF       main_sectorIndex_L0, FARG_Mmc_Write_Sector_sector
0x0C4E	0xF44EC449  	MOVFF       main_sectorIndex_L0+1, FARG_Mmc_Write_Sector_sector+1
0x0C52	0xF44FC44A  	MOVFF       main_sectorIndex_L0+2, FARG_Mmc_Write_Sector_sector+2
0x0C56	0xF450C44B  	MOVFF       main_sectorIndex_L0+3, FARG_Mmc_Write_Sector_sector+3
0x0C5A	0x0E01      	MOVLW       1
0x0C5C	0x2748      	ADDWF       main_sectorIndex_L0, 1, 1
0x0C5E	0x0E00      	MOVLW       0
0x0C60	0x2349      	ADDWFC      main_sectorIndex_L0+1, 1, 1
0x0C62	0x234A      	ADDWFC      main_sectorIndex_L0+2, 1, 1
0x0C64	0x234B      	ADDWFC      main_sectorIndex_L0+3, 1, 1
0x0C66	0x0E47      	MOVLW       _buffer0
0x0C68	0x6F51      	MOVWF       FARG_Mmc_Write_Sector_dbuff, 1
0x0C6A	0x0E00      	MOVLW       hi_addr(_buffer0)
0x0C6C	0x6F52      	MOVWF       FARG_Mmc_Write_Sector_dbuff+1, 1
0x0C6E	0xDE0D      	RCALL       _Mmc_Write_Sector
0x0C70	0x5000      	MOVF        R0, 0 
0x0C72	0x0A00      	XORLW       0
0x0C74	0xE00F      	BZ          L_main26
;soundrec.c,266 :: 		lcdClear();
0x0C76	0x0E01      	MOVLW       1
0x0C78	0x0104      	MOVLB       4
0x0C7A	0x6F60      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0C7C	0xF000ECBA  	CALL        _Lcd_Cmd, 0
;soundrec.c,267 :: 		lcdDisplay(2, 2, "E");
0x0C80	0x0E02      	MOVLW       2
0x0C82	0x6F4D      	MOVWF       FARG_Lcd_Out_row, 1
0x0C84	0x0E02      	MOVLW       2
0x0C86	0x6F4E      	MOVWF       FARG_Lcd_Out_column, 1
0x0C88	0x0E1D      	MOVLW       ?lstr1_soundrec
0x0C8A	0x6F4F      	MOVWF       FARG_Lcd_Out_text, 1
0x0C8C	0x0E00      	MOVLW       hi_addr(?lstr1_soundrec)
0x0C8E	0x6F50      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0C90	0xF002EC1C  	CALL        _Lcd_Out, 0
;soundrec.c,268 :: 		}
L_main26:
;soundrec.c,269 :: 		}
0x0C94	0xD026      	BRA         L_main27
L_main25:
0x0C96	0x0104      	MOVLB       4
;soundrec.c,272 :: 		if (Mmc_Write_Sector(sectorIndex++, buffer1) != 0) {
0x0C98	0xF44DC448  	MOVFF       main_sectorIndex_L0, FARG_Mmc_Write_Sector_sector
0x0C9C	0xF44EC449  	MOVFF       main_sectorIndex_L0+1, FARG_Mmc_Write_Sector_sector+1
0x0CA0	0xF44FC44A  	MOVFF       main_sectorIndex_L0+2, FARG_Mmc_Write_Sector_sector+2
0x0CA4	0xF450C44B  	MOVFF       main_sectorIndex_L0+3, FARG_Mmc_Write_Sector_sector+3
0x0CA8	0x0E01      	MOVLW       1
0x0CAA	0x2748      	ADDWF       main_sectorIndex_L0, 1, 1
0x0CAC	0x0E00      	MOVLW       0
0x0CAE	0x2349      	ADDWFC      main_sectorIndex_L0+1, 1, 1
0x0CB0	0x234A      	ADDWFC      main_sectorIndex_L0+2, 1, 1
0x0CB2	0x234B      	ADDWFC      main_sectorIndex_L0+3, 1, 1
0x0CB4	0x0E47      	MOVLW       _buffer1
0x0CB6	0x6F51      	MOVWF       FARG_Mmc_Write_Sector_dbuff, 1
0x0CB8	0x0E02      	MOVLW       hi_addr(_buffer1)
0x0CBA	0x6F52      	MOVWF       FARG_Mmc_Write_Sector_dbuff+1, 1
0x0CBC	0xDDE6      	RCALL       _Mmc_Write_Sector
0x0CBE	0x5000      	MOVF        R0, 0 
0x0CC0	0x0A00      	XORLW       0
0x0CC2	0xE00F      	BZ          L_main28
;soundrec.c,273 :: 		lcdClear();
0x0CC4	0x0E01      	MOVLW       1
0x0CC6	0x0104      	MOVLB       4
0x0CC8	0x6F60      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0CCA	0xF000ECBA  	CALL        _Lcd_Cmd, 0
;soundrec.c,274 :: 		lcdDisplay(2,2, "E");
0x0CCE	0x0E02      	MOVLW       2
0x0CD0	0x6F4D      	MOVWF       FARG_Lcd_Out_row, 1
0x0CD2	0x0E02      	MOVLW       2
0x0CD4	0x6F4E      	MOVWF       FARG_Lcd_Out_column, 1
0x0CD6	0x0E23      	MOVLW       ?lstr2_soundrec
0x0CD8	0x6F4F      	MOVWF       FARG_Lcd_Out_text, 1
0x0CDA	0x0E00      	MOVLW       hi_addr(?lstr2_soundrec)
0x0CDC	0x6F50      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0CDE	0xF002EC1C  	CALL        _Lcd_Out, 0
;soundrec.c,275 :: 		}
L_main28:
;soundrec.c,276 :: 		}
L_main27:
;soundrec.c,277 :: 		}
L_main24:
;soundrec.c,278 :: 		}
0x0CE2	0xD7AA      	BRA         L_main22
L_main23:
;soundrec.c,279 :: 		T1CON &= ~(1 << TMR1ON);
0x0CE4	0x90CD      	BCF         T1CON, 0 
;soundrec.c,281 :: 		Delay_ms(100);
0x0CE6	0x0E03      	MOVLW       3
0x0CE8	0x6E0B      	MOVWF       R11, 0
0x0CEA	0x0E8A      	MOVLW       138
0x0CEC	0x6E0C      	MOVWF       R12, 0
0x0CEE	0x0E55      	MOVLW       85
0x0CF0	0x6E0D      	MOVWF       R13, 0
L_main29:
0x0CF2	0x2E0D      	DECFSZ      R13, 1, 0
0x0CF4	0xD7FE      	BRA         L_main29
0x0CF6	0x2E0C      	DECFSZ      R12, 1, 0
0x0CF8	0xD7FC      	BRA         L_main29
0x0CFA	0x2E0B      	DECFSZ      R11, 1, 0
0x0CFC	0xD7FA      	BRA         L_main29
0x0CFE	0x0000      	NOP
0x0D00	0x0000      	NOP
;soundrec.c,287 :: 		}
0x0D02	0xD147      	BRA         L_main30
L_main21:
;soundrec.c,290 :: 		else if (mode == 2)
0x0D04	0x5028      	MOVF        _mode, 0 
0x0D06	0x0A02      	XORLW       2
0x0D08	0xA4D8      	BTFSS       STATUS, 2 
0x0D0A	0xD09C      	BRA         L_main31
;soundrec.c,293 :: 		sectorIndex = 0;
0x0D0C	0x0104      	MOVLB       4
0x0D0E	0x6B48      	CLRF        main_sectorIndex_L0, 1
0x0D10	0x6B49      	CLRF        main_sectorIndex_L0+1, 1
0x0D12	0x6B4A      	CLRF        main_sectorIndex_L0+2, 1
0x0D14	0x6B4B      	CLRF        main_sectorIndex_L0+3, 1
;soundrec.c,296 :: 		timer1Config();
0x0D16	0xDD1F      	RCALL       _timer1Config
;soundrec.c,299 :: 		lcdClear();
0x0D18	0x0E01      	MOVLW       1
0x0D1A	0x0104      	MOVLB       4
0x0D1C	0x6F60      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0D1E	0xF000ECBA  	CALL        _Lcd_Cmd, 0
;soundrec.c,300 :: 		lcdDisplay(1, 2, codeToRam(lcd_playing));
0x0D22	0x0ECC      	MOVLW       _lcd_playing
0x0D24	0x6F4D      	MOVWF       FARG_codeToRam_ctxt, 1
0x0D26	0x0E0F      	MOVLW       hi_addr(_lcd_playing)
0x0D28	0x6F4E      	MOVWF       FARG_codeToRam_ctxt+1, 1
0x0D2A	0x0E00      	MOVLW       higher_addr(_lcd_playing)
0x0D2C	0x6F4F      	MOVWF       FARG_codeToRam_ctxt+2, 1
0x0D2E	0xF002EC5B  	CALL        _codeToRam, 0
0x0D32	0xF44FC000  	MOVFF       R0, FARG_Lcd_Out_text
0x0D36	0xF450C001  	MOVFF       R1, FARG_Lcd_Out_text+1
0x0D3A	0x0E01      	MOVLW       1
0x0D3C	0x6F4D      	MOVWF       FARG_Lcd_Out_row, 1
0x0D3E	0x0E02      	MOVLW       2
0x0D40	0x6F4E      	MOVWF       FARG_Lcd_Out_column, 1
0x0D42	0xF002EC1C  	CALL        _Lcd_Out, 0
;soundrec.c,301 :: 		ptr = buffer0;
0x0D46	0x0E47      	MOVLW       _buffer0
0x0D48	0x6E2A      	MOVWF       soundrec_ptr 
0x0D4A	0x0E00      	MOVLW       hi_addr(_buffer0)
0x0D4C	0x6E2B      	MOVWF       soundrec_ptr+1 
;soundrec.c,302 :: 		ptrIndex = 0;
0x0D4E	0x6A3F      	CLRF        soundrec_ptrIndex 
0x0D50	0x6A40      	CLRF        soundrec_ptrIndex+1 
;soundrec.c,303 :: 		bufferFull = 0;
0x0D52	0x6A29      	CLRF        _bufferFull 
;soundrec.c,304 :: 		currentBuffer = 0;
0x0D54	0x6A46      	CLRF        _currentBuffer 
;soundrec.c,307 :: 		if (Mmc_Read_Sector(sectorIndex, buffer0) != 0)	{
0x0D56	0xF44DC448  	MOVFF       main_sectorIndex_L0, FARG_Mmc_Read_Sector_sector
0x0D5A	0xF44EC449  	MOVFF       main_sectorIndex_L0+1, FARG_Mmc_Read_Sector_sector+1
0x0D5E	0xF44FC44A  	MOVFF       main_sectorIndex_L0+2, FARG_Mmc_Read_Sector_sector+2
0x0D62	0xF450C44B  	MOVFF       main_sectorIndex_L0+3, FARG_Mmc_Read_Sector_sector+3
0x0D66	0x0E47      	MOVLW       _buffer0
0x0D68	0x6F51      	MOVWF       FARG_Mmc_Read_Sector_dbuff, 1
0x0D6A	0x0E00      	MOVLW       hi_addr(_buffer0)
0x0D6C	0x6F52      	MOVWF       FARG_Mmc_Read_Sector_dbuff+1, 1
0x0D6E	0xDD09      	RCALL       _Mmc_Read_Sector
0x0D70	0x5000      	MOVF        R0, 0 
0x0D72	0x0A00      	XORLW       0
0x0D74	0xE000      	BZ          L_main32
;soundrec.c,308 :: 		}
L_main32:
;soundrec.c,311 :: 		T1CON |= (1 << TMR1ON);
0x0D76	0x80CD      	BSF         T1CON, 0 
;soundrec.c,314 :: 		while (SLCT)
L_main33:
0x0D78	0xA081      	BTFSS       RB0_bit, BitPos(RB0_bit+0) 
0x0D7A	0xD054      	BRA         L_main34
;soundrec.c,316 :: 		if (bufferFull == 1) {
0x0D7C	0x5029      	MOVF        _bufferFull, 0 
0x0D7E	0x0A01      	XORLW       1
0x0D80	0xE150      	BNZ         L_main35
;soundrec.c,317 :: 		bufferFull = 0;
0x0D82	0x6A29      	CLRF        _bufferFull 
;soundrec.c,318 :: 		if (currentBuffer) { /* Read buffer 0 */
0x0D84	0x5246      	MOVF        _currentBuffer, 1 
0x0D86	0xE027      	BZ          L_main36
;soundrec.c,320 :: 		if (Mmc_Read_Sector(sectorIndex++, buffer0) != 0) {
0x0D88	0xF44DC448  	MOVFF       main_sectorIndex_L0, FARG_Mmc_Read_Sector_sector
0x0D8C	0xF44EC449  	MOVFF       main_sectorIndex_L0+1, FARG_Mmc_Read_Sector_sector+1
0x0D90	0xF44FC44A  	MOVFF       main_sectorIndex_L0+2, FARG_Mmc_Read_Sector_sector+2
0x0D94	0xF450C44B  	MOVFF       main_sectorIndex_L0+3, FARG_Mmc_Read_Sector_sector+3
0x0D98	0x0E01      	MOVLW       1
0x0D9A	0x0104      	MOVLB       4
0x0D9C	0x2748      	ADDWF       main_sectorIndex_L0, 1, 1
0x0D9E	0x0E00      	MOVLW       0
0x0DA0	0x2349      	ADDWFC      main_sectorIndex_L0+1, 1, 1
0x0DA2	0x234A      	ADDWFC      main_sectorIndex_L0+2, 1, 1
0x0DA4	0x234B      	ADDWFC      main_sectorIndex_L0+3, 1, 1
0x0DA6	0x0E47      	MOVLW       _buffer0
0x0DA8	0x6F51      	MOVWF       FARG_Mmc_Read_Sector_dbuff, 1
0x0DAA	0x0E00      	MOVLW       hi_addr(_buffer0)
0x0DAC	0x6F52      	MOVWF       FARG_Mmc_Read_Sector_dbuff+1, 1
0x0DAE	0xDCE9      	RCALL       _Mmc_Read_Sector
0x0DB0	0x5000      	MOVF        R0, 0 
0x0DB2	0x0A00      	XORLW       0
0x0DB4	0xE00F      	BZ          L_main37
;soundrec.c,321 :: 		lcdClear();
0x0DB6	0x0E01      	MOVLW       1
0x0DB8	0x0104      	MOVLB       4
0x0DBA	0x6F60      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0DBC	0xF000ECBA  	CALL        _Lcd_Cmd, 0
;soundrec.c,322 :: 		lcdDisplay(2,2, "E");
0x0DC0	0x0E02      	MOVLW       2
0x0DC2	0x6F4D      	MOVWF       FARG_Lcd_Out_row, 1
0x0DC4	0x0E02      	MOVLW       2
0x0DC6	0x6F4E      	MOVWF       FARG_Lcd_Out_column, 1
0x0DC8	0x0E21      	MOVLW       ?lstr3_soundrec
0x0DCA	0x6F4F      	MOVWF       FARG_Lcd_Out_text, 1
0x0DCC	0x0E00      	MOVLW       hi_addr(?lstr3_soundrec)
0x0DCE	0x6F50      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0DD0	0xF002EC1C  	CALL        _Lcd_Out, 0
;soundrec.c,323 :: 		}
L_main37:
;soundrec.c,324 :: 		}
0x0DD4	0xD026      	BRA         L_main38
L_main36:
0x0DD6	0x0104      	MOVLB       4
;soundrec.c,327 :: 		if (Mmc_Read_Sector(sectorIndex++, buffer1) != 0) {
0x0DD8	0xF44DC448  	MOVFF       main_sectorIndex_L0, FARG_Mmc_Read_Sector_sector
0x0DDC	0xF44EC449  	MOVFF       main_sectorIndex_L0+1, FARG_Mmc_Read_Sector_sector+1
0x0DE0	0xF44FC44A  	MOVFF       main_sectorIndex_L0+2, FARG_Mmc_Read_Sector_sector+2
0x0DE4	0xF450C44B  	MOVFF       main_sectorIndex_L0+3, FARG_Mmc_Read_Sector_sector+3
0x0DE8	0x0E01      	MOVLW       1
0x0DEA	0x2748      	ADDWF       main_sectorIndex_L0, 1, 1
0x0DEC	0x0E00      	MOVLW       0
0x0DEE	0x2349      	ADDWFC      main_sectorIndex_L0+1, 1, 1
0x0DF0	0x234A      	ADDWFC      main_sectorIndex_L0+2, 1, 1
0x0DF2	0x234B      	ADDWFC      main_sectorIndex_L0+3, 1, 1
0x0DF4	0x0E47      	MOVLW       _buffer1
0x0DF6	0x6F51      	MOVWF       FARG_Mmc_Read_Sector_dbuff, 1
0x0DF8	0x0E02      	MOVLW       hi_addr(_buffer1)
0x0DFA	0x6F52      	MOVWF       FARG_Mmc_Read_Sector_dbuff+1, 1
0x0DFC	0xDCC2      	RCALL       _Mmc_Read_Sector
0x0DFE	0x5000      	MOVF        R0, 0 
0x0E00	0x0A00      	XORLW       0
0x0E02	0xE00F      	BZ          L_main39
;soundrec.c,328 :: 		lcdClear();
0x0E04	0x0E01      	MOVLW       1
0x0E06	0x0104      	MOVLB       4
0x0E08	0x6F60      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0E0A	0xF000ECBA  	CALL        _Lcd_Cmd, 0
;soundrec.c,329 :: 		lcdDisplay(2,2, "E");
0x0E0E	0x0E02      	MOVLW       2
0x0E10	0x6F4D      	MOVWF       FARG_Lcd_Out_row, 1
0x0E12	0x0E02      	MOVLW       2
0x0E14	0x6F4E      	MOVWF       FARG_Lcd_Out_column, 1
0x0E16	0x0E1F      	MOVLW       ?lstr4_soundrec
0x0E18	0x6F4F      	MOVWF       FARG_Lcd_Out_text, 1
0x0E1A	0x0E00      	MOVLW       hi_addr(?lstr4_soundrec)
0x0E1C	0x6F50      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0E1E	0xF002EC1C  	CALL        _Lcd_Out, 0
;soundrec.c,330 :: 		}
L_main39:
;soundrec.c,331 :: 		}
L_main38:
;soundrec.c,332 :: 		}
L_main35:
;soundrec.c,333 :: 		}
0x0E22	0xD7AA      	BRA         L_main33
L_main34:
;soundrec.c,336 :: 		T1CON &= ~(1 << TMR1ON);
0x0E24	0x90CD      	BCF         T1CON, 0 
;soundrec.c,338 :: 		Delay_ms(100);
0x0E26	0x0E03      	MOVLW       3
0x0E28	0x6E0B      	MOVWF       R11, 0
0x0E2A	0x0E8A      	MOVLW       138
0x0E2C	0x6E0C      	MOVWF       R12, 0
0x0E2E	0x0E55      	MOVLW       85
0x0E30	0x6E0D      	MOVWF       R13, 0
L_main40:
0x0E32	0x2E0D      	DECFSZ      R13, 1, 0
0x0E34	0xD7FE      	BRA         L_main40
0x0E36	0x2E0C      	DECFSZ      R12, 1, 0
0x0E38	0xD7FC      	BRA         L_main40
0x0E3A	0x2E0B      	DECFSZ      R11, 1, 0
0x0E3C	0xD7FA      	BRA         L_main40
0x0E3E	0x0000      	NOP
0x0E40	0x0000      	NOP
;soundrec.c,341 :: 		}
0x0E42	0xD0A7      	BRA         L_main41
L_main31:
;soundrec.c,344 :: 		else if (mode == 3)	{
0x0E44	0x5028      	MOVF        _mode, 0 
0x0E46	0x0A03      	XORLW       3
0x0E48	0xA4D8      	BTFSS       STATUS, 2 
0x0E4A	0xD0A3      	BRA         L_main42
;soundrec.c,345 :: 		temp = mode; /* Save current mode state */
0x0E4C	0xF44CC028  	MOVFF       _mode, main_temp_L0
;soundrec.c,346 :: 		mode = 1;
0x0E50	0x0E01      	MOVLW       1
0x0E52	0x6E28      	MOVWF       _mode 
;soundrec.c,347 :: 		Delay_ms(500);
0x0E54	0x0E0D      	MOVLW       13
0x0E56	0x6E0B      	MOVWF       R11, 0
0x0E58	0x0EAF      	MOVLW       175
0x0E5A	0x6E0C      	MOVWF       R12, 0
0x0E5C	0x0EB6      	MOVLW       182
0x0E5E	0x6E0D      	MOVWF       R13, 0
L_main43:
0x0E60	0x0104      	MOVLB       4
0x0E62	0x2E0D      	DECFSZ      R13, 1, 0
0x0E64	0xD7FD      	BRA         L_main43
0x0E66	0x2E0C      	DECFSZ      R12, 1, 0
0x0E68	0xD7FB      	BRA         L_main43
0x0E6A	0x2E0B      	DECFSZ      R11, 1, 0
0x0E6C	0xD7F9      	BRA         L_main43
0x0E6E	0x0000      	NOP
;soundrec.c,348 :: 		Lcd_Cmd(_LCD_CLEAR);
0x0E70	0x0E01      	MOVLW       1
0x0E72	0x6F60      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0E74	0xF000ECBA  	CALL        _Lcd_Cmd, 0
;soundrec.c,350 :: 		while (OK) { /* OK not pressed */
L_main44:
0x0E78	0xA281      	BTFSS       RB1_bit, BitPos(RB1_bit+0) 
0x0E7A	0xD069      	BRA         L_main45
;soundrec.c,351 :: 		if (!SLCT) { /* SLCT */
0x0E7C	0xB081      	BTFSC       RB0_bit, BitPos(RB0_bit+0) 
0x0E7E	0xD018      	BRA         L_main46
;soundrec.c,352 :: 		Delay_ms(300);
0x0E80	0x0E08      	MOVLW       8
0x0E82	0x6E0B      	MOVWF       R11, 0
0x0E84	0x0E9D      	MOVLW       157
0x0E86	0x6E0C      	MOVWF       R12, 0
0x0E88	0x0E05      	MOVLW       5
0x0E8A	0x6E0D      	MOVWF       R13, 0
L_main47:
0x0E8C	0x2E0D      	DECFSZ      R13, 1, 0
0x0E8E	0xD7FE      	BRA         L_main47
0x0E90	0x2E0C      	DECFSZ      R12, 1, 0
0x0E92	0xD7FC      	BRA         L_main47
0x0E94	0x2E0B      	DECFSZ      R11, 1, 0
0x0E96	0xD7FA      	BRA         L_main47
0x0E98	0x0000      	NOP
0x0E9A	0x0000      	NOP
;soundrec.c,353 :: 		mode++;
0x0E9C	0x5028      	MOVF        _mode, 0 
0x0E9E	0x0F01      	ADDLW       1
0x0EA0	0x6E00      	MOVWF       R0 
0x0EA2	0xF028C000  	MOVFF       R0, _mode
;soundrec.c,354 :: 		if (mode == 3) {
0x0EA6	0x5028      	MOVF        _mode, 0 
0x0EA8	0x0A03      	XORLW       3
0x0EAA	0xE102      	BNZ         L_main48
;soundrec.c,355 :: 		mode = 1;
0x0EAC	0x0E01      	MOVLW       1
0x0EAE	0x6E28      	MOVWF       _mode 
;soundrec.c,356 :: 		}
L_main48:
;soundrec.c,357 :: 		}
L_main46:
0x0EB0	0x0104      	MOVLB       4
;soundrec.c,359 :: 		if ((mode == 1) & (lastMode != mode)) {
0x0EB2	0x5028      	MOVF        _mode, 0 
0x0EB4	0x0A01      	XORLW       1
0x0EB6	0x0E01      	MOVLW       1
0x0EB8	0xA4D8      	BTFSS       STATUS, 2 
0x0EBA	0x0E00      	MOVLW       0
0x0EBC	0x6E01      	MOVWF       R1 
0x0EBE	0x5147      	MOVF        main_lastMode_L0, 0, 1
0x0EC0	0x1828      	XORWF       _mode, 0 
0x0EC2	0x0E00      	MOVLW       0
0x0EC4	0xA4D8      	BTFSS       STATUS, 2 
0x0EC6	0x0E01      	MOVLW       1
0x0EC8	0x6E00      	MOVWF       R0 
0x0ECA	0x5001      	MOVF        R1, 0 
0x0ECC	0x1600      	ANDWF       R0, 1 
0x0ECE	0xE017      	BZ          L_main49
;soundrec.c,360 :: 		lcdClear();
0x0ED0	0x0E01      	MOVLW       1
0x0ED2	0x6F60      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0ED4	0xF000ECBA  	CALL        _Lcd_Cmd, 0
;soundrec.c,361 :: 		lcdDisplay(1, 2, codeToRam(lcd_s_16khz));
0x0ED8	0x0EE0      	MOVLW       _lcd_s_16khz
0x0EDA	0x6F4D      	MOVWF       FARG_codeToRam_ctxt, 1
0x0EDC	0x0E0F      	MOVLW       hi_addr(_lcd_s_16khz)
0x0EDE	0x6F4E      	MOVWF       FARG_codeToRam_ctxt+1, 1
0x0EE0	0x0E00      	MOVLW       higher_addr(_lcd_s_16khz)
0x0EE2	0x6F4F      	MOVWF       FARG_codeToRam_ctxt+2, 1
0x0EE4	0xF002EC5B  	CALL        _codeToRam, 0
0x0EE8	0xF44FC000  	MOVFF       R0, FARG_Lcd_Out_text
0x0EEC	0xF450C001  	MOVFF       R1, FARG_Lcd_Out_text+1
0x0EF0	0x0E01      	MOVLW       1
0x0EF2	0x6F4D      	MOVWF       FARG_Lcd_Out_row, 1
0x0EF4	0x0E02      	MOVLW       2
0x0EF6	0x6F4E      	MOVWF       FARG_Lcd_Out_column, 1
0x0EF8	0xF002EC1C  	CALL        _Lcd_Out, 0
;soundrec.c,362 :: 		}
0x0EFC	0xD025      	BRA         L_main50
L_main49:
;soundrec.c,363 :: 		else if ((mode == 2) & (lastMode != mode)) {
0x0EFE	0x5028      	MOVF        _mode, 0 
0x0F00	0x0A02      	XORLW       2
0x0F02	0x0E01      	MOVLW       1
0x0F04	0xA4D8      	BTFSS       STATUS, 2 
0x0F06	0x0E00      	MOVLW       0
0x0F08	0x6E01      	MOVWF       R1 
0x0F0A	0x5147      	MOVF        main_lastMode_L0, 0, 1
0x0F0C	0x1828      	XORWF       _mode, 0 
0x0F0E	0x0E00      	MOVLW       0
0x0F10	0xA4D8      	BTFSS       STATUS, 2 
0x0F12	0x0E01      	MOVLW       1
0x0F14	0x6E00      	MOVWF       R0 
0x0F16	0x5001      	MOVF        R1, 0 
0x0F18	0x1600      	ANDWF       R0, 1 
0x0F1A	0xE016      	BZ          L_main51
;soundrec.c,364 :: 		lcdClear();
0x0F1C	0x0E01      	MOVLW       1
0x0F1E	0x6F60      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0F20	0xF000ECBA  	CALL        _Lcd_Cmd, 0
;soundrec.c,365 :: 		lcdDisplay(1, 2, codeToRam(lcd_s_8khz));
0x0F24	0x0EF6      	MOVLW       _lcd_s_8khz
0x0F26	0x6F4D      	MOVWF       FARG_codeToRam_ctxt, 1
0x0F28	0x0E0F      	MOVLW       hi_addr(_lcd_s_8khz)
0x0F2A	0x6F4E      	MOVWF       FARG_codeToRam_ctxt+1, 1
0x0F2C	0x0E00      	MOVLW       higher_addr(_lcd_s_8khz)
0x0F2E	0x6F4F      	MOVWF       FARG_codeToRam_ctxt+2, 1
0x0F30	0xF002EC5B  	CALL        _codeToRam, 0
0x0F34	0xF44FC000  	MOVFF       R0, FARG_Lcd_Out_text
0x0F38	0xF450C001  	MOVFF       R1, FARG_Lcd_Out_text+1
0x0F3C	0x0E01      	MOVLW       1
0x0F3E	0x6F4D      	MOVWF       FARG_Lcd_Out_row, 1
0x0F40	0x0E02      	MOVLW       2
0x0F42	0x6F4E      	MOVWF       FARG_Lcd_Out_column, 1
0x0F44	0xF002EC1C  	CALL        _Lcd_Out, 0
;soundrec.c,366 :: 		}
L_main51:
L_main50:
;soundrec.c,368 :: 		lastMode = mode;
0x0F48	0xF447C028  	MOVFF       _mode, main_lastMode_L0
;soundrec.c,369 :: 		}
0x0F4C	0xD795      	BRA         L_main44
L_main45:
;soundrec.c,371 :: 		if (mode == 1) {
0x0F4E	0x5028      	MOVF        _mode, 0 
0x0F50	0x0A01      	XORLW       1
0x0F52	0xE102      	BNZ         L_main52
;soundrec.c,372 :: 		samplingRate = _16KHZ;
0x0F54	0x6A25      	CLRF        soundrec_samplingRate 
;soundrec.c,373 :: 		}
0x0F56	0xD005      	BRA         L_main53
L_main52:
;soundrec.c,374 :: 		else if (mode == 2) {
0x0F58	0x5028      	MOVF        _mode, 0 
0x0F5A	0x0A02      	XORLW       2
0x0F5C	0xE102      	BNZ         L_main54
;soundrec.c,375 :: 		samplingRate = _8KHZ;
0x0F5E	0x0E01      	MOVLW       1
0x0F60	0x6E25      	MOVWF       soundrec_samplingRate 
;soundrec.c,376 :: 		}
L_main54:
L_main53:
;soundrec.c,378 :: 		lcdClear();
0x0F62	0x0E01      	MOVLW       1
0x0F64	0x6F60      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0F66	0xF000ECBA  	CALL        _Lcd_Cmd, 0
;soundrec.c,379 :: 		lcdDisplay(1, 2, codeToRam(lcd_saved));
0x0F6A	0x0EEF      	MOVLW       _lcd_saved
0x0F6C	0x6F4D      	MOVWF       FARG_codeToRam_ctxt, 1
0x0F6E	0x0E0F      	MOVLW       hi_addr(_lcd_saved)
0x0F70	0x6F4E      	MOVWF       FARG_codeToRam_ctxt+1, 1
0x0F72	0x0E00      	MOVLW       higher_addr(_lcd_saved)
0x0F74	0x6F4F      	MOVWF       FARG_codeToRam_ctxt+2, 1
0x0F76	0xF002EC5B  	CALL        _codeToRam, 0
0x0F7A	0xF44FC000  	MOVFF       R0, FARG_Lcd_Out_text
0x0F7E	0xF450C001  	MOVFF       R1, FARG_Lcd_Out_text+1
0x0F82	0x0E01      	MOVLW       1
0x0F84	0x6F4D      	MOVWF       FARG_Lcd_Out_row, 1
0x0F86	0x0E02      	MOVLW       2
0x0F88	0x6F4E      	MOVWF       FARG_Lcd_Out_column, 1
0x0F8A	0xF002EC1C  	CALL        _Lcd_Out, 0
;soundrec.c,381 :: 		mode = temp;
0x0F8E	0xF028C44C  	MOVFF       main_temp_L0, _mode
;soundrec.c,382 :: 		}
L_main42:
L_main41:
L_main30:
;soundrec.c,385 :: 		}
0x0F92	0xD597      	BRA         L_main6
;soundrec.c,387 :: 		}
L_end_main:
0x0F94	0xD7FF      	BRA         $+0
; end of _main
0x0FFE	0xF01BEE10  	LFSR        1, 27
0x1002	0x0E0C      	MOVLW       12
0x1004	0x6E00      	MOVWF       R0 
0x1006	0x0E01      	MOVLW       1
0x1008	0x6E01      	MOVWF       R1 
0x100A	0x0EC0      	MOVLW       192
0x100C	0x6EF6      	MOVWF       4086 
0x100E	0x0E0F      	MOVLW       15
0x1010	0x6EF7      	MOVWF       TBLPTRH 
0x1012	0x0E00      	MOVLW       0
0x1014	0x6EF8      	MOVWF       TBLPTRU 
0x1016	0xF002EC84  	CALL        1288, 0
0x101A	0x0012      	RETURN      0
;soundrec.c,27 :: _lcd_welcome
0x0F96	0x4F56 ;_lcd_welcome+0
0x0F98	0x4349 ;_lcd_welcome+2
0x0F9A	0x2045 ;_lcd_welcome+4
0x0F9C	0x4552 ;_lcd_welcome+6
0x0F9E	0x4F43 ;_lcd_welcome+8
0x0FA0	0x4452 ;_lcd_welcome+10
0x0FA2	0x5245 ;_lcd_welcome+12
0x0FA4	0x00 ;_lcd_welcome+14
; end of _lcd_welcome
;soundrec.c,30 :: _lcd_sampleRate
0x0FA5	0x203E ;_lcd_sampleRate+0
0x0FA7	0x6153 ;_lcd_sampleRate+2
0x0FA9	0x706D ;_lcd_sampleRate+4
0x0FAB	0x656C ;_lcd_sampleRate+6
0x0FAD	0x5220 ;_lcd_sampleRate+8
0x0FAF	0x7461 ;_lcd_sampleRate+10
0x0FB1	0x0065 ;_lcd_sampleRate+12
; end of _lcd_sampleRate
;soundrec.c,31 :: _lcd_writing
0x0FB3	0x6552 ;_lcd_writing+0
0x0FB5	0x6F63 ;_lcd_writing+2
0x0FB7	0x6472 ;_lcd_writing+4
0x0FB9	0x6E69 ;_lcd_writing+6
0x0FBB	0x2E67 ;_lcd_writing+8
0x0FBD	0x2E2E ;_lcd_writing+10
0x0FBF	0x00 ;_lcd_writing+12
; end of _lcd_writing
;soundrec.c,0 :: ?ICSsoundrec_timerL
0x0FC0	0xC7 ;?ICSsoundrec_timerL+0
; end of ?ICSsoundrec_timerL
;__Lib_Mmc.c,0 :: ?ICS__Lib_Mmc_cardType
0x0FC1	0x00 ;?ICS__Lib_Mmc_cardType+0
; end of ?ICS__Lib_Mmc_cardType
;soundrec.c,0 :: ?ICS?lstr1_soundrec
0x0FC2	0x0045 ;?ICS?lstr1_soundrec+0
; end of ?ICS?lstr1_soundrec
;soundrec.c,0 :: ?ICS?lstr4_soundrec
0x0FC4	0x0045 ;?ICS?lstr4_soundrec+0
; end of ?ICS?lstr4_soundrec
;soundrec.c,0 :: ?ICS?lstr3_soundrec
0x0FC6	0x0045 ;?ICS?lstr3_soundrec+0
; end of ?ICS?lstr3_soundrec
;soundrec.c,0 :: ?ICS?lstr2_soundrec
0x0FC8	0x0045 ;?ICS?lstr2_soundrec+0
; end of ?ICS?lstr2_soundrec
;soundrec.c,0 :: ?ICSsoundrec_samplingRate
0x0FCA	0x00 ;?ICSsoundrec_samplingRate+0
; end of ?ICSsoundrec_samplingRate
;soundrec.c,0 :: ?ICSsoundrec_timerH
0x0FCB	0xFE ;?ICSsoundrec_timerH+0
; end of ?ICSsoundrec_timerH
;soundrec.c,34 :: _lcd_playing
0x0FCC	0x6C50 ;_lcd_playing+0
0x0FCE	0x7961 ;_lcd_playing+2
0x0FD0	0x6E69 ;_lcd_playing+4
0x0FD2	0x2E67 ;_lcd_playing+6
0x0FD4	0x2E2E ;_lcd_playing+8
0x0FD6	0x00 ;_lcd_playing+10
; end of _lcd_playing
;soundrec.c,28 :: _lcd_record
0x0FD7	0x203E ;_lcd_record+0
0x0FD9	0x6552 ;_lcd_record+2
0x0FDB	0x6F63 ;_lcd_record+4
0x0FDD	0x6472 ;_lcd_record+6
0x0FDF	0x00 ;_lcd_record+8
; end of _lcd_record
;soundrec.c,35 :: _lcd_s_16khz
0x0FE0	0x203E ;_lcd_s_16khz+0
0x0FE2	0x3631 ;_lcd_s_16khz+2
0x0FE4	0x684B ;_lcd_s_16khz+4
0x0FE6	0x007A ;_lcd_s_16khz+6
; end of _lcd_s_16khz
;soundrec.c,29 :: _lcd_play
0x0FE8	0x203E ;_lcd_play+0
0x0FEA	0x6C50 ;_lcd_play+2
0x0FEC	0x7961 ;_lcd_play+4
0x0FEE	0x00 ;_lcd_play+6
; end of _lcd_play
;soundrec.c,37 :: _lcd_saved
0x0FEF	0x6153 ;_lcd_saved+0
0x0FF1	0x6576 ;_lcd_saved+2
0x0FF3	0x2164 ;_lcd_saved+4
0x0FF5	0x00 ;_lcd_saved+6
; end of _lcd_saved
;soundrec.c,36 :: _lcd_s_8khz
0x0FF6	0x203E ;_lcd_s_8khz+0
0x0FF8	0x6B38 ;_lcd_s_8khz+2
0x0FFA	0x7A68 ;_lcd_s_8khz+4
0x0FFC	0x00 ;_lcd_s_8khz+6
; end of _lcd_s_8khz
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008     [274]    _interrupt
0x011A      [18]    _SPI1_Read
0x012C      [10]    _Delay_50us
0x0136      [12]    _Delay_1us
0x0142      [22]    _Delay_5500us
0x0158      [24]    _____DoIFC
0x0170       [4]    __Lib_Mmc_Mmc_Select
0x0174     [126]    _Lcd_Cmd
0x01F2      [26]    __Lib_Mmc_Mmc_DeSelect
0x020C     [210]    __Lib_Mmc_Mmc_Send_Command
0x02DE      [12]    _Lcd_Chr_CP
0x02EA     [334]    __Lib_Mmc_Mmc_UnIdle
0x0438     [126]    _Lcd_Out
0x04B6      [82]    _codeToRam
0x0508      [16]    ___CC2DW
0x0518      [12]    _adcInit
0x0524     [150]    _Lcd_Init
0x05BA      [88]    _SPI1_Init_Advanced
0x0612     [324]    _Mmc_Init
0x0756      [44]    _timer1Config
0x0782     [264]    _Mmc_Read_Sector
0x088A     [404]    _Mmc_Write_Sector
0x0A1E    [1400]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0000       [1]    UART1_Init_tmp_L0
0x0000       [1]    SPI1_Write_tmp_L0
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0001       [1]    R1
0x0002       [2]    memset_pp_L0
0x0002       [2]    strlen_cp_L0
0x0002       [2]    memcpy_dd_L0
0x0002       [2]    memchr_s_L0
0x0002       [1]    R2
0x0003       [2]    memmove_tt_L0
0x0003       [2]    Ltrim_original_L0
0x0003       [1]    R3
0x0003       [1]    codeToRam_i_L0
0x0004       [2]    strcpy_cp_L0
0x0004       [2]    strcat_cp_L0
0x0004       [2]    memcpy_ss_L0
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    strncat_cp_L0
0x0004       [1]    R4
0x0005       [1]    R5
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [2]    memmove_ff_L0
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [2]    Ltrim_p_L0
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x001B       [1]    soundrec_timerL
0x001C       [1]    __Lib_Mmc_cardType
0x001D       [2]    ?lstr1_soundrec
0x001F       [2]    ?lstr4_soundrec
0x0021       [2]    ?lstr3_soundrec
0x0023       [2]    ?lstr2_soundrec
0x0025       [1]    soundrec_samplingRate
0x0026       [1]    soundrec_timerH
0x0027       [1]    _adcResult
0x0028       [1]    _mode
0x0029       [1]    _bufferFull
0x002A       [2]    soundrec_ptr
0x002C      [15]    codeToRam_txt_L0
0x003B       [4]    _SPI_Rd_Ptr
0x003F       [2]    soundrec_ptrIndex
0x0041       [0]    __Lib_Lcd_cmd_status
0x0042       [4]    _SPI_Wr_Ptr
0x0046       [1]    _currentBuffer
0x0047     [512]    _buffer0
0x0247     [512]    _buffer1
0x0447       [1]    main_lastMode_L0
0x0448       [4]    main_sectorIndex_L0
0x044C       [1]    main_temp_L0
0x044D       [1]    FARG_SPI1_Init_Advanced_master
0x044D       [4]    FARG_Mmc_Read_Sector_sector
0x044D       [3]    FARG_codeToRam_ctxt
0x044D       [2]    Mmc_Init_cnt_L0
0x044D       [4]    FARG_Mmc_Write_Sector_sector
0x044D       [1]    FARG_Lcd_Out_row
0x044E       [1]    FARG_SPI1_Init_Advanced_data_sample
0x044E       [1]    FARG_Lcd_Out_column
0x044F       [2]    FARG_Lcd_Out_text
0x044F       [1]    FARG_SPI1_Init_Advanced_clock_idle
0x044F       [1]    Mmc_Init_response_L0
0x0450       [1]    FARG_SPI1_Init_Advanced_transmit_edge
0x0451       [2]    FARG_Mmc_Read_Sector_dbuff
0x0451       [1]    Lcd_Out_i_L0
0x0451       [2]    FARG_Mmc_Write_Sector_dbuff
0x0453       [2]    Mmc_Read_Sector_i_L0
0x0453       [2]    Mmc_Write_Sector_i_L0
0x0455       [4]    Mmc_Read_Sector_byte_start_L0
0x0455       [4]    Mmc_Write_Sector_byte_start_L0
0x0459       [2]    FLOC__Mmc_Read_Sector
0x045B       [1]    FARG___Lib_Mmc_Mmc_UnIdle_ctype
0x045B       [1]    FARG_Lcd_Chr_CP_out_char
0x045C       [2]    __Lib_Mmc_Mmc_UnIdle_cnt_L0
0x045E       [1]    __Lib_Mmc_Mmc_UnIdle_response_L0
0x045F       [1]    __Lib_Mmc_Mmc_UnIdle_response2_L0
0x0460       [1]    FARG_Lcd_Cmd_out_char
0x0460       [1]    FARG___Lib_Mmc_Mmc_Send_Command_partial_cmm
0x0461       [4]    FARG___Lib_Mmc_Mmc_Send_Command_content
0x0465       [1]    FARG___Lib_Mmc_Mmc_Send_Command_crc
0x0466       [1]    __Lib_Mmc_Mmc_Send_Command_response_L0
0x0467       [2]    __Lib_Mmc_Mmc_Send_Command_timeout_L0
0x0469       [1]    FARG_SPI1_Read_buffer
0x0F81       [0]    RB6_bit
0x0F81       [0]    RB5_bit
0x0F81       [0]    RB4_bit
0x0F81       [0]    RB7_bit
0x0F81       [0]    LCD_EN
0x0F81       [0]    LCD_RS
0x0F81       [0]    RB3_bit
0x0F81       [0]    RB0_bit
0x0F81       [0]    RB2_bit
0x0F81       [0]    RB1_bit
0x0F81       [0]    LCD_D4
0x0F81       [0]    LCD_D7
0x0F81       [0]    LCD_D6
0x0F81       [0]    LCD_D5
0x0F8B       [1]    LATC
0x0F8B       [0]    Mmc_Chip_Select
0x0F8B       [0]    LATC2_bit
0x0F8C       [1]    LATD
0x0F93       [0]    LCD_D5_Direction
0x0F93       [0]    LCD_D6_Direction
0x0F93       [0]    LCD_D4_Direction
0x0F93       [1]    TRISB
0x0F93       [0]    LCD_D7_Direction
0x0F93       [0]    LCD_EN_Direction
0x0F93       [0]    TRISB4_bit
0x0F93       [0]    TRISB3_bit
0x0F93       [0]    TRISB6_bit
0x0F93       [0]    TRISB5_bit
0x0F93       [0]    TRISB7_bit
0x0F93       [0]    LCD_RS_Direction
0x0F93       [0]    TRISB2_bit
0x0F94       [1]    TRISC
0x0F94       [0]    Mmc_Chip_Select_Direction
0x0F94       [0]    TRISC5_bit
0x0F94       [0]    TRISC4_bit
0x0F94       [0]    TRISC3_bit
0x0F94       [0]    TRISC2_bit
0x0F95       [1]    TRISD
0x0F9D       [1]    PIE1
0x0F9E       [1]    PIR1
0x0FC0       [1]    ADCON2
0x0FC1       [1]    ADCON1
0x0FC2       [0]    GO_bit
0x0FC2       [1]    ADCON0
0x0FC4       [1]    ADRESH
0x0FC6       [1]    SSPCON1
0x0FC7       [1]    SSPSTAT
0x0FC9       [1]    SSPBUF
0x0FCD       [1]    T1CON
0x0FCE       [1]    TMR1L
0x0FCF       [1]    TMR1H
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE1       [2]    FSR1
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF1       [1]    INTCON2
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
0x0FFD       [1]    TOSL
0x0FFE       [1]    TOSH
0x0FFF       [1]    TOSU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0F96      [15]    _lcd_welcome
0x0FA5      [14]    _lcd_sampleRate
0x0FB3      [13]    _lcd_writing
0x0FC0       [1]    ?ICSsoundrec_timerL
0x0FC1       [1]    ?ICS__Lib_Mmc_cardType
0x0FC2       [2]    ?ICS?lstr1_soundrec
0x0FC4       [2]    ?ICS?lstr4_soundrec
0x0FC6       [2]    ?ICS?lstr3_soundrec
0x0FC8       [2]    ?ICS?lstr2_soundrec
0x0FCA       [1]    ?ICSsoundrec_samplingRate
0x0FCB       [1]    ?ICSsoundrec_timerH
0x0FCC      [11]    _lcd_playing
0x0FD7       [9]    _lcd_record
0x0FE0       [8]    _lcd_s_16khz
0x0FE8       [7]    _lcd_play
0x0FEF       [7]    _lcd_saved
0x0FF6       [7]    _lcd_s_8khz
//** Label List: ** 
//----------------------------------------------
  L_adcRead0
  L_adcRead1
  L_end_adcRead
  _adcRead
  L_end_adcInit
  _adcInit
  L_codeToRam0
  L_codeToRam1
  L_codeToRam2
  L_main3
  L_main4
  L_main5
  L_main6
  L_main7
  L_main8
  L_main9
  L_main10
  L_main11
  L_main12
  L_main13
  L_main14
  L_main15
  L_main16
  L_main17
  L_main18
  L_main19
  L_main20
  L_main21
  L_main22
  L_main23
  L_main24
  L_main25
  L_main26
  L_main27
  L_main28
  L_main29
  L_main30
  L_main31
  L_main32
  L_main33
  L_main34
  L_main35
  L_main36
  L_main37
  L_main38
  L_main39
  L_main40
  L_main41
  L_main42
  L_main43
  L_main44
  L_main45
  L_main46
  L_main47
  L_main48
  L_main49
  L_main50
  L_main51
  L_main52
  L_main53
  L_main54
  L_interrupt55
  L_interrupt56
  L_interrupt57
  L_interrupt58
  L_interrupt59
  L_interrupt60
  L_interrupt61
  L_interrupt62
  L_interrupt63
  L_interrupt64
  L_timer1Config65
  L_timer1Config66
  L_timer1Config67
  L_end_codeToRam
  _codeToRam
  L_end_main
  _main
  L_end_interrupt
  _interrupt
  L__interrupt71
  L__interrupt72
  L__interrupt73
  L_end_timer1Config
  _timer1Config
  L_Delay_10us0
  L_Delay_22us1
  L_Delay_50us2
  L_Delay_80us3
  L_Delay_500us4
  L_Delay_5500us5
  L_Delay_1ms6
  L_Delay_5ms7
  L_Delay_8ms8
  L_Delay_100ms9
  L_Delay_10ms10
  L_Delay_1sec11
  L____Boot_Delay4k12
  L____Boot_Delay8k13
  L____Boot_Delay12k14
  L____Boot_Delay16k15
  L____Boot_Delay24k16
  L____Boot_Delay32k17
  L____Boot_Delay48k18
  L____Boot_Delay64k19
  L____Boot_Delay128k20
  L_Delay_Cyc21
  L_Delay_Cyc22
  L_VDelay_ms23
  L_VDelay_ms24
  L_VDelay_ms25
  L_VDelay_Advanced_ms26
  L_VDelay_Advanced_ms27
  L_VDelay_Advanced_ms28
  L_end_Get_Fosc_kHz
  _Get_Fosc_kHz
  L_end_Delay_1us
  _Delay_1us
  L_end_Delay_10us
  _Delay_10us
  L_end_Delay_22us
  _Delay_22us
  L_end_Delay_50us
  _Delay_50us
  L_end_Delay_80us
  _Delay_80us
  L_end_Delay_500us
  _Delay_500us
  L_end_Delay_5500us
  _Delay_5500us
  L_end_Delay_1ms
  _Delay_1ms
  L_end_Delay_5ms
  _Delay_5ms
  L_end_Delay_8ms
  _Delay_8ms
  L_end_Delay_100ms
  _Delay_100ms
  L_end_Delay_10ms
  _Delay_10ms
  L_end_Delay_1sec
  _Delay_1sec
  L_end____Boot_Delay4k
  ____Boot_Delay4k
  L_end____Boot_Delay8k
  ____Boot_Delay8k
  L_end____Boot_Delay12k
  ____Boot_Delay12k
  L_end____Boot_Delay16k
  ____Boot_Delay16k
  L_end____Boot_Delay24k
  ____Boot_Delay24k
  L_end____Boot_Delay32k
  ____Boot_Delay32k
  L_end____Boot_Delay48k
  ____Boot_Delay48k
  L_end____Boot_Delay64k
  ____Boot_Delay64k
  L_end____Boot_Delay128k
  ____Boot_Delay128k
  L_end_Delay_Cyc
  _Delay_Cyc
  L_end_VDelay_ms
  _VDelay_ms
  L__VDelay_ms54
  L__VDelay_ms55
  L__VDelay_ms56
  L_end_VDelay_Advanced_ms
  _VDelay_Advanced_ms
  L__VDelay_Advanced_ms58
  L__VDelay_Advanced_ms59
  L__VDelay_Advanced_ms60
  L_Lcd_Cmd0
  L_Lcd_Cmd1
  L_Lcd_Out_CP2
  L_Lcd_Out_CP3
  L_Lcd_Chr4
  L_Lcd_Chr5
  L_Lcd_Chr6
  L_Lcd_Chr7
  L_Lcd_Chr8
  L_Lcd_Chr9
  L_Lcd_Chr10
  L_Lcd_Out11
  L_Lcd_Out12
  L_Lcd_Out13
  L_Lcd_Out14
  L_Lcd_Out15
  L_Lcd_Out16
  L_Lcd_Out17
  L_Lcd_Out18
  L_Lcd_Out19
  L_end_Lcd_Cmd
  _Lcd_Cmd
  L__Lcd_Cmd21
  L__Lcd_Cmd22
  L__Lcd_Cmd23
  L__Lcd_Cmd24
  L__Lcd_Cmd25
  L__Lcd_Cmd26
  L__Lcd_Cmd27
  L__Lcd_Cmd28
  L__Lcd_Cmd29
  L__Lcd_Cmd30
  L__Lcd_Cmd31
  L__Lcd_Cmd32
  L__Lcd_Cmd33
  L__Lcd_Cmd34
  L__Lcd_Cmd35
  L__Lcd_Cmd36
  L__Lcd_Cmd37
  L__Lcd_Cmd38
  L__Lcd_Cmd39
  L__Lcd_Cmd40
  L_end_Lcd_Chr_CP
  _Lcd_Chr_CP
  L_end_Lcd_Out_CP
  _Lcd_Out_CP
  L_end_Lcd_Chr
  _Lcd_Chr
  L_end_Lcd_Init
  _Lcd_Init
  L_end_Lcd_Out
  _Lcd_Out
  L___Lib_Mmc_Mmc_Send_Command0
  L___Lib_Mmc_Mmc_Send_Command1
  L___Lib_Mmc_Mmc_Send_Command2
  L___Lib_Mmc_Mmc_Send_Command3
  L___Lib_Mmc_Mmc_Send_Command4
  L___Lib_Mmc_Mmc_UnIdle5
  L___Lib_Mmc_Mmc_UnIdle6
  L___Lib_Mmc_Mmc_UnIdle7
  L___Lib_Mmc_Mmc_UnIdle8
  L___Lib_Mmc_Mmc_UnIdle9
  L___Lib_Mmc_Mmc_UnIdle10
  L___Lib_Mmc_Mmc_UnIdle11
  L___Lib_Mmc_Mmc_UnIdle12
  L___Lib_Mmc_Mmc_UnIdle13
  L___Lib_Mmc_Mmc_UnIdle14
  L___Lib_Mmc_Mmc_UnIdle15
  L___Lib_Mmc_Mmc_UnIdle16
  L___Lib_Mmc_Mmc_UnIdle17
  L___Lib_Mmc_Mmc_UnIdle18
  L_Mmc_Init19
  L_Mmc_Init20
  L_Mmc_Init21
  L_Mmc_Init22
  L_Mmc_Init23
  L_Mmc_Init24
  L_Mmc_Init25
  L_Mmc_Init26
  L_Mmc_Init27
  L_Mmc_Init28
  L_Mmc_Read_Sector29
  L_Mmc_Read_Sector30
  L_Mmc_Read_Sector31
  L_Mmc_Read_Sector32
  L_Mmc_Read_Sector33
  L_Mmc_Read_Sector34
  L_Mmc_Read_Sector35
  L_Mmc_Read_Sector36
  L_Mmc_Write_Sector37
  L_Mmc_Write_Sector38
  L_Mmc_Write_Sector39
  L_Mmc_Write_Sector40
  L_Mmc_Write_Sector41
  L_Mmc_Write_Sector42
  L_Mmc_Write_Sector43
  L_Mmc_Write_Sector44
  L_Mmc_Write_Sector45
  L_Mmc_Read_Cid46
  L_Mmc_Read_Cid47
  L_Mmc_Read_Cid48
  L_Mmc_Read_Cid49
  L_Mmc_Read_Cid50
  L_Mmc_Read_Cid51
  L_Mmc_Read_Csd52
  L_Mmc_Read_Csd53
  L_Mmc_Read_Csd54
  L_Mmc_Read_Csd55
  L_Mmc_Read_Csd56
  L_Mmc_Read_Csd57
  L___Lib_Mmc_Mmc_Wait_Data_Ready58
  L___Lib_Mmc_Mmc_Wait_Data_Ready59
  L_Mmc_Multi_Read_Start60
  L_Mmc_Multi_Read_Start61
  L_Mmc_Multi_Read_Start62
  L_Mmc_Multi_Read_Sector63
  L_Mmc_Multi_Read_Sector64
  L_Mmc_Multi_Read_Sector65
  L_Mmc_Multi_Read_Stop66
  L_Mmc_Multi_Read_Stop67
  L_Mmc_Multi_Read_Stop68
  L_Mmc_Multi_Read_Stop69
  L_Mmc_Multi_Read_Stop70
  L_Mmc_Multi_Read_Stop71
  L_Mmc_Multi_Read_Stop72
  L_Mmc_Multi_Read_Stop73
  L_Mmc_Multi_Read_Stop74
  L___Lib_Mmc_Mmc_Send_Command75
  L__Mmc_Multi_Read_Stop76
  L_end_Mmc_Select
  __Lib_Mmc_Mmc_Select
  L_end_Mmc_DeSelect
  __Lib_Mmc_Mmc_DeSelect
  L_end_Mmc_Send_Command
  __Lib_Mmc_Mmc_Send_Command
  L___Lib_Mmc_Mmc_Send_Command80
  L_end_Mmc_UnIdle
  __Lib_Mmc_Mmc_UnIdle
  L___Lib_Mmc_Mmc_UnIdle82
  L___Lib_Mmc_Mmc_UnIdle83
  L___Lib_Mmc_Mmc_UnIdle84
  L_end_Mmc_Init
  _Mmc_Init
  L__Mmc_Init86
  L__Mmc_Init87
  L__Mmc_Init88
  L_end_Mmc_Read_Sector
  _Mmc_Read_Sector
  L__Mmc_Read_Sector90
  L__Mmc_Read_Sector91
  L__Mmc_Read_Sector92
  L__Mmc_Read_Sector93
  L_end_Mmc_Write_Sector
  _Mmc_Write_Sector
  L__Mmc_Write_Sector95
  L__Mmc_Write_Sector96
  L__Mmc_Write_Sector97
  L__Mmc_Write_Sector98
  L__Mmc_Write_Sector99
  L_end_Mmc_Read_Cid
  _Mmc_Read_Cid
  L_end_Mmc_Read_Csd
  _Mmc_Read_Csd
  L_end_Mmc_Wait_Data_Ready
  __Lib_Mmc_Mmc_Wait_Data_Ready
  L_end_Mmc_Multi_Read_Start
  _Mmc_Multi_Read_Start
  L__Mmc_Multi_Read_Start104
  L__Mmc_Multi_Read_Start105
  L__Mmc_Multi_Read_Start106
  L_end_Mmc_Multi_Read_Sector
  _Mmc_Multi_Read_Sector
  L__Mmc_Multi_Read_Sector108
  L_end_Mmc_Multi_Read_Stop
  _Mmc_Multi_Read_Stop
  L__Mmc_Multi_Read_Stop110
  L_SPI1_Init_Advanced0
  L_SPI1_Init_Advanced1
  L_SPI1_Init_Advanced2
  L_SPI1_Init_Advanced3
  L_SPI1_Init_Advanced4
  L_SPI1_Init_Advanced5
  L_SPI1_Read6
  L_SPI1_Read7
  L_SPI1_Write8
  L_SPI1_Write9
  L_end_SPI1_Init
  _SPI1_Init
  L_end_SPI1_Init_Advanced
  _SPI1_Init_Advanced
  L_end_SPI1_Read
  _SPI1_Read
  L_end_SPI1_Write
  _SPI1_Write
  L_end_SPI_Set_Active
  _SPI_Set_Active
  L_end_SPI_Read
  _SPI_Read
  L_end_SPI_Write
  _SPI_Write
  _CC2D_Loop1
  _CC2DL_Loop1
  L_loopCA2AWs
  L_loopCCA2AWs
  L_loopCS2Ss
  L_CS2Send
  L_loopCCS2Ss
  L_CCS2Send
  L_loopFZinSWs
  L_longjmp7
  L_end___CC2D
  ___CC2D
  L_end___CC2DW
  ___CC2DW
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end_____DoIFC
  _____DoIFC
  L_end_Swap
  _Swap
  L_end_setjmp
  _setjmp
  L_end_longjmp
  _longjmp
  L_codeToRam0
  L_codeToRam1
  L_codeToRam2
  L_main3
  L_main4
  L_main5
  L_main6
  L_main7
  L_main8
  L_main9
  L_main10
  L_main11
  L_main12
  L_main13
  L_main14
  L_main15
  L_main16
  L_main17
  L_main18
  L_main19
  L_main20
  L_main21
  L_main22
  L_main23
  L_main24
  L_main25
  L_main26
  L_main27
  L_main28
  L_main29
  L_main30
  L_main31
  L_main32
  L_main33
  L_main34
  L_main35
  L_main36
  L_main37
  L_main38
  L_main39
  L_main40
  L_main41
  L_main42
  L_main43
  L_main44
  L_main45
  L_main46
  L_main47
  L_main48
  L_main49
  L_main50
  L_main51
  L_main52
  L_main53
  L_main54
  L_interrupt55
  L_interrupt56
  L_interrupt57
  L_interrupt58
  L_interrupt59
  L_interrupt60
  L_interrupt61
  L_interrupt62
  L_interrupt63
  L_interrupt64
  L_timer1Config65
  L_timer1Config66
  L_timer1Config67
  L_end_codeToRam
  _codeToRam
  L_end_main
  _main
  L_end_interrupt
  _interrupt
  L__interrupt71
  L__interrupt72
  L__interrupt73
  L_end_timer1Config
  _timer1Config
